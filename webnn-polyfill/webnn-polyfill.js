!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=93)}([function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return hn})),n.d(t,"AdagradOptimizer",(function(){return fn})),n.d(t,"AdamOptimizer",(function(){return gn})),n.d(t,"AdamaxOptimizer",(function(){return vn})),n.d(t,"MomentumOptimizer",(function(){return In})),n.d(t,"Optimizer",(function(){return dn})),n.d(t,"OptimizerConstructors",(function(){return Sn})),n.d(t,"RMSPropOptimizer",(function(){return xn})),n.d(t,"SGDOptimizer",(function(){return wn})),n.d(t,"Tensor",(function(){return te.a})),n.d(t,"TensorBuffer",(function(){return te.b})),n.d(t,"Variable",(function(){return te.c})),n.d(t,"Rank",(function(){return On.a})),n.d(t,"sumOutType",(function(){return On.b})),n.d(t,"upcastType",(function(){return On.c})),n.d(t,"abs",(function(){return kn})),n.d(t,"acos",(function(){return _n})),n.d(t,"acosh",(function(){return Tn})),n.d(t,"add",(function(){return Yt})),n.d(t,"addN",(function(){return An})),n.d(t,"all",(function(){return Nn})),n.d(t,"any",(function(){return Cn})),n.d(t,"argMax",(function(){return En})),n.d(t,"argMin",(function(){return jn})),n.d(t,"asin",(function(){return $n})),n.d(t,"asinh",(function(){return Mn})),n.d(t,"atan",(function(){return zn})),n.d(t,"atan2",(function(){return Rn})),n.d(t,"atanh",(function(){return Fn})),n.d(t,"avgPool",(function(){return Jn})),n.d(t,"avgPool3d",(function(){return er})),n.d(t,"basicLSTMCell",(function(){return ir})),n.d(t,"batchToSpaceND",(function(){return or})),n.d(t,"batchNorm",(function(){return sr})),n.d(t,"batchNorm2d",(function(){return ur})),n.d(t,"batchNorm3d",(function(){return cr})),n.d(t,"batchNorm4d",(function(){return lr})),n.d(t,"bincount",(function(){return dr})),n.d(t,"broadcastArgs",(function(){return hr})),n.d(t,"broadcastTo",(function(){return pr})),n.d(t,"buffer",(function(){return ne})),n.d(t,"cast",(function(){return oe})),n.d(t,"ceil",(function(){return fr})),n.d(t,"clipByValue",(function(){return mr})),n.d(t,"clone",(function(){return se})),n.d(t,"complex",(function(){return br.a})),n.d(t,"concat",(function(){return tr})),n.d(t,"concat1d",(function(){return gr})),n.d(t,"concat2d",(function(){return kr})),n.d(t,"concat3d",(function(){return yr})),n.d(t,"concat4d",(function(){return vr})),n.d(t,"conv1d",(function(){return Ir})),n.d(t,"conv2d",(function(){return wr})),n.d(t,"conv2dTranspose",(function(){return Sr})),n.d(t,"conv3d",(function(){return Or})),n.d(t,"conv3dTranspose",(function(){return Tr})),n.d(t,"cos",(function(){return Ar})),n.d(t,"cosh",(function(){return Nr})),n.d(t,"cumsum",(function(){return Cr})),n.d(t,"denseBincount",(function(){return Er})),n.d(t,"depthToSpace",(function(){return jr})),n.d(t,"depthwiseConv2d",(function(){return $r})),n.d(t,"diag",(function(){return Mr})),n.d(t,"dilation2d",(function(){return zr})),n.d(t,"div",(function(){return Zt})),n.d(t,"divNoNan",(function(){return Br})),n.d(t,"dot",(function(){return Pr})),n.d(t,"einsum",(function(){return Dr})),n.d(t,"elu",(function(){return Gr})),n.d(t,"equal",(function(){return Rr})),n.d(t,"erf",(function(){return Lr})),n.d(t,"exp",(function(){return Wr})),n.d(t,"expandDims",(function(){return Ur})),n.d(t,"expm1",(function(){return Vr})),n.d(t,"eye",(function(){return qr})),n.d(t,"fill",(function(){return pn})),n.d(t,"floor",(function(){return Kr})),n.d(t,"floorDiv",(function(){return Xt})),n.d(t,"gather",(function(){return Yr})),n.d(t,"greater",(function(){return Xr})),n.d(t,"greaterEqual",(function(){return Zr})),n.d(t,"imag",(function(){return Qr})),n.d(t,"isFinite",(function(){return Jr})),n.d(t,"isInf",(function(){return ea})),n.d(t,"isNaN",(function(){return ta})),n.d(t,"leakyRelu",(function(){return na})),n.d(t,"less",(function(){return ra})),n.d(t,"lessEqual",(function(){return aa})),n.d(t,"linspace",(function(){return ia})),n.d(t,"localResponseNormalization",(function(){return oa})),n.d(t,"log",(function(){return sa})),n.d(t,"log1p",(function(){return ua})),n.d(t,"logSigmoid",(function(){return da})),n.d(t,"logSoftmax",(function(){return fa})),n.d(t,"logSumExp",(function(){return xa})),n.d(t,"logicalAnd",(function(){return Sa})),n.d(t,"logicalNot",(function(){return Oa})),n.d(t,"logicalOr",(function(){return _a})),n.d(t,"logicalXor",(function(){return Ta})),n.d(t,"matMul",(function(){return Ne})),n.d(t,"max",(function(){return ha})),n.d(t,"maxPool",(function(){return Aa})),n.d(t,"maxPool3d",(function(){return Na})),n.d(t,"maxPoolWithArgmax",(function(){return Ca})),n.d(t,"maximum",(function(){return yn})),n.d(t,"mean",(function(){return Ea})),n.d(t,"meshgrid",(function(){return Ma})),n.d(t,"min",(function(){return za})),n.d(t,"minimum",(function(){return Ra})),n.d(t,"mirrorPad",(function(){return Fa})),n.d(t,"mod",(function(){return Ba})),n.d(t,"moments",(function(){return Pa})),n.d(t,"mul",(function(){return Qt})),n.d(t,"multiRNNCell",(function(){return Da})),n.d(t,"multinomial",(function(){return Ga})),n.d(t,"neg",(function(){return ca})),n.d(t,"notEqual",(function(){return La})),n.d(t,"oneHot",(function(){return Ce})),n.d(t,"ones",(function(){return $a})),n.d(t,"onesLike",(function(){return Wa})),n.d(t,"outerProduct",(function(){return Ua})),n.d(t,"pad",(function(){return Va})),n.d(t,"pad1d",(function(){return Ha})),n.d(t,"pad2d",(function(){return qa})),n.d(t,"pad3d",(function(){return Ka})),n.d(t,"pad4d",(function(){return Ya})),n.d(t,"pool",(function(){return Za})),n.d(t,"pow",(function(){return mn})),n.d(t,"prelu",(function(){return Qa})),n.d(t,"print",(function(){return ue})),n.d(t,"prod",(function(){return Ja})),n.d(t,"rand",(function(){return ei})),n.d(t,"randomGamma",(function(){return ii})),n.d(t,"randomNormal",(function(){return oi})),n.d(t,"randomUniform",(function(){return si})),n.d(t,"range",(function(){return ui})),n.d(t,"real",(function(){return ci})),n.d(t,"reciprocal",(function(){return li})),n.d(t,"relu",(function(){return di})),n.d(t,"relu6",(function(){return hi})),n.d(t,"reshape",(function(){return Qn})),n.d(t,"reverse",(function(){return pi})),n.d(t,"reverse1d",(function(){return fi})),n.d(t,"reverse2d",(function(){return mi})),n.d(t,"reverse3d",(function(){return bi})),n.d(t,"reverse4d",(function(){return gi})),n.d(t,"round",(function(){return ki})),n.d(t,"rsqrt",(function(){return yi})),n.d(t,"scalar",(function(){return ln})),n.d(t,"selu",(function(){return vi})),n.d(t,"separableConv2d",(function(){return wi})),n.d(t,"setdiff1dAsync",(function(){return Ii})),n.d(t,"sigmoid",(function(){return nr})),n.d(t,"sign",(function(){return xi})),n.d(t,"sin",(function(){return Si})),n.d(t,"sinh",(function(){return Oi})),n.d(t,"slice",(function(){return rr})),n.d(t,"slice1d",(function(){return _i})),n.d(t,"slice2d",(function(){return Ti})),n.d(t,"slice3d",(function(){return Ai})),n.d(t,"slice4d",(function(){return Ni})),n.d(t,"softmax",(function(){return Ci})),n.d(t,"softplus",(function(){return la})),n.d(t,"spaceToBatchND",(function(){return Xa})),n.d(t,"fft",(function(){return Ei})),n.d(t,"ifft",(function(){return ji})),n.d(t,"irfft",(function(){return $i})),n.d(t,"rfft",(function(){return zi})),n.d(t,"split",(function(){return Mi})),n.d(t,"sqrt",(function(){return Jt})),n.d(t,"square",(function(){return en})),n.d(t,"squaredDifference",(function(){return Ri})),n.d(t,"squeeze",(function(){return Fi})),n.d(t,"stack",(function(){return Bi})),n.d(t,"step",(function(){return Pi})),n.d(t,"stridedSlice",(function(){return Di})),n.d(t,"sub",(function(){return bn})),n.d(t,"sum",(function(){return pa})),n.d(t,"tan",(function(){return Gi})),n.d(t,"tanh",(function(){return ar})),n.d(t,"tensor",(function(){return Li.a})),n.d(t,"tensor1d",(function(){return Wi})),n.d(t,"tensor2d",(function(){return Ui})),n.d(t,"tensor3d",(function(){return Be})),n.d(t,"tensor4d",(function(){return Vi})),n.d(t,"tensor5d",(function(){return Hi})),n.d(t,"tensor6d",(function(){return qi})),n.d(t,"tile",(function(){return Hr})),n.d(t,"topk",(function(){return Ki})),n.d(t,"truncatedNormal",(function(){return Yi})),n.d(t,"unique",(function(){return Xi})),n.d(t,"unsortedSegmentSum",(function(){return Zi})),n.d(t,"unstack",(function(){return Qi})),n.d(t,"variable",(function(){return Ji})),n.d(t,"where",(function(){return Fr})),n.d(t,"whereAsync",(function(){return to})),n.d(t,"zeros",(function(){return ja})),n.d(t,"zerosLike",(function(){return tn})),n.d(t,"booleanMaskAsync",(function(){return no})),n.d(t,"transpose",(function(){return Ee})),n.d(t,"norm",(function(){return ao})),n.d(t,"movingAverage",(function(){return io})),n.d(t,"scatterND",(function(){return oo})),n.d(t,"sparseToDense",(function(){return so})),n.d(t,"gatherND",(function(){return uo})),n.d(t,"dropout",(function(){return co})),n.d(t,"enclosingPowerOfTwo",(function(){return lo})),n.d(t,"cosineWindow",(function(){return ho})),n.d(t,"inTopKAsync",(function(){return po})),n.d(t,"op",(function(){return ie.b})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return ie.a})),n.d(t,"image",(function(){return ws})),n.d(t,"linalg",(function(){return Is})),n.d(t,"losses",(function(){return xs})),n.d(t,"spectral",(function(){return ys})),n.d(t,"fused",(function(){return h})),n.d(t,"signal",(function(){return vs})),n.d(t,"sparse",(function(){return Ss})),n.d(t,"string",(function(){return Os})),n.d(t,"Reduction",(function(){return ns})),n.d(t,"train",(function(){return _s})),n.d(t,"enableProdMode",(function(){return At})),n.d(t,"enableDebugMode",(function(){return Nt})),n.d(t,"disableDeprecationWarnings",(function(){return Ct})),n.d(t,"deprecationWarn",(function(){return Et})),n.d(t,"disposeVariables",(function(){return jt})),n.d(t,"engine",(function(){return $t})),n.d(t,"memory",(function(){return Mt})),n.d(t,"profile",(function(){return zt})),n.d(t,"tidy",(function(){return Rt})),n.d(t,"dispose",(function(){return Ft})),n.d(t,"keep",(function(){return Bt})),n.d(t,"time",(function(){return Pt})),n.d(t,"setBackend",(function(){return Dt})),n.d(t,"ready",(function(){return Gt})),n.d(t,"getBackend",(function(){return Lt})),n.d(t,"removeBackend",(function(){return Wt})),n.d(t,"findBackend",(function(){return Ut})),n.d(t,"findBackendFactory",(function(){return Vt})),n.d(t,"registerBackend",(function(){return Ht})),n.d(t,"backend",(function(){return qt})),n.d(t,"setPlatform",(function(){return Kt})),n.d(t,"getKernel",(function(){return Re.c})),n.d(t,"getGradient",(function(){return Re.b})),n.d(t,"getKernelsForBackend",(function(){return Re.d})),n.d(t,"registerKernel",(function(){return Re.f})),n.d(t,"registerGradient",(function(){return Re.e})),n.d(t,"unregisterKernel",(function(){return Re.h})),n.d(t,"unregisterGradient",(function(){return Re.g})),n.d(t,"copyRegisteredKernels",(function(){return Re.a})),n.d(t,"customGrad",(function(){return un})),n.d(t,"grad",(function(){return nn})),n.d(t,"grads",(function(){return rn})),n.d(t,"valueAndGrad",(function(){return an})),n.d(t,"valueAndGrads",(function(){return on})),n.d(t,"variableGrads",(function(){return sn})),n.d(t,"Environment",(function(){return g.b})),n.d(t,"env",(function(){return g.c})),n.d(t,"ENV",(function(){return g.a})),n.d(t,"version_core",(function(){return Tt})),n.d(t,"nextFrame",(function(){return Ts.a})),n.d(t,"browser",(function(){return o})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return l})),n.d(t,"test_util",(function(){return d})),n.d(t,"util",(function(){return mt})),n.d(t,"backend_util",(function(){return f})),n.d(t,"broadcast_util",(function(){return i})),n.d(t,"tensor_util",(function(){return Ae})),n.d(t,"slice_util",(function(){return c})),n.d(t,"gather_util",(function(){return s})),n.d(t,"scatter_util",(function(){return u})),n.d(t,"device_util",(function(){return Tu})),n.d(t,"kernel_impls",(function(){return m})),n.d(t,"KernelBackend",(function(){return Au.b})),n.d(t,"DataStorage",(function(){return Au.a})),n.d(t,"Abs",(function(){return re.a})),n.d(t,"Acos",(function(){return re.b})),n.d(t,"Acosh",(function(){return re.c})),n.d(t,"Add",(function(){return re.d})),n.d(t,"AddN",(function(){return re.e})),n.d(t,"All",(function(){return re.f})),n.d(t,"Any",(function(){return re.g})),n.d(t,"ArgMax",(function(){return re.h})),n.d(t,"ArgMin",(function(){return re.i})),n.d(t,"Asin",(function(){return re.j})),n.d(t,"Asinh",(function(){return re.k})),n.d(t,"Atan",(function(){return re.l})),n.d(t,"Atanh",(function(){return re.n})),n.d(t,"Atan2",(function(){return re.m})),n.d(t,"AvgPool",(function(){return re.o})),n.d(t,"AvgPoolGrad",(function(){return re.r})),n.d(t,"AvgPool3D",(function(){return re.p})),n.d(t,"AvgPool3DGrad",(function(){return re.q})),n.d(t,"BatchMatMul",(function(){return re.s})),n.d(t,"BatchToSpaceND",(function(){return re.t})),n.d(t,"Bincount",(function(){return re.u})),n.d(t,"BroadcastTo",(function(){return re.w})),n.d(t,"BroadcastArgs",(function(){return re.v})),n.d(t,"Cast",(function(){return re.x})),n.d(t,"Ceil",(function(){return re.y})),n.d(t,"ClipByValue",(function(){return re.z})),n.d(t,"Complex",(function(){return re.A})),n.d(t,"ComplexAbs",(function(){return re.B})),n.d(t,"Concat",(function(){return re.C})),n.d(t,"Conv2D",(function(){return re.D})),n.d(t,"Conv2DBackpropFilter",(function(){return re.E})),n.d(t,"Conv2DBackpropInput",(function(){return re.F})),n.d(t,"Conv3D",(function(){return re.G})),n.d(t,"Conv3DBackpropFilterV2",(function(){return re.H})),n.d(t,"Conv3DBackpropInputV2",(function(){return re.I})),n.d(t,"Cos",(function(){return re.J})),n.d(t,"Cosh",(function(){return re.K})),n.d(t,"Cumsum",(function(){return re.M})),n.d(t,"CropAndResize",(function(){return re.L})),n.d(t,"DenseBincount",(function(){return re.N})),n.d(t,"DepthToSpace",(function(){return re.O})),n.d(t,"DepthwiseConv2dNative",(function(){return re.P})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return re.Q})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return re.R})),n.d(t,"Diag",(function(){return re.S})),n.d(t,"Dilation2D",(function(){return re.T})),n.d(t,"Dilation2DBackpropInput",(function(){return re.V})),n.d(t,"Dilation2DBackpropFilter",(function(){return re.U})),n.d(t,"RealDiv",(function(){return re.mc})),n.d(t,"Einsum",(function(){return re.W})),n.d(t,"Elu",(function(){return re.X})),n.d(t,"EluGrad",(function(){return re.Y})),n.d(t,"Erf",(function(){return re.ab})),n.d(t,"Equal",(function(){return re.Z})),n.d(t,"Exp",(function(){return re.bb})),n.d(t,"ExpandDims",(function(){return re.cb})),n.d(t,"Expm1",(function(){return re.db})),n.d(t,"FFT",(function(){return re.eb})),n.d(t,"Fill",(function(){return re.fb})),n.d(t,"FlipLeftRight",(function(){return re.gb})),n.d(t,"Floor",(function(){return re.hb})),n.d(t,"FloorDiv",(function(){return re.ib})),n.d(t,"FusedBatchNorm",(function(){return re.kb})),n.d(t,"GatherV2",(function(){return re.ob})),n.d(t,"GatherNd",(function(){return re.nb})),n.d(t,"Greater",(function(){return re.pb})),n.d(t,"GreaterEqual",(function(){return re.qb})),n.d(t,"Identity",(function(){return re.sb})),n.d(t,"IFFT",(function(){return re.rb})),n.d(t,"Imag",(function(){return re.tb})),n.d(t,"IsFinite",(function(){return re.ub})),n.d(t,"IsInf",(function(){return re.vb})),n.d(t,"IsNan",(function(){return re.wb})),n.d(t,"LeakyRelu",(function(){return re.zb})),n.d(t,"Less",(function(){return re.Ab})),n.d(t,"LessEqual",(function(){return re.Bb})),n.d(t,"LinSpace",(function(){return re.Cb})),n.d(t,"Log",(function(){return re.Db})),n.d(t,"Log1p",(function(){return re.Eb})),n.d(t,"LogicalAnd",(function(){return re.Gb})),n.d(t,"LogicalNot",(function(){return re.Hb})),n.d(t,"LogicalOr",(function(){return re.Ib})),n.d(t,"LogSoftmax",(function(){return re.Fb})),n.d(t,"LRN",(function(){return re.xb})),n.d(t,"LRNGrad",(function(){return re.yb})),n.d(t,"Max",(function(){return re.Jb})),n.d(t,"Maximum",(function(){return re.Pb})),n.d(t,"MaxPool",(function(){return re.Kb})),n.d(t,"MaxPoolGrad",(function(){return re.Nb})),n.d(t,"MaxPool3D",(function(){return re.Lb})),n.d(t,"MaxPool3DGrad",(function(){return re.Mb})),n.d(t,"MaxPoolWithArgmax",(function(){return re.Ob})),n.d(t,"Mean",(function(){return re.Qb})),n.d(t,"Min",(function(){return re.Rb})),n.d(t,"Minimum",(function(){return re.Sb})),n.d(t,"MirrorPad",(function(){return re.Tb})),n.d(t,"Mod",(function(){return re.Ub})),n.d(t,"Multinomial",(function(){return re.Vb})),n.d(t,"Multiply",(function(){return re.Wb})),n.d(t,"Neg",(function(){return re.Xb})),n.d(t,"NotEqual",(function(){return re.bc})),n.d(t,"NonMaxSuppressionV3",(function(){return re.Yb})),n.d(t,"NonMaxSuppressionV4",(function(){return re.Zb})),n.d(t,"NonMaxSuppressionV5",(function(){return re.ac})),n.d(t,"OnesLike",(function(){return re.dc})),n.d(t,"OneHot",(function(){return re.cc})),n.d(t,"Pack",(function(){return re.ec})),n.d(t,"PadV2",(function(){return re.fc})),n.d(t,"Pool",(function(){return re.gc})),n.d(t,"Pow",(function(){return re.hc})),n.d(t,"Prelu",(function(){return re.ic})),n.d(t,"Prod",(function(){return re.jc})),n.d(t,"Range",(function(){return re.kc})),n.d(t,"Real",(function(){return re.lc})),n.d(t,"Reciprocal",(function(){return re.nc})),n.d(t,"Relu",(function(){return re.oc})),n.d(t,"Reshape",(function(){return re.qc})),n.d(t,"ResizeNearestNeighbor",(function(){return re.tc})),n.d(t,"ResizeNearestNeighborGrad",(function(){return re.uc})),n.d(t,"ResizeBilinear",(function(){return re.rc})),n.d(t,"ResizeBilinearGrad",(function(){return re.sc})),n.d(t,"Relu6",(function(){return re.pc})),n.d(t,"Reverse",(function(){return re.vc})),n.d(t,"Round",(function(){return re.xc})),n.d(t,"Rsqrt",(function(){return re.yc})),n.d(t,"ScatterNd",(function(){return re.zc})),n.d(t,"Select",(function(){return re.Ac})),n.d(t,"Selu",(function(){return re.Bc})),n.d(t,"Slice",(function(){return re.Gc})),n.d(t,"Sin",(function(){return re.Ec})),n.d(t,"Sinh",(function(){return re.Fc})),n.d(t,"Sign",(function(){return re.Dc})),n.d(t,"Sigmoid",(function(){return re.Cc})),n.d(t,"Softplus",(function(){return re.Ic})),n.d(t,"Sqrt",(function(){return re.Qc})),n.d(t,"Sum",(function(){return re.Zc})),n.d(t,"SpaceToBatchND",(function(){return re.Jc})),n.d(t,"SplitV",(function(){return re.Pc})),n.d(t,"Softmax",(function(){return re.Hc})),n.d(t,"SparseFillEmptyRows",(function(){return re.Kc})),n.d(t,"SparseReshape",(function(){return re.Lc})),n.d(t,"SparseSegmentMean",(function(){return re.Mc})),n.d(t,"SparseSegmentSum",(function(){return re.Nc})),n.d(t,"SparseToDense",(function(){return re.Oc})),n.d(t,"SquaredDifference",(function(){return re.Sc})),n.d(t,"Square",(function(){return re.Rc})),n.d(t,"StridedSlice",(function(){return re.Uc})),n.d(t,"StringNGrams",(function(){return re.Vc})),n.d(t,"StringSplit",(function(){return re.Wc})),n.d(t,"StringToHashBucketFast",(function(){return re.Xc})),n.d(t,"Sub",(function(){return re.Yc})),n.d(t,"Tan",(function(){return re.ad})),n.d(t,"Tanh",(function(){return re.bd})),n.d(t,"Tile",(function(){return re.cd})),n.d(t,"TopK",(function(){return re.dd})),n.d(t,"Transform",(function(){return re.ed})),n.d(t,"Transpose",(function(){return re.fd})),n.d(t,"Unique",(function(){return re.gd})),n.d(t,"Unpack",(function(){return re.hd})),n.d(t,"UnsortedSegmentSum",(function(){return re.id})),n.d(t,"ZerosLike",(function(){return re.jd})),n.d(t,"Step",(function(){return re.Tc})),n.d(t,"FromPixels",(function(){return re.jb})),n.d(t,"RotateWithOffset",(function(){return re.wc})),n.d(t,"_FusedMatMul",(function(){return re.kd})),n.d(t,"FusedConv2D",(function(){return re.lb})),n.d(t,"FusedDepthwiseConv2D",(function(){return re.mb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return Q})),n.d(r,"listModels",(function(){return X})),n.d(r,"moveModel",(function(){return J})),n.d(r,"removeModel",(function(){return Z})),n.d(r,"browserFiles",(function(){return pe})),n.d(r,"browserHTTPRequest",(function(){return xe})),n.d(r,"concatenateArrayBuffers",(function(){return k.d})),n.d(r,"decodeWeights",(function(){return k.e})),n.d(r,"encodeWeights",(function(){return k.f})),n.d(r,"fromMemory",(function(){return _e})),n.d(r,"getLoadHandlers",(function(){return x})),n.d(r,"getModelArtifactsForJSON",(function(){return k.g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return k.h})),n.d(r,"getSaveHandlers",(function(){return I})),n.d(r,"http",(function(){return Ie})),n.d(r,"isHTTPScheme",(function(){return ve})),n.d(r,"loadWeights",(function(){return ge})),n.d(r,"registerLoadRouter",(function(){return w})),n.d(r,"registerSaveRouter",(function(){return v})),n.d(r,"weightsLoaderFactory",(function(){return ke})),n.d(r,"withSaveHandler",(function(){return Te}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return je}));var i={};n.r(i),n.d(i,"getBroadcastDims",(function(){return $e})),n.d(i,"getReductionAxes",(function(){return Me})),n.d(i,"assertAndGetBroadcastShape",(function(){return ze}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return Le})),n.d(o,"toPixels",(function(){return We})),n.d(o,"fromPixels",(function(){return Ue}));var s={};n.r(s),n.d(s,"prepareAndValidate",(function(){return Ve}));var u={};n.r(u),n.d(u,"validateUpdateShape",(function(){return He})),n.d(u,"validateInput",(function(){return qe})),n.d(u,"calculateShapes",(function(){return Ke}));var c={};n.r(c),n.d(c,"assertParamsValid",(function(){return Ye})),n.d(c,"maskToAxes",(function(){return Xe})),n.d(c,"computeOutShape",(function(){return Ze})),n.d(c,"stridesWithElidedDims",(function(){return Qe})),n.d(c,"getNormalizedAxes",(function(){return tt})),n.d(c,"startIndicesWithElidedDims",(function(){return nt})),n.d(c,"stopIndicesWithElidedDims",(function(){return rt})),n.d(c,"stridesForAxis",(function(){return at})),n.d(c,"startForAxis",(function(){return it})),n.d(c,"stopForAxis",(function(){return ot})),n.d(c,"isSliceContinous",(function(){return st})),n.d(c,"computeFlatOffset",(function(){return ut})),n.d(c,"parseSliceParams",(function(){return ct})),n.d(c,"sliceInfo",(function(){return lt}));var l={};n.r(l),n.d(l,"Serializable",(function(){return ht})),n.d(l,"SerializationMap",(function(){return pt})),n.d(l,"registerClass",(function(){return ft}));var d={};n.r(d),n.d(d,"TEST_EPSILON_FLOAT16",(function(){return bt})),n.d(d,"expectArraysClose",(function(){return gt})),n.d(d,"testEpsilon",(function(){return kt})),n.d(d,"expectPromiseToFail",(function(){return vt})),n.d(d,"expectArraysEqual",(function(){return wt})),n.d(d,"expectNumbersClose",(function(){return It})),n.d(d,"expectValuesInRange",(function(){return St})),n.d(d,"expectArrayBuffersEqual",(function(){return Ot})),n.d(d,"encodeStrings",(function(){return _t}));var h={};n.r(h),n.d(h,"conv2d",(function(){return yo})),n.d(h,"depthwiseConv2d",(function(){return Io})),n.d(h,"matMul",(function(){return xo}));var p={};n.r(p),n.d(p,"segOpComputeOptimalWindowSize",(function(){return Iu})),n.d(p,"computeOutShape",(function(){return xu})),n.d(p,"collectGatherOpShapeInfo",(function(){return Su}));var f={};n.r(f),n.d(f,"axesAreInnerMostDims",(function(){return ma})),n.d(f,"combineLocations",(function(){return ba})),n.d(f,"computeOutAndReduceShapes",(function(){return ga})),n.d(f,"expandShapeToKeepDim",(function(){return ka})),n.d(f,"assertAxesAreInnerMostDims",(function(){return ya})),n.d(f,"getAxesPermutation",(function(){return va})),n.d(f,"getUndoAxesPermutation",(function(){return wa})),n.d(f,"getInnerMostAxes",(function(){return Ia})),n.d(f,"getBroadcastDims",(function(){return $e})),n.d(f,"getReductionAxes",(function(){return Me})),n.d(f,"assertAndGetBroadcastShape",(function(){return ze})),n.d(f,"assertParamsConsistent",(function(){return As})),n.d(f,"computeOutShape",(function(){return Ns})),n.d(f,"computeDilation2DInfo",(function(){return Bn})),n.d(f,"computePool2DInfo",(function(){return Pn})),n.d(f,"computePool3DInfo",(function(){return Dn})),n.d(f,"computeConv2DInfo",(function(){return Gn})),n.d(f,"computeConv3DInfo",(function(){return Ln})),n.d(f,"computeDefaultPad",(function(){return Wn})),n.d(f,"tupleValuesAreOne",(function(){return Kn})),n.d(f,"eitherStridesOrDilationsAreOne",(function(){return Yn})),n.d(f,"convertConv2DDataFormat",(function(){return Xn})),n.d(f,"checkPadOnDimRoundingMode",(function(){return Zn})),n.d(f,"getFusedDyActivation",(function(){return mo})),n.d(f,"getFusedBiasGradient",(function(){return bo})),n.d(f,"applyActivation",(function(){return go})),n.d(f,"shouldFuse",(function(){return ko})),n.d(f,"PARALLELIZE_THRESHOLD",(function(){return Cs})),n.d(f,"computeOptimalWindowSize",(function(){return Es})),n.d(f,"slice_util",(function(){return c})),n.d(f,"upcastType",(function(){return On.c})),n.d(f,"getImageCenter",(function(){return js})),n.d(f,"getReshaped",(function(){return $s})),n.d(f,"getPermuted",(function(){return Ms})),n.d(f,"getReshapedPermuted",(function(){return zs})),n.d(f,"getSliceBeginCoords",(function(){return Rs})),n.d(f,"getSliceSize",(function(){return Fs})),n.d(f,"prepareAndValidate",(function(){return Ve})),n.d(f,"validateUpdateShape",(function(){return He})),n.d(f,"validateInput",(function(){return qe})),n.d(f,"calculateShapes",(function(){return Ke})),n.d(f,"SELU_SCALEALPHA",(function(){return Bs})),n.d(f,"SELU_SCALE",(function(){return Ps})),n.d(f,"ERF_P",(function(){return Ds})),n.d(f,"ERF_A1",(function(){return Gs})),n.d(f,"ERF_A2",(function(){return Ls})),n.d(f,"ERF_A3",(function(){return Ws})),n.d(f,"ERF_A4",(function(){return Us})),n.d(f,"ERF_A5",(function(){return Vs})),n.d(f,"warn",(function(){return Hs.b})),n.d(f,"log",(function(){return Hs.a})),n.d(f,"mergeRealAndImagArrays",(function(){return qs})),n.d(f,"splitRealAndImagArrays",(function(){return Ks})),n.d(f,"complexWithEvenIndex",(function(){return Ys})),n.d(f,"complexWithOddIndex",(function(){return Xs})),n.d(f,"getComplexWithIndex",(function(){return Zs})),n.d(f,"assignToTypedArray",(function(){return Qs})),n.d(f,"exponents",(function(){return Js})),n.d(f,"exponent",(function(){return eu})),n.d(f,"decodeEinsumEquation",(function(){return ru})),n.d(f,"getEinsumPermutation",(function(){return au})),n.d(f,"checkEinsumDimSizes",(function(){return iu})),n.d(f,"getEinsumComputePath",(function(){return ou})),n.d(f,"isIdentityPermutation",(function(){return su})),n.d(f,"prepareSplitSize",(function(){return cu})),n.d(f,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return lu})),n.d(f,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return du})),n.d(f,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return hu})),n.d(f,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return pu})),n.d(f,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return fu})),n.d(f,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return mu})),n.d(f,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return bu})),n.d(f,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return gu})),n.d(f,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return ku})),n.d(f,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return yu})),n.d(f,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return vu})),n.d(f,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return wu})),n.d(f,"segment_util",(function(){return p})),n.d(f,"fromUint8ToStringArray",(function(){return Ou})),n.d(f,"fromStringArrayToUint8",(function(){return _u}));var m={};n.r(m),n.d(m,"nonMaxSuppressionV3Impl",(function(){return Ro})),n.d(m,"nonMaxSuppressionV4Impl",(function(){return Fo})),n.d(m,"nonMaxSuppressionV5Impl",(function(){return Bo})),n.d(m,"whereImpl",(function(){return eo}));var b=n(3),g=(n(47),n(9)),k=n(16);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class y{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==y.instance&&(y.instance=new y),y.instance}static registerSaveRouter(e){y.getInstance().saveRouters.push(e)}static registerLoadRouter(e){y.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return y.getHandlers(e,"save")}static getLoadHandlers(e,t){return y.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?y.getInstance().loadRouters:y.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const v=e=>y.registerSaveRouter(e),w=e=>y.registerLoadRouter(e),I=e=>y.getSaveHandlers(e),x=(e,t)=>y.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,S="tensorflowjs",O="models_store",_="model_info_store";function T(){if(!Object(g.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function A(e){const t=e.result;t.createObjectStore(O,{keyPath:"modelPath"}),t.createObjectStore(_,{keyPath:"modelPath"})}class N{constructor(e){if(this.indexedDB=T(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>A(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(O,"readonly"),r=t.objectStore(O).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(k.h)(t),i=a.transaction(_,"readwrite");let o=i.objectStore(_);const s=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;s.onsuccess=()=>{u=a.transaction(O,"readwrite");const s=u.objectStore(O).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});s.onsuccess=()=>e({modelArtifactsInfo:r}),s.onerror=e=>{o=i.objectStore(_);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(s.error)),t.onerror=e=>(a.close(),n(s.error))}},s.onerror=e=>(a.close(),n(s.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}N.URL_SCHEME="indexeddb://";const C=e=>{return Object(g.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(N.URL_SCHEME)?(t=e.slice(N.URL_SCHEME.length),new N(t)):null;var t};y.registerSaveRouter(C),y.registerLoadRouter(C);class E{constructor(){this.indexedDB=T()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(S,1);n.onupgradeneeded=()=>A(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(_,"readonly"),i=a.objectStore(_).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(N.URL_SCHEME)?t.slice(N.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(S,1);r.onupgradeneeded=()=>A(r),r.onsuccess=()=>{const a=r.result,i=a.transaction(_,"readwrite"),o=i.objectStore(_),s=o.get(e);let u;s.onsuccess=()=>{if(null==s.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),i=()=>{u=a.transaction(O,"readwrite");const r=u.objectStore(O).delete(e);r.onsuccess=()=>t(s.result.modelArtifactsInfo),r.onerror=e=>n(s.error)};r.onsuccess=i,r.onerror=e=>(i(),a.close(),n(s.error))}},s.onerror=e=>(a.close(),n(s.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var j=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $="/",M="tensorflowjs_models",z="info",R="model_topology",F="weight_specs",B="weight_data",P="model_metadata";function D(e){return{info:[M,e,z].join($),topology:[M,e,R].join($),weightSpecs:[M,e,F].join($),weightData:[M,e,B].join($),modelMetadata:[M,e,P].join($)}}function G(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function L(e){const t=e.split($);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join($)}class W{constructor(e){if(!Object(g.c)().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=D(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(k.h)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(k.a)(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw G(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(k.b)(i),t}}W.URL_SCHEME="localstorage://";const U=e=>{return Object(g.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(W.URL_SCHEME)?(t=e.slice(W.URL_SCHEME.length),new W(t)):null;var t};y.registerSaveRouter(U),y.registerLoadRouter(U);class V{constructor(){Object(j.b)(Object(g.c)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(j.b)("undefined"==typeof window||"undefined"!=typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=M+$,n=$+z;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[L(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=D(e=(t=e).startsWith(W.URL_SCHEME)?t.slice(W.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return G(n),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H="://";class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(e,t){Object(j.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(H)&&(e=e.slice(0,e.indexOf(H))),Object(j.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=q.getInstance();Object(j.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function K(e){if(-1===e.indexOf(H))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${q.getSchemes().join(",")}`);return{scheme:e.split(H)[0],path:e.split(H)[1]}}async function Y(e,t,n=!1){Object(j.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=y.getLoadHandlers(e);Object(j.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(j.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],i=y.getSaveHandlers(t);Object(j.b)(i.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(j.b)(i.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=i[0],s=K(e).scheme,u=K(e).path,c=s===K(e).scheme,l=await a.load();n&&c&&await q.getManager(s).removeModel(u);const d=await o.save(l);return n&&!c&&await q.getManager(s).removeModel(u),d.modelArtifactsInfo}async function X(){const e=q.getSchemes(),t={};for(const n of e){const e=await q.getManager(n).listModels();for(const r in e){t[n+H+r]=e[r]}}return t}async function Z(e){const t=K(e);return q.getManager(t.scheme).removeModel(t.path)}async function Q(e,t){return Y(e,t,!1)}async function J(e,t){return Y(e,t,!0)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ee{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(g.c)().get("IS_BROWSER")){Object(g.c)().setPlatform("browser",new ee);try{q.registerManager(W.URL_SCHEME,new V)}catch(e){}try{q.registerManager(N.URL_SCHEME,new E)}catch(e){}}n(99);var te=n(14);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ne(e,t="float32",n){return t=t||"float32",j.c(e),new te.b(e,t,n)}var re=n(4),ae=n(1),ie=n(2);const oe=Object(ie.b)({cast_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(ae.a)(e,"x","cast");if(!j.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return b.a.runKernel(re.x,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se=Object(ie.b)({clone_:function(e){const t={x:Object(ae.a)(e,"x","clone","string_or_numeric")};return b.a.runKernel(re.sb,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(b.b)();const ce={buffer:ne,cast:oe,clone:se,print:ue};Object(te.e)(ce);function le(e){return new Promise((e=>setTimeout(e))).then(e)}class de{constructor(e){if(!Object(g.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(de.URL_SCHEME)&&(e=e.slice(de.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(k.i)(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await le((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await le((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(k.h)(e)}}}}de.URL_SCHEME="downloads://";class he{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const i=Object(k.g)(r,(e=>this.loadWeights(e)));e(i)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Object(k.d)(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Object(k.c)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Object(k.c)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function pe(e){return new he(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(e,t,n,r){!function(e){Object(j.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(j.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(j.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(j.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((i=>(i.then((i=>{const o=n+ ++a/e.length*(r-n);return t(o),i})),i))))}y.registerSaveRouter((e=>Object(g.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(de.URL_SCHEME)?function(e="model"){return new de(e)}(e.slice(de.URL_SCHEME.length)):null));var me=n(49);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function be(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(g.c)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await fe(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await fe(a,t.onProgress,.5,1)}async function ge(e,t="",n,r){return ke((e=>be(e,{requestInit:r})))(e,t,n)}function ke(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),i={},o=null!=r?r.map((()=>!1)):[],s=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=me.a[u]*j.O(e.shape),l=()=>{a[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),o[n]=!0)})):l(),s.push(e.name),n+=c}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${s.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),d={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let s=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);o.set(t,s),s+=t.byteLength}i[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(k.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]})),h+=n})),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ye{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(j.b)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(g.c)().platform.fetch,Object(j.b)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(j.b)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(k.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(k.h)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(k.g)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,i=[];for(const t of e)i.push(...t.weights);const o=[],s=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(s));const u=await be(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,Object(k.d)(u)]}}function ve(e){return null!=e.match(ye.URL_SCHEME_REGEX)}ye.URL_SCHEME_REGEX=/^https?:\/\//;const we=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ve(e))):ve(e),n)return Ie(e,t)}return null};function Ie(e,t){return new ye(e,t)}function xe(e,t){return Ie(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */y.registerSaveRouter(we),y.registerLoadRouter(we);class Se{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Oe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function _e(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Se(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Se({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Se({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Te(e){return new Oe(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ae=n(10);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ne=Object(ie.b)({matMul_:function(e,t,n=!1,r=!1){let a=Object(ae.a)(e,"a","matMul"),i=Object(ae.a)(t,"b","matMul");[a,i]=Object(Ae.makeTypesMatch)(a,i);const o={a:a,b:i},s={transposeA:n,transposeB:r};return b.a.runKernel(re.s,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce=Object(ie.b)({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Object(ae.a)(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:r};return b.a.runKernel(re.cc,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ee=Object(ie.b)({transpose_:function(e,t){const n=Object(ae.a)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),j.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{j.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return b.a.runKernel(re.fd,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je=Object(ie.b)({confusionMatrix_:function(e,t,n){const r=Object(ae.a)(e,"labels","confusionMatrix"),a=Object(ae.a)(t,"predictions","confusionMatrix");j.b(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),j.b(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),j.b(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),j.b(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),j.b(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const i=Ce(oe(r,"int32"),n),o=Ce(oe(a,"int32"),n),s=Ee(i),u=Ne(s,o);return oe(u,"int32")}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $e(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,o=e[i]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(i)}return r}function Me(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],i=t.length-r-1,o=t[i];(null==a||1===a&&o>1)&&n.unshift(i)}return n}function ze(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}var Re=n(30),Fe=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Be(e,t,n){if(Object(j.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(ae.c)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(Fe.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pe;function De(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,i=!1,o=!1,s=!1,u=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if(null!=e.colorSpace)i=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);u=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}i&&(console.log("videoFrame"),console.log(e));if(null!=Object(Re.c)(re.jb,b.a.backendName)){const n={pixels:e},r={numChannels:t};return b.a.runKernel(re.jb,n,r)}const[c,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(s)d=e.getContext("2d").getImageData(0,0,c,l).data;else if(r||n)d=e.data;else if(o||a||u){if(null==Pe)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Pe=new OffscreenCanvas(1,1).getContext("2d")}else Pe=document.createElement("canvas").getContext("2d");Pe.canvas.width=c,Pe.canvas.height=l,Pe.drawImage(e,0,0,c,l),d=Pe.getImageData(0,0,c,l).data}if(4===t)h=new Int32Array(d);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}return Be(h,[l,c,t],"int32")}function Ge(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Le(e,t=3){let n=null;if(Object(g.c)().getBool("WRAP_TO_IMAGEBITMAP")&&Ge(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return De(n,t)}async function We(e,t){let n=Object(ae.a)(e,"img","toPixels");if(!(e instanceof te.a)){const e=n;n=oe(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2];if(i>4||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),s="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<i;r++){const a=o[e*i+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===i?(t[0]=a*s,t[1]=a*s,t[2]=a*s):t[r]=a*s}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Ue=Object(ie.b)({fromPixels_:De});function Ve(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(j.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,i=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const s=e.shape,u=a.slice();u.pop();let c=1;for(let e=i;e<n;++e)c*=s[e],u.push(s[e]);const l=[...Object(j.j)(e.shape).map((e=>e/c)),1].slice(0,i);return[u,o,c,l]}function He(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(i+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(i+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(i+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function qe(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}He(n,t,e)}function Ke(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let o=1;for(let e=a;e<i;++e)o*=n[e];const s=a<1?1:a;return{sliceRank:a,numUpdates:Object(j.O)(t.shape)/s,sliceSize:o,strides:[...Object(j.j)(n.slice(0,a)),1],outputSize:Object(j.O)(n)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ye(e,t,n){const r=e.shape.length;j.b(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),j.b(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)j.b(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Xe(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ze(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Qe(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Je(e,t,n){return n<=e?n:n-(t-1)}function et(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function tt(e,t,n,r,a,i,o,s,u){const c=e.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=nt(o,u,c,r,e),d=rt(s,u,c,a,e),h=Qe(i,u,c,e)}else for(let t=0;t<c;t++)l[t]=it(o,r,i,e,t,u),d[t]=ot(s,a,i,e,t,u),h[t]=at(i,t,u);return{begin:l,end:d,strides:h}}function nt(e,t,n,r,a){const i=[...a],o=et(n,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const o=Je(t,n,a);let s=r[o];e&1<<o&&(s=0),i[a]=s}return i}function rt(e,t,n,r,a){const i=[...a],o=et(n,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const o=Je(t,n,a);let s=r[o];e&1<<o&&(s=Number.MAX_SAFE_INTEGER),i[a]=s}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=j.i(0,i[e],a[e])}return i}function at(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function it(e,t,n,r,a,i){let o=t[a];const s=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=s>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=j.i(0,o,u-1),o}function ot(e,t,n,r,a,i){let o=t[a];const s=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=s>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=s>0?j.i(0,o,u):j.i(-1,o,u-1),o}function st(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ut(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ct(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{j.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(j.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function lt(e,t,n,r,a,i,o,s,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:a,endMask:i,ellipsisMask:o,newAxisMask:s,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)l&&0!=(1<<e&s)&&d.numAddAxisAfterEllipsis++,1<<e&o&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const b=[],g=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){b.push(n?1:-1);continue}const a=[h.beginMask&1<<t,h.endMask&1<<t],i=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const o=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=dt(h.begin[t],0,h.strides[t],r,a,i),h.end[t]=dt(h.end[t],1,h.strides[t],r,a,i);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&o,f=f&&(0===t&&1===h.strides[t]||o);let s,u=!1;if(h.beginValid&&h.endValid?(s=h.end[t]-h.begin[t],u=!0):n?(s=1,u=!0):o&&r>=0&&(s=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===s||s<0!=h.strides[t]<0?0:Math.trunc(s/h.strides[t])+(s%h.strides[t]!=0?1:0),b.push(e)}else b.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?g.push(b[t]):-2===t&&g.push(1)}return{finalShapeSparse:g.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function dt(e,t,n,r,a,i){if(a[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ht{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class pt{constructor(){this.classNameMap={}}static getMap(){return null==pt.instance&&(pt.instance=new pt),pt.instance}static register(e){pt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ft(e){Object(j.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(j.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(j.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),pt.register(e)}var mt=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bt=.1;function gt(e,t,n){return null==n&&(n=kt()),yt(e,t,((e,t)=>xt(e,t,n)))}function kt(){return 32===b.a.backend.floatPrecision()?.001:bt}function yt(e,t,n){let r=!0;if((Object(j.A)(e)||Object(j.A)(t))&&(r=!1),Object(j.A)(e)&&Object(j.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(ae.c)(e),r=Object(ae.c)(t);if(!Object(j.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Object(j.A)(e)?e:Object(j.m)(e),i=Object(j.A)(t)?t:Object(j.m)(t);if(a.length!==i.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${i.length}.\nActual:   ${a}.\nExpected: ${i}.`);for(let e=0;e<i.length;++e){const t=a[e],r=i[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${i}.`)}}function vt(e,t){e().then((()=>t.fail()),(()=>t()))}function wt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(j.z)(e)||Object(j.z)(e[0])||Object(j.z)(t)||Object(j.z)(t[0])?yt(e,n,((e,t)=>e==t)):yt(e,t,((e,t)=>xt(e,t,0)))}function It(e,t,n){if(null==n&&(n=kt()),!xt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function xt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function St(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Ot(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function _t(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?_t(n):e[t]=Object(mt.encodeString)(n)}return e}
/** @license See the LICENSE file. */const Tt="0.0.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(){Object(g.c)().set("PROD",!0)}function Nt(){Object(g.c)().set("DEBUG",!0)}function Ct(){Object(g.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Et(e){Object(g.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function jt(){b.a.disposeVariables()}function $t(){return b.a}function Mt(){return b.a.memory()}function zt(e){return b.a.profile(e)}function Rt(e,t){return b.a.tidy(e,t)}function Ft(e){Object(Ae.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function Bt(e){return b.a.keep(e)}function Pt(e){return b.a.time(e)}function Dt(e){return b.a.setBackend(e)}function Gt(){return b.a.ready()}function Lt(){return b.a.backendName}function Wt(e){b.a.removeBackend(e)}function Ut(e){return b.a.findBackend(e)}function Vt(e){return b.a.findBackendFactory(e)}function Ht(e,t,n=1){return b.a.registerBackend(e,t,n)}function qt(){return b.a.backend}function Kt(e,t){Object(g.c)().setPlatform(e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(te.d)(Et);const Yt=Object(ie.b)({add_:function(e,t){let n=Object(ae.a)(e,"a","add"),r=Object(ae.a)(t,"b","add");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.d,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xt=Object(ie.b)({floorDiv_:function(e,t){let n=Object(ae.a)(e,"a","floorDiv"),r=Object(ae.a)(t,"b","floorDiv");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.ib,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zt=Object(ie.b)({div_:function(e,t){let n=Object(ae.a)(e,"a","div"),r=Object(ae.a)(t,"b","div");if([n,r]=Object(Ae.makeTypesMatch)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Xt(n,r);const a={a:n,b:r};return b.a.runKernel(re.mc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qt=Object(ie.b)({mul_:function(e,t){let n=Object(ae.a)(e,"a","mul"),r=Object(ae.a)(t,"b","mul");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.Wb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jt=Object(ie.b)({sqrt_:function(e){const t={x:Object(ae.a)(e,"x","sqrt","float32")};return b.a.runKernel(re.Qc,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const en=Object(ie.b)({square_:function(e){const t=Object(ae.a)(e,"x","square");return b.a.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn=Object(ie.b)({zerosLike_:function(e){const t={x:Object(ae.a)(e,"x","zerosLike")};return b.a.runKernel(re.jd,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(e){return j.b(j.u(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Object(ae.a)(t,"x","tf.grad","string_or_numeric"),a=null!=n?Object(ae.a)(n,"dy","tf.grad"):null;return b.a.tidy((()=>{const{value:t,grads:n}=b.a.gradients((()=>e(r)),[r],a);return null!=a&&j.e(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),cn(n),n[0]}))}}function rn(e){return j.b(j.u(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{j.b(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Object(ae.b)(t,"args","tf.grads","string_or_numeric"),a=null!=n?Object(ae.a)(n,"dy","tf.grads"):null;return b.a.tidy((()=>{const{value:t,grads:n}=b.a.gradients((()=>e(...r)),r,a);return null!=a&&j.e(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),cn(n),n}))}}function an(e){return j.b(j.u(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{j.b(t instanceof te.a,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),j.b(null==n||n instanceof te.a,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=b.a.gradients((()=>e(t)),[t],n);return cn(r),{grad:r[0],value:a}}}function on(e){return j.b(j.u(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{j.b(Array.isArray(t)&&t.every((e=>e instanceof te.a)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),j.b(null==n||n instanceof te.a,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=b.a.gradients((()=>e(...t)),t,n);return null!=n&&j.e(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),cn(r.grads),r}}function sn(e,t){j.b(j.u(e),(()=>"The f passed in variableGrads(f) must be a function")),j.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof te.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in b.a.registeredVariables)t.push(b.a.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),j.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:i,grads:o}=b.a.gradients(e,t,null,!0);j.b(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),j.b(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const s={};return t.forEach(((e,t)=>{null!=o[t]&&(s[e.name]=o[t])})),null!=r&&r.forEach((e=>s[e.name]=null)),{value:i,grads:s}}function un(e){return b.a.customGrad(e)}function cn(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(e,t){if((Object(j.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(j.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(Fe.a)(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dn extends ht{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Ft(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return sn(e,t)}dispose(){null!=this.iterations_&&Ft(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ln(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(dn,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hn extends dn{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=b.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Rt((()=>tn(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Rt((()=>tn(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Rt((()=>{const e=Yt(Qt(i,this.rho),Qt(en(a),1-this.rho)),t=Qt(Zt(Jt(Yt(o,this.epsilon)),Jt(Yt(i,this.epsilon))),a),n=Yt(Qt(o,this.rho),Qt(en(t),1-this.rho));i.assign(e),o.assign(n);const s=Yt(Qt(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ft(this.accumulatedGrads.map((e=>e.variable))),Ft(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pn(e,t,n){const r={shape:e,value:t,dtype:n};return b.a.runKernel(re.fb,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */hn.className="Adadelta",ft(hn);class fn extends dn{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Rt((()=>pn(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable;Rt((()=>{const e=Yt(i,en(a));i.assign(e);const t=Yt(Qt(Zt(a,Jt(Yt(e,b.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ft(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}fn.className="Adagrad",ft(fn);const mn=Object(ie.b)({pow_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=Object(ae.a)(e,"base","pow"),r=Object(ae.a)(t,"exp","pow");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.hc,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn=Object(ie.b)({sub_:function(e,t){let n=Object(ae.a)(e,"a","sub"),r=Object(ae.a)(t,"b","sub");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.Yc,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gn extends dn{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Rt((()=>{this.accBeta1=ln(t).variable(),this.accBeta2=ln(n).variable()})),null==r&&(this.epsilon=b.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Rt((()=>{const n=bn(1,this.accBeta1),r=bn(1,this.accBeta2);t.forEach(((t,a)=>{const i=b.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Rt((()=>tn(i).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Rt((()=>tn(i).variable(false)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const s=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Yt(Qt(s,this.beta1),Qt(o,1-this.beta1)),l=Yt(Qt(u,this.beta2),Qt(en(o),1-this.beta2)),d=Zt(c,n),h=Zt(l,r);s.assign(c),u.assign(l);const p=Yt(Qt(Zt(d,Yt(Jt(h),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Qt(this.accBeta1,this.beta1)),this.accBeta2.assign(Qt(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ft(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ft(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Rt((()=>{this.accBeta1.assign(mn(this.beta1,this.iterations_+1)),this.accBeta2.assign(mn(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}gn.className="Adam",ft(gn);const kn=Object(ie.b)({abs_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const t=Object(ae.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return b.a.runKernel(re.B,e)}{const e={x:t};return b.a.runKernel(re.a,e)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yn=Object(ie.b)({maximum_:function(e,t){let n=Object(ae.a)(e,"a","maximum"),r=Object(ae.a)(t,"b","maximum");[n,r]=Object(Ae.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=oe(n,"int32"),r=oe(r,"int32")),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Pb,a)}});
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/class vn extends dn{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Rt((()=>{this.iteration=ln(0).variable(),this.accBeta1=ln(t).variable()})),null==r&&(this.epsilon=b.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Rt((()=>{const n=bn(1,this.accBeta1),r=Zt(-this.learningRate,Yt(Qt(this.iteration,this.decay),1));t.forEach(((t,a)=>{const i=b.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:tn(i).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:tn(i).variable(false)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const s=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Yt(Qt(s,this.beta1),Qt(o,1-this.beta1)),l=Qt(u,this.beta2),d=kn(o),h=yn(l,d);s.assign(c),u.assign(h);const p=Yt(Qt(Zt(r,n),Zt(c,Yt(h,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Yt(this.iteration,1)),this.accBeta1.assign(Qt(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ft(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ft(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}vn.className="Adamax",ft(vn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wn extends dn{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=b.a.registeredVariables[t];Rt((()=>{const e=Yt(Qt(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Bt(ln(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}wn.className="SGD",ft(wn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class In extends wn{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ln(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Rt((()=>tn(r).variable(e)))}}const a=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Rt((()=>{let e;const t=Yt(Qt(this.m,a),i);e=this.useNesterov?Yt(Qt(this.c,Yt(i,Qt(t,this.m))),r):Yt(Qt(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ft(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}In.className="Momentum",ft(In);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xn extends dn{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=b.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=b.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Rt((()=>tn(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Rt((()=>tn(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Rt((()=>tn(r).variable(a)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const o=this.accumulatedMeanSquares[n].variable,s=this.accumulatedMoments[n].variable;Rt((()=>{const e=Yt(Qt(o,this.decay),Qt(en(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Yt(Qt(t,this.decay),Qt(i,1-this.decay)),u=Zt(Qt(i,this.learningRate),Jt(bn(e,Yt(en(a),this.epsilon)))),c=Yt(Qt(s,this.momentum),u);o.assign(e),t.assign(a),s.assign(c);const l=bn(r,c);r.assign(l)}else{const e=Yt(Qt(o,this.decay),Qt(en(i),1-this.decay)),t=Yt(Qt(s,this.momentum),Zt(Qt(i,this.learningRate),Jt(Yt(e,this.epsilon))));o.assign(e),s.assign(t);const n=bn(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ft(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ft(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ft(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}xn.className="RMSProp",ft(xn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Sn{static sgd(e){return new wn(e)}static momentum(e,t,n=!1){return new In(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new xn(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new gn(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new hn(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new vn(e,t,n,r,a)}static adagrad(e,t=.1){return new fn(e,t)}}var On=n(32);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n=Object(ie.b)({acos_:function(e){const t={x:Object(ae.a)(e,"x","acos")};return b.a.runKernel(re.b,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn=Object(ie.b)({acosh_:function(e){const t={x:Object(ae.a)(e,"x","acosh")};return b.a.runKernel(re.c,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An=Object(ie.b)({addN_:function(e){j.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),j.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Object(ae.a)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!j.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return b.a.runKernel(re.e,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nn=Object(ie.b)({all_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","all","bool")},a={axis:t,keepDims:n};return b.a.runKernel(re.f,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn=Object(ie.b)({any_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","any","bool")},a={axis:t,keepDims:n};return b.a.runKernel(re.g,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En=Object(ie.b)({argMax_:function(e,t=0){const n={x:Object(ae.a)(e,"x","argMax")},r={axis:t};return b.a.runKernel(re.h,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jn=Object(ie.b)({argMin_:function(e,t=0){const n={x:Object(ae.a)(e,"x","argMin")},r={axis:t};return b.a.runKernel(re.i,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object(ie.b)({asin_:function(e){const t={x:Object(ae.a)(e,"x","asin")};return b.a.runKernel(re.j,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mn=Object(ie.b)({asinh_:function(e){const t={x:Object(ae.a)(e,"x","asinh")};return b.a.runKernel(re.k,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zn=Object(ie.b)({atan_:function(e){const t={x:Object(ae.a)(e,"x","atan")};return b.a.runKernel(re.l,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn=Object(ie.b)({atan2_:function(e,t){let n=Object(ae.a)(e,"a","atan2"),r=Object(ae.a)(t,"b","atan2");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.m,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn=Object(ie.b)({atanh_:function(e){const t={x:Object(ae.a)(e,"x","atanh")};return b.a.runKernel(re.n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(e,t,n,r,a="NHWC",i){return Gn(e,[...t,e[3]],n,i,r,null,null,Xn(a))}function Pn(e,t,n,r,a,i,o="channelsLast"){const[s,u]=Un(t);let c;if("channelsLast"===o)c=[s,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);c=[s,u,e[1],e[1]]}return Gn(e,c,n,r,a,i,!1,o)}function Dn(e,t,n,r,a,i,o="NDHWC"){const[s,u,c]=Vn(t);let l,d;if("NDHWC"===o)d="channelsLast",l=[s,u,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",l=[s,u,c,e[1],e[1]]}return Ln(e,l,n,r,a,!1,d,i)}function Gn(e,t,n,r,a,i,o=!1,s="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===s)[u,c,l,d]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[u,d,c,l]=e}const[h,p,,f]=t,[m,b]=Un(n),[g,k]=Un(r),y=Hn(h,g),v=Hn(p,k),{padInfo:w,outHeight:I,outWidth:x}=function(e,t,n,r,a,i,o,s,u){let c,l,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Wn(e,t,n));const i=e[0],o=e[1],s=qn((i-t+2*r)/n+1,a),u=qn((o-t+2*r)/n+1,a);return[s,u]}([t,n],i,r,e,s);l=a[0],d=a[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+i-t),s=Math.max(0,(d-1)*a+o-n),u=Math.floor(e/2),h=e-u,p=Math.floor(s/2);c={top:u,bottom:h,left:p,right:s-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-i+1)/r),d=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},l=qn((t-i+h+p)/r+1,s),d=qn((n-o+f+m)/a+1,s)}}return{padInfo:c,outHeight:l,outWidth:d}}(a,c,l,m,b,y,v,i,s),S=o?f*d:f;let O;return"channelsFirst"===s?O=[u,S,I,x]:"channelsLast"===s&&(O=[u,I,x,S]),{batchSize:u,dataFormat:s,inHeight:c,inWidth:l,inChannels:d,outHeight:I,outWidth:x,outChannels:S,padInfo:w,strideHeight:m,strideWidth:b,filterHeight:h,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:g,dilationWidth:k,inShape:e,outShape:O,filterShape:t}}function Ln(e,t,n,r,a,i=!1,o="channelsLast",s){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,c,l,d]=e}const[p,f,m,,b]=t,[g,k,y]=Vn(n),[v,w,I]=Vn(r),x=Hn(p,v),S=Hn(f,w),O=Hn(m,I),{padInfo:_,outDepth:T,outHeight:A,outWidth:N}=function(e,t,n,r,a,i,o,s,u,c,l){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,a,i){null==a&&(a=Wn(e,t,r));const o=e[0],s=e[1],u=e[2],c=qn((o-t+2*a)/r+1,i),l=qn((s-t+2*a)/r+1,i),d=qn((u-t+2*a)/r+1,i);return[c,l,d,n]}([t,n,r,1],s,1,a,e,l);h=i[0],p=i[1],f=i[2]}else if("same"===e){h=Math.ceil(t/a),p=Math.ceil(n/i),f=Math.ceil(r/o);const e=(h-1)*a+s-t,l=(p-1)*i+u-n,m=(f-1)*o+c-r,b=Math.floor(e/2),g=e-b,k=Math.floor(l/2),y=l-k,v=Math.floor(m/2);d={top:k,bottom:y,left:v,right:m-v,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-s+1)/a),p=Math.ceil((n-u+1)/i),f=Math.ceil((r-c+1)/o)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(a,c,l,d,g,k,y,x,S,O,s),C=i?b*h:b;let E;return"channelsFirst"===o?E=[u,C,T,A,N]:"channelsLast"===o&&(E=[u,T,A,N,C]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:T,outHeight:A,outWidth:N,outChannels:C,padInfo:_,strideDepth:g,strideHeight:k,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:x,effectiveFilterHeight:S,effectiveFilterWidth:O,dilationDepth:v,dilationHeight:w,dilationWidth:I,inShape:e,outShape:E,filterShape:t}}function Wn(e,t,n,r=1){const a=Hn(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Un(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Vn(e){return"number"==typeof e?[e,e,e]:e}function Hn(e,t){return t<=1?e:e+(e-1)*(t-1)}function qn(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Kn(e){const[t,n,r]=Un(e);return 1===t&&1===n&&1===r}function Yn(e,t){return Kn(e)||Kn(t)}function Xn(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Zn(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)j.b(j.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{j.b(j.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=Object(ie.b)({reshape_:function(e,t){const n={x:Object(ae.a)(e,"x","reshape","string_or_numeric")},r={shape:t};return b.a.runKernel(re.qc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=Object(ie.b)({avgPool_:function(e,t,n,r,a){const i=Object(ae.a)(e,"x","avgPool","float32");j.b(Yn(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=i,s=!1;3===i.rank&&(s=!0,o=Qn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),j.b(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Zn("avgPool",r,a);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let l=b.a.runKernel(re.o,u,c);return l=oe(l,i.dtype),s?Qn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er=Object(ie.b)({avgPool3d_:function(e,t,n,r,a,i="NDHWC"){const o=Object(ae.a)(e,"x","avgPool3d","float32");let s=o,u=!1;4===o.rank&&(u=!0,s=Qn(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),j.b(5===s.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${s.rank}.`)),j.b("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Zn("avgPool3d",r,a);const c={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let d=b.a.runKernel(re.p,c,l);return d=oe(d,s.dtype),u?Qn(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr=Object(ie.b)({concat_:function(e,t=0){Object(j.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(ae.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return se(n[0]);const r=n,a={axis:t};return b.a.runKernel(re.C,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr=Object(ie.b)({sigmoid_:function(e){const t={x:Object(ae.a)(e,"x","sigmoid","float32")};return b.a.runKernel(re.Cc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rr=Object(ie.b)({slice_:function(e,t,n){const r=Object(ae.a)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},i={begin:t,size:n};return b.a.runKernel(re.Gc,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ar=Object(ie.b)({tanh_:function(e){const t={x:Object(ae.a)(e,"x","tanh","float32")};return b.a.runKernel(re.bd,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir=Object(ie.b)({basicLSTMCell_:function(e,t,n,r,a,i){const o=Object(ae.a)(e,"forgetBias","basicLSTMCell"),s=Object(ae.a)(t,"lstmKernel","basicLSTMCell"),u=Object(ae.a)(n,"lstmBias","basicLSTMCell"),c=Object(ae.a)(r,"data","basicLSTMCell"),l=Object(ae.a)(a,"c","basicLSTMCell"),d=Object(ae.a)(i,"h","basicLSTMCell"),h=tr([c,d],1),p=Ne(h,s),f=Yt(p,u),m=f.shape[0],b=f.shape[1]/4,g=[m,b],k=rr(f,[0,0],g),y=rr(f,[0,b],g),v=rr(f,[0,2*b],g),w=rr(f,[0,3*b],g),I=Yt(Qt(nr(k),ar(y)),Qt(l,nr(Yt(o,v))));return[I,Qt(ar(I),nr(w))]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or=Object(ie.b)({batchToSpaceND_:function(e,t,n){const r=Object(ae.a)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));j.b(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),j.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),j.b(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},o={blockShape:t,crops:n};return b.a.runKernel(re.t,i,o)}});const sr=Object(ie.b)({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){null==i&&(i=.001);const o=Object(ae.a)(e,"x","batchNorm"),s=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),j.b(s.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),j.b(null==l||s.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),j.b(null==c||s.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d=function(e){let t;return t=0===e.rank||1===e.rank?Qn(e,[1,1,1,e.size]):2===e.rank?Qn(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Qn(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),h={x:d,scale:c,offset:l,mean:s,variance:u},p={varianceEpsilon:i},f=b.a.runKernel(re.kb,h,p);return Qn(f,o.shape)}});const ur=Object(ie.b)({batchNorm2d_:function(e,t,n,r,a,i){const o=Object(ae.a)(e,"x","batchNorm"),s=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),j.b(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),j.b(2===s.rank||1===s.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${s.rank}.`)),j.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&j.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&j.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),sr(o,s,u,l,c,i)}});const cr=Object(ie.b)({batchNorm3d_:function(e,t,n,r,a,i){const o=Object(ae.a)(e,"x","batchNorm"),s=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),j.b(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),j.b(3===s.rank||1===s.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${s.rank}.`)),j.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&j.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&j.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),sr(o,s,u,l,c,i)}});const lr=Object(ie.b)({batchNorm4d_:function(e,t,n,r,a,i){const o=Object(ae.a)(e,"x","batchNorm"),s=Object(ae.a)(t,"mean","batchNorm"),u=Object(ae.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(ae.a)(a,"scale","batchNorm")),null!=r&&(l=Object(ae.a)(r,"offset","batchNorm")),j.b(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),j.b(4===s.rank||1===s.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${s.rank}.`)),j.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&j.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&j.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),sr(o,s,u,l,c,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=Object(ie.b)({bincount_:function(e,t,n){const r=Object(ae.a)(e,"x","bincount"),a=Object(ae.a)(t,"weights","bincount");j.b("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),j.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),j.b(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n};return b.a.runKernel(re.u,i,o)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=Object(ie.b)({broadcastArgs_:function(e,t){const n=Object(ae.a)(e,"s0","broadcastArgs","int32"),r=Object(ae.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return b.a.runKernel(re.v,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=Object(ie.b)({broadcastTo_:function(e,t){let n=Object(ae.a)(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Qn(n,e)}const a=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return se(n);const o={x:n},s={reps:i};return b.a.runKernel(re.cd,o,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr=Object(ie.b)({ceil_:function(e){const t={x:Object(ae.a)(e,"x","ceil","float32")};return b.a.runKernel(re.y,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mr=Object(ie.b)({clipByValue_:function(e,t,n){const r=Object(ae.a)(e,"x","clipByValue");j.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},i={clipValueMin:t,clipValueMax:n};return b.a.runKernel(re.z,a,i)}});var br=n(23);const gr=Object(ie.b)({concat1d_:function(e){return tr(e,0)}});const kr=Object(ie.b)({concat2d_:function(e,t){return tr(e,t)}});const yr=Object(ie.b)({concat3d_:function(e,t){return tr(e,t)}});const vr=Object(ie.b)({concat4d_:function(e,t){return tr(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr=Object(ie.b)({conv2d_:function(e,t,n,r,a="NHWC",i=[1,1],o){const s=Object(ae.a)(e,"x","conv2d","float32"),u=Object(ae.a)(t,"filter","conv2d","float32");let c=s,l=!1;3===s.rank&&(l=!0,c=Qn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),j.b(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),j.b(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Zn("conv2d",r,o);const d="NHWC"===a?c.shape[3]:c.shape[1];j.b(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),j.b(Yn(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const h={x:c,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o},f=b.a.runKernel(re.D,h,p);return l?Qn(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ir=Object(ie.b)({conv1d_:function(e,t,n,r,a="NWC",i=1,o){const s=Object(ae.a)(e,"x","conv1d"),u=Object(ae.a)(t,"filter","conv1d");let c=s,l=!1;2===s.rank&&(l=!0,c=Qn(s,[1,s.shape[0],s.shape[1]])),j.b(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),j.b(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Zn("conv1d",r,o),j.b(c.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),j.b(Yn(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),j.b("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=Qn(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=Qn(c,[c.shape[0],1,c.shape[1],c.shape[2]]),p=wr(h,d,[1,n],r,"NHWC",[1,i],o);return Qn(p,l?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr=Object(ie.b)({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",o){j.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,u=t,c=!1;3===t.rank&&(c=!0,u=Qn(t,[1,t.shape[0],t.shape[1],t.shape[2]]),s=[1,e[0],e[1],e[2]]),j.b(4===s.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${s.length}.`)),j.b(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),j.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const l="NHWC"===i?s[3]:s[1],d="NHWC"===i?u.shape[3]:u.shape[1];j.b(l===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`)),j.b(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),Zn("conv2dDerInput",a,o);const h={dy:u,filter:n},p={strides:r,pad:a,dataFormat:i,dimRoundingMode:o,inputShape:s},f=b.a.runKernel(re.F,h,p);return c?Qn(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Sr=Object(ie.b)({conv2dTranspose_:function(e,t,n,r,a,i){const o=Object(ae.a)(e,"x","conv2dTranspose"),s=Object(ae.a)(t,"filter","conv2dTranspose");return xr(n,o,s,r,a,"NHWC",i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Object(ie.b)({conv3d_:function(e,t,n,r,a="NDHWC",i=[1,1,1]){const o=Object(ae.a)(e,"x","conv3d"),s=Object(ae.a)(t,"filter","conv3d");let u=o,c=!1;4===o.rank&&(c=!0,u=Qn(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),j.b(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),j.b(5===s.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${s.rank}.`)),j.b(u.shape[4]===s.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${s.shape[3]}.`)),j.b(Yn(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),j.b("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const l={x:u,filter:s},d={strides:n,pad:r,dataFormat:a,dilations:i},h=b.a.runKernel(re.G,l,d);return c?Qn(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r=Object(ie.b)({conv3DBackpropInput_:function(e,t,n,r,a){j.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,o=t,s=!1;4===t.rank&&(s=!0,o=Qn(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],c=o.shape[4];j.b(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),j.b(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),j.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),j.b(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),j.b(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const l={dy:o,filter:n},d={pad:a,strides:r,inputShape:i},h=b.a.runKernel(re.I,l,d);return s?Qn(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Tr=Object(ie.b)({conv3dTranspose_:function(e,t,n,r,a){const i=Object(ae.a)(e,"x","conv3dTranspose"),o=Object(ae.a)(t,"filter","conv3dTranspose");return _r(n,i,o,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar=Object(ie.b)({cos_:function(e){const t={x:Object(ae.a)(e,"x","cos","float32")};return b.a.runKernel(re.J,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=Object(ie.b)({cosh_:function(e){const t={x:Object(ae.a)(e,"x","cosh","float32")};return b.a.runKernel(re.K,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr=Object(ie.b)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Object(ae.a)(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return b.a.runKernel(re.M,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Object(ie.b)({denseBincount_:function(e,t,n,r=!1){const a=Object(ae.a)(e,"x","denseBincount"),i=Object(ae.a)(t,"weights","denseBincount");j.b("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),j.b(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),j.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),j.b(i.size===a.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`));const o={x:a,weights:i},s={size:n,binaryOutput:r};return b.a.runKernel(re.N,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=Object(ie.b)({depthToSpace_:function(e,t,n="NHWC"){const r=Object(ae.a)(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];j.b(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),j.b(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),j.b(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),j.b(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const s={x:r},u={blockSize:t,dataFormat:n};return b.a.runKernel(re.O,s,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r=Object(ie.b)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",i=[1,1],o){const s=Object(ae.a)(e,"x","depthwiseConv2d","float32"),u=Object(ae.a)(t,"filter","depthwiseConv2d","float32");let c=s,l=!1;3===s.rank&&(l=!0,c=Qn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),j.b(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),j.b(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),j.b(c.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Zn("depthwiseConv2d",r,o);const d={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o},p=b.a.runKernel(re.P,d,h);return l?Qn(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr=Object(ie.b)({diag_:function(e){const t={x:Object(ae.a)(e,"x","diag")};return b.a.runKernel(re.S,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr=Object(ie.b)({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const o=Object(ae.a)(e,"x","dilation2d"),s=Object(ae.a)(t,"filter","dilation2d");j.b(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),j.b(3===s.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${s.rank}.`)),j.b("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=o,c=!1;3===o.rank&&(u=Qn(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const l={x:u,filter:s},d={strides:n,pad:r,dilations:a},h=b.a.runKernel(re.T,l,d);return c?Qn(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Object(ie.b)({equal_:function(e,t){let n=Object(ae.a)(e,"a","equal","string_or_numeric"),r=Object(ae.a)(t,"b","equal","string_or_numeric");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Z,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr=Object(ie.b)({where_:function(e,t,n){const r=Object(ae.a)(t,"a","where"),a=Object(ae.a)(n,"b","where"),i=Object(ae.a)(e,"condition","where","bool"),o=ze(ze(i.shape,r.shape),a.shape),s={condition:pr(i,o),t:pr(r,o),e:pr(a,o)};return b.a.runKernel(re.Ac,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=Object(ie.b)({divNoNan_:function(e,t){let n=Object(ae.a)(e,"a","div"),r=Object(ae.a)(t,"b","div");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a=Zt(n,r),i=tn(a),o=Rr(r,i);return Fr(o,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr=Object(ie.b)({dot_:function(e,t){const n=Object(ae.a)(e,"t1","dot"),r=Object(ae.a)(t,"t2","dot");j.b(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(j.b(a===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${i}.`)),1===n.rank&&1===r.rank){const e=Qn(n,[1,-1]),t=Qn(r,[-1,1]),a=Ne(e,t);return Qn(a,[])}if(1===n.rank&&2===r.rank){const e=Qn(n,[1,-1]),t=Qn(r,[r.shape[0],r.shape[1]]),a=Ne(e,t);return Qn(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Qn(r,[-1,1]),t=Ne(n,e);return Qn(t,[t.size])}{const e=Qn(r,[r.shape[0],r.shape[1]]);return Ne(n,e)}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr=Object(ie.b)({einsum_:function(e,...t){const n=t.map(((e,t)=>Object(ae.a)(e,`tensors${t}`,"einsum"))),r={equation:e};return b.a.runKernel(re.W,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr=Object(ie.b)({elu_:function(e){const t={x:Object(ae.a)(e,"x","elu","float32")};return b.a.runKernel(re.X,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr=Object(ie.b)({erf_:function(e){let t=Object(ae.a)(e,"x","erf");j.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=oe(t,"float32"));const n={x:t};return b.a.runKernel(re.ab,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr=Object(ie.b)({exp_:function(e){const t={x:Object(ae.a)(e,"x","exp")};return b.a.runKernel(re.bb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=Object(ie.b)({expandDims_:function(e,t=0){const n=Object(ae.a)(e,"x","expandDims","string_or_numeric");j.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return b.a.runKernel(re.cb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=Object(ie.b)({expm1_:function(e){const t={x:Object(ae.a)(e,"x","expm1")};return b.a.runKernel(re.db,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr=Object(ie.b)({tile_:function(e,t){const n=Object(ae.a)(e,"x","tile","string_or_numeric");j.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return b.a.runKernel(re.cd,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr=Object(ie.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=ne([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)a.set(1,e,e);const o=Qn(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Hr(Ur(o,0),[n[0],1,1]);if(2===n.length)return Hr(Ur(Ur(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Hr(Ur(Ur(Ur(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr=Object(ie.b)({floor_:function(e){const t={x:Object(ae.a)(e,"x","floor","float32")};return b.a.runKernel(re.hb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr=Object(ie.b)({gather_:function(e,t,n=0,r=0){const a={x:Object(ae.a)(e,"x","gather"),indices:Object(ae.a)(t,"indices","gather","int32")},i={axis:n,batchDims:r};return b.a.runKernel(re.ob,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=Object(ie.b)({greater_:function(e,t){let n=Object(ae.a)(e,"a","greater","string_or_numeric"),r=Object(ae.a)(t,"b","greater","string_or_numeric");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.pb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr=Object(ie.b)({greaterEqual_:function(e,t){let n=Object(ae.a)(e,"a","greaterEqual","string_or_numeric"),r=Object(ae.a)(t,"b","greaterEqual","string_or_numeric");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.qb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr=Object(ie.b)({imag_:function(e){const t={input:Object(ae.a)(e,"input","imag")};return b.a.runKernel(re.tb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=Object(ie.b)({isFinite_:function(e){const t={x:Object(ae.a)(e,"x","isFinite")};return b.a.runKernel(re.ub,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea=Object(ie.b)({isInf_:function(e){const t={x:Object(ae.a)(e,"x","isInf")};return b.a.runKernel(re.vb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ta=Object(ie.b)({isNaN_:function(e){const t={x:Object(ae.a)(e,"x","isNaN")};return b.a.runKernel(re.wb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const na=Object(ie.b)({leakyRelu_:function(e,t=.2){const n={x:Object(ae.a)(e,"x","leakyRelu")},r={alpha:t};return b.a.runKernel(re.zb,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra=Object(ie.b)({less_:function(e,t){let n=Object(ae.a)(e,"a","less","string_or_numeric"),r=Object(ae.a)(t,"b","less","string_or_numeric");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Ab,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa=Object(ie.b)({lessEqual_:function(e,t){let n=Object(ae.a)(e,"a","lessEqual","string_or_numeric"),r=Object(ae.a)(t,"b","lessEqual","string_or_numeric");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Bb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return b.a.runKernel(re.Cb,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa=Object(ie.b)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=Object(ae.a)(e,"x","localResponseNormalization");j.b(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),j.b(j.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=i,s=!1;3===i.rank&&(s=!0,o=Qn(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:o},c={depthRadius:t,bias:n,alpha:r,beta:a},l=b.a.runKernel(re.xb,u,c);return s?Qn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa=Object(ie.b)({log_:function(e){const t={x:Object(ae.a)(e,"x","log","float32")};return b.a.runKernel(re.Db,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ua=Object(ie.b)({log1p_:function(e){const t={x:Object(ae.a)(e,"x","log1p")};return b.a.runKernel(re.Eb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca=Object(ie.b)({neg_:function(e){const t={x:Object(ae.a)(e,"x","neg")};return b.a.runKernel(re.Xb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const la=Object(ie.b)({softplus_:function(e){const t={x:Object(ae.a)(e,"x","softplus")};return b.a.runKernel(re.Ic,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da=Object(ie.b)({logSigmoid_:function(e){const t=Object(ae.a)(e,"x","logSigmoid"),n=un((e=>({value:ca(la(ca(e))),gradFunc:t=>Qt(t,nr(ca(e)))})));return n(t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ha=Object(ie.b)({max_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","max")},a={reductionIndices:t,keepDims:n};return b.a.runKernel(re.Jb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa=Object(ie.b)({sum_:function(e,t=null,n=!1){let r=Object(ae.a)(e,"x","sum");"bool"===r.dtype&&(r=oe(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return b.a.runKernel(re.Zc,a,i)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fa=Object(ie.b)({logSoftmax_:function(e,t=-1){const n=Object(ae.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=un(((e,n)=>{const r=ha(e,t,!0),a=bn(e,r),i=bn(oe(a,"float32"),sa(pa(Wr(a),t,!0)));n([i]);return{value:i,gradFunc:(e,n)=>{const[r]=n,a=Wr(r);return bn(e,Qt(pa(e,t,!0),a))}}}));return r(n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ma(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ba(e,t,n){const r=e.length+t.length,a=[];let i=0,o=0;for(let s=0;s<r;s++)-1===n.indexOf(s)?a.push(e[i++]):a.push(t[o++]);return a}function ga(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function ka(e,t){return ba(e,t.map((e=>1)),t)}function ya(e,t,n){j.b(ma(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function va(e,t){if(ma(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function wa(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ia(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa=Object(ie.b)({logSumExp_:function(e,t=null,n=!1){const r=Object(ae.a)(e,"x","logSumExp"),a=Object(j.I)(t,r.shape),i=ha(r,a,!0),o=bn(r,i),s=Wr(o),u=pa(s,a),c=sa(u),l=Yt(Qn(i,c.shape),c);if(n){const e=ka(l.shape,a);return Qn(l,e)}return l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa=Object(ie.b)({logicalAnd_:function(e,t){const n=Object(ae.a)(e,"a","logicalAnd","bool"),r=Object(ae.a)(t,"b","logicalAnd","bool");ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Gb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa=Object(ie.b)({logicalNot_:function(e){const t={x:Object(ae.a)(e,"x","logicalNot","bool")};return b.a.runKernel(re.Hb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a=Object(ie.b)({logicalOr_:function(e,t){const n=Object(ae.a)(e,"a","logicalOr","bool"),r=Object(ae.a)(t,"b","logicalOr","bool");ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Ib,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ta=Object(ie.b)({logicalXor_:function(e,t){const n=Object(ae.a)(e,"a","logicalXor","bool"),r=Object(ae.a)(t,"b","logicalXor","bool");return ze(n.shape,r.shape),Sa(_a(e,t),Oa(Sa(e,t)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aa=Object(ie.b)({maxPool_:function(e,t,n,r,a){const i=Object(ae.a)(e,"x","maxPool");let o=i,s=!1;3===i.rank&&(s=!0,o=Qn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),j.b(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),j.b(Yn(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Zn("maxPool",r,a);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a},l=b.a.runKernel(re.Kb,u,c);return s?Qn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=Object(ie.b)({maxPool3d_:function(e,t=[1,1,1],n,r,a,i="NDHWC"){const o=Object(ae.a)(e,"x","maxPool3d");let s=o,u=!1;4===o.rank&&(u=!0,s=Qn(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),j.b(5===s.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${s.rank}.`)),j.b("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Zn("maxPool3d",r,a);const c={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},d=b.a.runKernel(re.Lb,c,l);return u?Qn(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca=Object(ie.b)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const i={x:Object(ae.a)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},s=b.a.runKernel(re.Ob,i,o);return{result:s[0],indexes:s[1]}}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ea=Object(ie.b)({mean_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","mean")},a={axis:t,keepDims:n};return b.a.runKernel(re.Qb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(e,t="float32"){if("complex64"===t){const t=ja(e,"float32"),n=ja(e,"float32");return Object(br.a)(t,n)}const n=Object(j.F)(Object(j.O)(e),t);return b.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $a(e,t="float32"){if("complex64"===t){const t=$a(e,"float32"),n=ja(e,"float32");return Object(br.a)(t,n)}const n=Object(j.D)(Object(j.O)(e),t);return b.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ma(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Object(ae.a)(e,"x","meshgrid",e instanceof te.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(ae.a)(t,"y","meshgrid",t instanceof te.a?t.dtype:"float32");const i=Object(j.O)(r.shape),o=Object(j.O)(a.shape);return"xy"===n?(r=Qn(r,[1,-1]),a=Qn(a,[-1,1]),[Ne($a([o,1],r.dtype),r),Ne(a,$a([1,i],a.dtype))]):(r=Qn(r,[-1,1]),a=Qn(a,[1,-1]),[Ne(r,$a([1,o],r.dtype)),Ne($a([i,1],a.dtype),a)])}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const za=Object(ie.b)({min_:function(e,t=null,n=!1){const r={x:Object(ae.a)(e,"x","min")},a={axis:t,keepDims:n};return b.a.runKernel(re.Rb,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ra=Object(ie.b)({minimum_:function(e,t){let n=Object(ae.a)(e,"a","minimum"),r=Object(ae.a)(t,"b","minimum");[n,r]=Object(Ae.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=oe(n,"int32"),r=oe(r,"int32")),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Sb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fa=Object(ie.b)({mirrorPad_:function(e,t,n){j.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Object(ae.a)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");j.b(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)j.b(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),j.b(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},o={x:r};return b.a.runKernel(re.Tb,o,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba=Object(ie.b)({mod_:function(e,t){let n=Object(ae.a)(e,"a","mod"),r=Object(ae.a)(t,"b","mod");[n,r]=Object(Ae.makeTypesMatch)(n,r);const a={a:n,b:r};return b.a.runKernel(re.Ub,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pa=Object(ie.b)({moments_:function(e,t=null,n=!1){e=Object(ae.a)(e,"x","moments");const r=Object(j.I)(t,e.shape),a=Ea(e,r,n);let i=a.shape;n||(i=ka(a.shape,r));const o=en(bn(oe(e,"float32"),Qn(a,i)));return{mean:a,variance:Ea(o,r,n)}}});const Da=Object(ie.b)({multiRNNCell_:function(e,t,n,r){const a=Object(ae.a)(t,"data","multiRNNCell"),i=Object(ae.b)(n,"c","multiRNNCell"),o=Object(ae.b)(r,"h","multiRNNCell");let s=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](s,i[t],o[t]);u.push(n[0]),u.push(n[1]),s=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ga=Object(ie.b)({multinomial_:function(e,t,n,r=!1){const a=Object(ae.a)(e,"logits","multinomial"),i=a.size,o=a.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const s={logits:1===o?Qn(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},c=b.a.runKernel(re.Vb,s,u);return 1===o?Qn(c,[c.size]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const La=Object(ie.b)({notEqual_:function(e,t){let n=Object(ae.a)(e,"a","notEqual","string_or_numeric"),r=Object(ae.a)(t,"b","notEqual","string_or_numeric");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.bc,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa=Object(ie.b)({onesLike_:function(e){const t={x:Object(ae.a)(e,"x","onesLike")};return b.a.runKernel(re.dc,t)}});const Ua=Object(ie.b)({outerProduct_:function(e,t){const n=Object(ae.a)(e,"v1","outerProduct"),r=Object(ae.a)(t,"v2","outerProduct");j.b(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Qn(n,[-1,1]),i=Qn(r,[1,-1]);return Ne(a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Va=Object(ie.b)({pad_:function(e,t,n=0){const r=Object(ae.a)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},i={x:r};return b.a.runKernel(re.fc,i,a)}});const Ha=Object(ie.b)({pad1d_:function(e,t,n=0){return Object(j.b)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Va(e,[t],n)}});const qa=Object(ie.b)({pad2d_:function(e,t,n=0){return Object(j.b)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Va(e,t,n)}});const Ka=Object(ie.b)({pad3d_:function(e,t,n=0){return Object(j.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Va(e,t,n)}});const Ya=Object(ie.b)({pad4d_:function(e,t,n=0){return Object(j.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Va(e,t,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa=Object(ie.b)({spaceToBatchND_:function(e,t,n){const r=Object(ae.a)(e,"x","spaceToBatchND");j.b(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),j.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),j.b(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return b.a.runKernel(re.Jc,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za=Object(ie.b)({pool_:function(e,t,n,r,a,i,o){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");const s=Object(ae.a)(e,"x","maxPool");let u=s,c=!1;3===s.rank&&(c=!0,u=Qn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),j.b(Yn(i,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${a}'`));const l=Pn(u.shape,t,i,a,r),d=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),i=e.concat(r,a),o=t.map(((e,t)=>(e-i[t]%e)%e)),s=a.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],s[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([l.inHeight,l.inWidth],d,h),b=p?r:"valid",g=p?u:Xa(u,d,f),k=("avg"===n?()=>Jn(g,t,i,b,o):()=>Aa(g,t,i,b,o))(),y=p?k:or(k,d,m);return c?Qn(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qa=Object(ie.b)({prelu_:function(e,t){const n={x:Object(ae.a)(e,"x","prelu"),alpha:Object(ae.a)(t,"alpha","prelu")};return b.a.runKernel(re.ic,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ja=Object(ie.b)({prod_:function(e,t=null,n=!1){let r=Object(ae.a)(e,"x","prod");"bool"===r.dtype&&(r=oe(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return b.a.runKernel(re.jc,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei=Object(ie.b)({rand_:function(e,t,n){const r=Object(j.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return b.a.makeTensor(a,e,n)}});var ti=n(45);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ni{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=ti.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,i;do{r=2*this.random()-1,a=2*this.random()-1,i=r*r+a*a}while(i>=1||0===i);const o=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ri{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=ti.alea(a.toString()),this.randn=new ni(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),a=this.randu(),a<t||Math.log(a)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class ai{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ti.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ii=Object(ie.b)({randomGamma_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new ri(t,n,r,a),o=ne(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=i.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oi=Object(ie.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new ni(t,n,r,!1,a),o=ne(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=i.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si=Object(ie.b)({randomUniform_:function(e,t=0,n=1,r="float32",a){const i=ne(e,r),o=new ai(t,n,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=o.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return b.a.runKernel(re.kc,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ci=Object(ie.b)({real_:function(e){const t={input:Object(ae.a)(e,"input","real")};return b.a.runKernel(re.lc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const li=Object(ie.b)({reciprocal_:function(e){const t={x:Object(ae.a)(e,"x","reciprocal")};return b.a.runKernel(re.nc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const di=Object(ie.b)({relu_:function(e){const t={x:Object(ae.a)(e,"x","relu")};return b.a.runKernel(re.oc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi=Object(ie.b)({relu6_:function(e){const t={x:Object(ae.a)(e,"x","relu6")};return b.a.runKernel(re.pc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pi=Object(ie.b)({reverse_:function(e,t){const n={x:Object(ae.a)(e,"x","reverse")},r={dims:t};return b.a.runKernel(re.vc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi=Object(ie.b)({reverse1d_:function(e){const t=Object(ae.a)(e,"x","reverse");return j.b(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),pi(t,0)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mi=Object(ie.b)({reverse2d_:function(e,t){const n=Object(ae.a)(e,"x","reverse");return j.b(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),pi(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bi=Object(ie.b)({reverse3d_:function(e,t){const n=Object(ae.a)(e,"x","reverse");return j.b(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),pi(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gi=Object(ie.b)({reverse4d_:function(e,t){const n=Object(ae.a)(e,"x","reverse");return j.b(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),pi(n,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ki=Object(ie.b)({round_:function(e){const t={x:Object(ae.a)(e,"x","round")};return b.a.runKernel(re.xc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yi=Object(ie.b)({rsqrt_:function(e){const t={x:Object(ae.a)(e,"x","rsqrt","float32")};return b.a.runKernel(re.yc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi=Object(ie.b)({selu_:function(e){const t={x:Object(ae.a)(e,"x","selu")};return b.a.runKernel(re.Bc,t)}});const wi=Object(ie.b)({separableConv2d_:function(e,t,n,r,a,i=[1,1],o="NHWC"){const s=Object(ae.a)(e,"x","separableConv2d"),u=Object(ae.a)(t,"depthwiseFilter","separableConv2d"),c=Object(ae.a)(n,"pointwiseFilter","separableConv2d");let l=s,d=!1;if(3===s.rank&&(d=!0,l=Qn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");j.b(4===l.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`)),j.b(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),j.b(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),j.b(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),j.b(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const h=u.shape[2],p=u.shape[3];j.b(c.shape[2]===h*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`));const f=$r(l,u,r,a,o,i),m=wr(f,c,1,"valid",o);return d?Qn(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii=async function(e,t){const n=Object(ae.a)(e,"x","setdiff1d"),r=Object(ae.a)(t,"y","setdiff1d");j.b(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),j.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),j.b(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),i=await r.data(),o=new Set(i);let s=0;for(let e=0;e<a.length;e++)o.has(a[e])||s++;const u=new te.b([s],n.dtype),c=new te.b([s],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xi=Object(ie.b)({sign_:function(e){const t={x:Object(ae.a)(e,"x","sign")};return b.a.runKernel(re.Dc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Si=Object(ie.b)({sin_:function(e){const t={x:Object(ae.a)(e,"x","sin","float32")};return b.a.runKernel(re.Ec,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oi=Object(ie.b)({sinh_:function(e){const t={x:Object(ae.a)(e,"x","sinh")};return b.a.runKernel(re.Fc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i=Object(ie.b)({slice1d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice1d");return j.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),rr(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti=Object(ie.b)({slice2d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice2d");return j.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),rr(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ai=Object(ie.b)({slice3d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice3d");return j.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),rr(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ni=Object(ie.b)({slice4d_:function(e,t,n){const r=Object(ae.a)(e,"x","slice4d");return j.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),rr(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci=Object(ie.b)({softmax_:function(e,t=-1){const n=Object(ae.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return b.a.runKernel(re.Hc,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ei=Object(ie.b)({fft_:function(e){Object(j.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return b.a.runKernel(re.eb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=Object(ie.b)({ifft_:function(e){Object(j.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return b.a.runKernel(re.rb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i=Object(ie.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Qn(e,[n,t]);r=ji(a)}else{const a=[n,2*(t-1)],i=Qn(ci(e),[n,t]),o=Qn(Qr(e),[n,t]),s=pi(rr(i,[0,1],[n,t-2]),1),u=Qt(pi(rr(o,[0,1],[n,t-2]),1),ln(-1)),c=tr([i,s],1),l=tr([o,u],1),d=Qn(Object(br.a)(c,l),[a[0],a[1]]);r=ji(d)}if(r=ci(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Qn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mi=Object(ie.b)({split_:function(e,t,n=0){const r={x:Object(ae.a)(e,"x","split")},a={numOrSizeSplits:t,axis:n};return b.a.runKernel(re.Pc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zi=Object(ie.b)({rfft_:function(e,t){Object(j.b)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,a=rr(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=tr([e,ja(r)],e.shape.length-1),n=t}else a=e;const i=tn(a),o=Qn(Object(br.a)(a,i),[r,n]),s=Ei(o),u=Math.floor(n/2)+1,c=ci(s),l=Qr(s),d=Mi(c,[u,n-u],c.shape.length-1),h=Mi(l,[u,n-u],l.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Qn(Object(br.a)(d[0],h[0]),p)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ri=Object(ie.b)({squaredDifference_:function(e,t){let n=Object(ae.a)(e,"a","squaredDifference"),r=Object(ae.a)(t,"b","squaredDifference");[n,r]=Object(Ae.makeTypesMatch)(n,r),ze(n.shape,r.shape);const a={a:n,b:r};return b.a.runKernel(re.Sc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fi=Object(ie.b)({squeeze_:function(e,t){const n=Object(ae.a)(e,"x","squeeze");return Qn(n,Object(j.Q)(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi=Object(ie.b)({stack_:function(e,t=0){const n=Object(ae.b)(e,"tensors","stack","string_or_numeric");j.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&j.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return b.a.runKernel(re.ec,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pi=Object(ie.b)({step_:function(e,t=0){const n={x:Object(ae.a)(e,"x","step")},r={alpha:t};return b.a.runKernel(re.Tc,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Di=Object(ie.b)({stridedSlice_:function(e,t,n,r,a=0,i=0,o=0,s=0,u=0){const c={x:Object(ae.a)(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:o,newAxisMask:s,shrinkAxisMask:u};return b.a.runKernel(re.Uc,c,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gi=Object(ie.b)({tan_:function(e){const t={x:Object(ae.a)(e,"x","tan","float32")};return b.a.runKernel(re.ad,t)}});var Li=n(31);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(e,t){Object(j.d)(e);const n=Object(ae.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(Fe.a)(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ui(e,t,n){if(Object(j.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(ae.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Fe.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(e,t,n){if(Object(j.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(ae.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Fe.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hi(e,t,n){if(Object(j.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(ae.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(Fe.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(e,t,n){if(Object(j.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(ae.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(Fe.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ki=Object(ie.b)({topk_:function(e,t=1,n=!0){const r=Object(ae.a)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},o={k:t,sorted:n},[s,u]=b.a.runKernel(re.dd,i,o);return{values:s,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yi=Object(ie.b)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new ni(t,n,r,!0,a),o=ne(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=i.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xi=Object(ie.b)({unique_:function(e,t=0){const n=Object(ae.a)(e,"x","unique","string_or_numeric");Object(j.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,o]=b.a.runKernel(re.gd,r,a);return{values:i,indices:o}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zi=Object(ie.b)({unsortedSegmentSum_:function(e,t,n){const r=Object(ae.a)(e,"x","unsortedSegmentSum"),a=Object(ae.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(j.b)(Object(j.v)(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},o={numSegments:n};return b.a.runKernel(re.id,i,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qi=Object(ie.b)({unstack_:function(e,t=0){const n=Object(ae.a)(e,"x","unstack","string_or_numeric");j.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return b.a.runKernel(re.hd,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ji(e,t=!0,n,r){return b.a.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eo(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ne(e,"int32"),a=ne([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),o=t*e.length;a.values.set(i,o)}return a.toTensor()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const to=async function(e){const t=Object(ae.a)(e,"condition","whereAsync","bool"),n=await t.data(),r=eo(t.shape,n);return e!==t&&t.dispose(),r};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=async function(e,t,n){const r=Object(ae.a)(e,"tensor","boolMask"),a=Object(ae.a)(t,"mask","boolMask","bool"),i=null==n?0:n,o=a.rank,s=r.shape;j.b(o>0,(()=>"mask cannot be scalar")),j.e(s.slice(i,i+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=i;e<i+o;e++)u*=s[e];const c=s.slice(0,i).concat([u],s.slice(i+o)),l=Qn(r,c),d=Qn(a,[-1]),h=await to(d),p=Fi(h,[1]),f=Yr(l,p,i);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(e,t,n=null){if(0===e.rank)return kn(e);if(1!==e.rank&&null===n)return ro(Qn(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return pa(kn(e),n);if(t===1/0)return ha(kn(e),n);if(t===-1/0)return za(kn(e),n);if("euclidean"===t||2===t)return Jt(pa(mn(kn(e),ln(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ha(pa(kn(e),n[0]),n[1]-1);if(t===1/0)return ha(pa(kn(e),n[1]),n[0]);if(t===-1/0)return za(pa(kn(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Jt(pa(en(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ao=Object(ie.b)({norm_:function(e,t="euclidean",n=null,r=!1){const a=ro(e=Object(ae.a)(e,"x","norm"),t,n);let i=a.shape;if(r){const t=Object(j.I)(n,e.shape);i=ka(a.shape,t)}return Qn(a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=Object(ie.b)({movingAverage_:function(e,t,n,r,a=!0){const i=Object(ae.a)(e,"v","movingAverage"),o=Object(ae.a)(t,"x","movingAverage"),s=Object(ae.a)(n,"decay","movingAverage");Object(Ae.assertTypesMatch)(i,o),j.b(j.a(i.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=ln(1),c=bn(u,s);let l=Qt(bn(o,i),c);if(a){j.b(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Object(ae.a)(r,"step","movingAverage");l=Zt(l,bn(u,mn(s,e)))}return Yt(i,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo=Object(ie.b)({scatterND_:function(e,t,n){const r=Object(ae.a)(e,"indices","scatterND","int32"),a=Object(ae.a)(t,"updates","scatterND");qe(a,r,n);const i={indices:r,updates:a},o={shape:n};return b.a.runKernel(re.zc,i,o)}});const so=Object(ie.b)({sparseToDense_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=0){const a=Object(ae.a)(e,"sparseIndices","sparseToDense","int32"),i=Object(ae.a)(t,"sparseValues","sparseToDense"),o=Object(ae.a)(r,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,n,o);const s={sparseIndices:a,sparseValues:i,defaultValue:o},u={outputShape:n};return b.a.runKernel(re.Oc,s,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uo=Object(ie.b)({gatherND_:function(e,t){const n=Object(ae.a)(t,"indices","gatherND","int32"),r={params:Object(ae.a)(e,"x","gatherND","string_or_numeric"),indices:n};return b.a.runKernel(re.nb,r)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const co=Object(ie.b)({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Object(ae.a)(e,"x","dropout");if(j.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),j.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof te.a?a.clone():a;const i=function(e,t){if(null==t)return e.shape.slice();if(j.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,s=Zt(Kr(Yt(si(i,0,1,"float32",r),o)),o);return Qt(a,s)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ho(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let i=0;i<e;++i){const o=2*Math.PI*i/(e+r-1);a[i]=t-n*Math.cos(o)}return Wi(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po=async function(e,t,n=1){const r=Object(ae.a)(e,"predictions","inTopK"),a=Object(ae.a)(t,"targets","inTopK");Object(j.b)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Object(j.b)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Object(j.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];Object(j.b)(n>0&&n<=i,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`));const o=await r.data(),s=await a.data(),[u,c]=[o.length/i,i],l=Object(j.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=o.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===s[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(Li.a)(l,a.shape,"bool")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=Object(ie.b)({conv2DBackpropFilter_:function(e,t,n,r,a,i="NHWC",o){let s=e;3===e.rank&&(s=Qn(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Qn(t,[1,t.shape[0],t.shape[1],t.shape[2]])),j.b(4===s.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${s.shape}.`)),j.b(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),j.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===i?s.shape[3]:s.shape[1],l="NHWC"===i?u.shape[3]:u.shape[1];j.b(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),j.b(l===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`)),Zn("conv2dDerFilter",a,o);const d={x:s,dy:u},h={strides:r,pad:a,dataFormat:i,dimRoundingMode:o,filterShape:n};return b.a.runKernel(re.E,d,h)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Qt(e,Pi(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function bo(e,t){let n=t;const r=Me(e.shape,t.shape);return r.length>0&&(n=pa(n,r)),Qn(n,e.shape)}function go(e,t,n,r){if("linear"===t)return e;if("relu"===t)return di(e);if("elu"===t)return Gr(e);if("relu6"===t)return hi(e);if("prelu"===t)return Qa(e,n);if("leakyrelu"===t)return na(e,r);if("sigmoid"===t)return nr(e);throw new Error(`Unknown fused activation ${t}.`)}const ko=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=Object(ie.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:s,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===ko(b.a.state.gradientDepth,u)){let d=wr(e,t,n,r,a,i,o);return null!=s&&(d=Yt(d,s)),go(d,u,c,l)}const d=Object(ae.a)(e,"x","conv2d","float32"),h=Object(ae.a)(t,"filter","conv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=Qn(d,[1,d.shape[0],d.shape[1],d.shape[2]])),j.b(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),j.b(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),Zn("fused conv2d",r,o),j.b(p.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),j.b(Yn(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),j.b("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Gn(p.shape,h.shape,n,i,r,o);let g,k;null!=s&&(g=Object(ae.a)(s,"bias","fused conv2d"),[g]=Object(Ae.makeTypesMatch)(g,d),ze(m.outShape,g.shape)),null!=c&&(k=Object(ae.a)(c,"prelu weights","fused conv2d"));const y=(e,t)=>{const[a,o,s,c]=t,l=mo(e,s,u);j.b(Kn(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[xr(o.shape,l,a,n,r),fo(o,l,a.shape,n,r)];if(null!=c){const e=bo(c,l);d.push(e)}return d},v={x:p,filter:h,bias:g,preluActivationWeights:k},w={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:l};if(null==s){const e=un(((e,t,n)=>{let r=b.a.runKernel(re.lb,v,w);return n([t,e,r]),f&&(r=Qn(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(p,h)}{const e=un(((e,t,n,r)=>{let a=b.a.runKernel(re.lb,v,w);return r([t,e,a,n]),f&&(a=Qn(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}));return e(p,h,g)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Object(ie.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],o){let s=e;3===e.rank&&(s=Qn(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Qn(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:s,dy:u},l={strides:r,pad:a,dimRoundingMode:o,dilations:i,filterShape:n};return b.a.runKernel(re.Q,c,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wo=Object(ie.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],o){let s=t,u=!1;3===t.rank&&(u=!0,s=Qn(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:s,filter:n},l={strides:r,pad:a,dimRoundingMode:o,dilations:i,inputShape:e},d=b.a.runKernel(re.R,c,l);return u?Qn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=Object(ie.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:s,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===ko(b.a.state.gradientDepth,u)){let d=$r(e,t,n,r,a,i,o);return null!=s&&(d=Yt(d,s)),go(d,u,c,l)}const d=Object(ae.a)(e,"x","depthwiseConv2d","float32"),h=Object(ae.a)(t,"filter","depthwiseConv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=Qn(d,[1,d.shape[0],d.shape[1],d.shape[2]])),j.b(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),j.b(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),j.b(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==i&&(i=[1,1]),j.b(Yn(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Zn("fused depthwiseConv2d",r,o);const m=Gn(p.shape,h.shape,n,i,r,o,!0);let g,k;null!=s&&(g=Object(ae.a)(s,"bias","fused conv2d"),[g]=Object(Ae.makeTypesMatch)(g,d),ze(m.outShape,g.shape)),null!=c&&(k=Object(ae.a)(c,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{j.b(Kn(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[a,s,c,l]=t,d=mo(e,c,u),h=wo(s.shape,d,a,n,r,i,o),p=vo(s,d,a.shape,n,r,i,o);if(null!=l){return[h,p,bo(g,d)]}return[h,p]},v={x:p,filter:h,bias:g,preluActivationWeights:k},w={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:l};if(null==s){const e=un(((e,t,n)=>{let r=b.a.runKernel(re.mb,v,w);return n([t,e,r]),f&&(r=Qn(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(p,h)}{const e=un(((e,t,n,r)=>{let a=b.a.runKernel(re.mb,v,w);return r([t,e,a,n]),f&&(a=Qn(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}));return e(p,h,g)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo=Object(ie.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:s}){if(!1===ko(b.a.state.gradientDepth,i)){let u=Ne(e,t,n,r);return null!=a&&(u=Yt(u,a)),go(u,i,o,s)}let u=Object(ae.a)(e,"a","fused matMul"),c=Object(ae.a)(t,"b","fused matMul");[u,c]=Object(Ae.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=j.O(f),k=j.O(m);j.b(l===d,(()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=ze(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),v=Qn(u,n?[g,l,h]:[g,h,l]),w=Qn(c,r?[k,p,d]:[k,d,p]);let I,x;null!=a&&(I=Object(ae.a)(a,"bias","fused matMul"),[I]=Object(Ae.makeTypesMatch)(I,u),ze(y,I.shape)),null!=o&&(x=Object(ae.a)(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[o,s,u,c]=t,l=mo(Qn(e,u.shape),u,i);let d,h;if(n||r?!n&&r?(d=Ne(l,s,!1,!1),h=Ne(l,o,!0,!1)):n&&!r?(d=Ne(s,l,!1,!0),h=Ne(o,l,!1,!1)):(d=Ne(s,l,!0,!0),h=Ne(l,o,!0,!0)):(d=Ne(l,s,!1,!0),h=Ne(o,l,!0,!1)),null!=a){return[d,h,bo(c,l)]}return[d,h]},O={a:v,b:w,bias:I,preluActivationWeights:x},_={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:s};if(null==a){const e=un(((e,t,n)=>{const r=b.a.runKernel(re.kd,O,_);return n([e,t,r]),{value:Qn(r,y),gradFunc:S}}));return e(v,w)}{const e=un(((e,t,n,r)=>{const a=b.a.runKernel(re.kd,O,_);return r([e,t,a,n]),{value:Qn(a,y),gradFunc:S}}));return e(v,w,I)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So=Object(ie.b)({hammingWindow_:function(e){return ho(e,.54,.46)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo=Object(ie.b)({hannWindow_:function(e){return ho(e,.5,.5)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _o=Object(ie.b)({frame_:function(e,t,n,r=!1,a=0){let i=0;const o=[];for(;i+t<=e.size;)o.push(rr(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,s=tr([rr(e,i,t-r),pn([r],a)]);o.push(s),i+=n}return 0===o.length?Ui([],[0,t]):Qn(tr(o),[o.length,t])}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const To=Object(ie.b)({stft_:function(e,t,n,r,a=Oo){null==r&&(r=lo(t));const i=_o(e,t,n),o=Qt(i,a(t));return zi(o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ao=Object(ie.b)({cropAndResize_:function(e,t,n,r,a="bilinear",i=0){const o=Object(ae.a)(e,"image","cropAndResize"),s=Object(ae.a)(t,"boxes","cropAndResize","float32"),u=Object(ae.a)(n,"boxInd","cropAndResize","int32"),c=s.shape[0];j.b(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),j.b(2===s.rank&&4===s.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${s.shape}.`)),j.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${s.shape}.`)),j.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),j.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),j.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:o,boxes:s,boxInd:u},d={method:a,extrapolationValue:i,cropSize:r};return b.a.runKernel(re.L,l,d)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No=Object(ie.b)({flipLeftRight_:function(e){const t=Object(ae.a)(e,"image","flipLeftRight","float32");j.b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return b.a.runKernel(re.gb,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Co=Object(ie.b)({grayscaleToRGB_:function(e){const t=Object(ae.a)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];j.b(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),j.b(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Hr(t,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eo=Object(ie.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(ae.a)(e,"image","rotateWithOffset","float32");j.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const i={image:a},o={radians:t,fillValue:n,center:r};return b.a.runKernel(re.wc,i,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=e.shape[0];return n=Math.min(n,o),j.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),j.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),j.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),j.b(1===t.rank,(()=>"scores must be a 1D tensor")),j.b(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),j.b(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o=Object(ie.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=Object(ae.a)(e,"boxes","nonMaxSuppression","float32"),o=Object(ae.a)(t,"scores","nonMaxSuppression","float32"),s=jo(i,o,n,r,a),u={maxOutputSize:n=s.maxOutputSize,iouThreshold:r=s.iouThreshold,scoreThreshold:a=s.scoreThreshold};return b.a.runKernel(re.Yb,{boxes:i,scores:o},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mo(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,i=0,o=!1;for(;r<a;){i=r+(a-r>>>1);const s=n(t,e[i]);s>0?r=i+1:(a=i,o=!s)}return o?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||zo)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function zo(e,t){return e>t?1:e<t?-1:0}function Ro(e,t,n,r,a){return Po(e,t,n,r,a,0)}function Fo(e,t,n,r,a,i){return Po(e,t,n,r,a,0,!1,i,!0)}function Bo(e,t,n,r,a,i){return Po(e,t,n,r,a,i,!0)}function Po(e,t,n,r,a,i,o=!1,s=!1,u=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>a&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(Lo);const l=i>0?-.5/i:0,d=[],h=[];for(;d.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let s=!1;for(let n=d.length-1;n>=o;--n){const o=Do(e,i,d[n]);if(o>=r){s=!0;break}if(t.score=t.score*Go(r,l,o),t.score<=a)break}t.suppressBeginIndex=d.length,s||(t.score===n?(d.push(i),h.push(t.score)):t.score>a&&Mo(c,t,Lo))}const p=d.length,f=n-p;s&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return o&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function Do(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),s=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(s-i)*(u-o),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(i,c),b=Math.max(o,l),g=Math.min(s,d),k=Math.min(u,h),y=Math.max(g-m,0)*Math.max(k-b,0);return y/(p+f-y)}function Go(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Lo(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=Object(ae.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(ae.a)(t,"scores","nonMaxSuppressionAsync"),s=jo(i,o,n,r,a);n=s.maxOutputSize,r=s.iouThreshold,a=s.scoreThreshold;const u=await Promise.all([i.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:d}=Ro(c,l,n,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),Wi(d,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uo=Object(ie.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const o=Object(ae.a)(e,"boxes","nonMaxSuppression"),s=Object(ae.a)(t,"scores","nonMaxSuppression"),u=jo(o,s,n,r,a,i),c={boxes:o,scores:s},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},d=b.a.runKernel(re.ac,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const o=Object(ae.a)(e,"boxes","nonMaxSuppressionAsync"),s=Object(ae.a)(t,"scores","nonMaxSuppressionAsync"),u=jo(o,s,n,r,a,i);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma;const c=await Promise.all([o.data(),s.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Bo(l,d,n,r,a,i);return o!==e&&o.dispose(),s!==t&&s.dispose(),{selectedIndices:Wi(h,"int32"),selectedScores:Wi(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho=Object(ie.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const o=Object(ae.a)(e,"boxes","nonMaxSuppression"),s=Object(ae.a)(t,"scores","nonMaxSuppression"),u=jo(o,s,n,r,a,null),c={boxes:o,scores:s},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},d=b.a.runKernel(re.Zb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const o=Object(ae.a)(e,"boxes","nonMaxSuppressionAsync"),s=Object(ae.a)(t,"scores","nonMaxSuppressionAsync"),u=jo(o,s,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([o.data(),s.data()]),{selectedIndices:f,validOutputs:m}=Fo(h,p,c,l,d,i);return o!==e&&o.dispose(),s!==t&&s.dispose(),{selectedIndices:Wi(f,"int32"),validOutputs:ln(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=Object(ie.b)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Object(ae.a)(e,"images","resizeBilinear");j.b(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),j.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),j.b(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=a,o=!1;3===a.rank&&(o=!0,i=Qn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,s={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},c=b.a.runKernel(re.rc,s,u);return o?Qn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yo=Object(ie.b)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Object(ae.a)(e,"images","resizeNearestNeighbor");j.b(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),j.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),j.b("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),j.b(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=a,o=!1;3===a.rank&&(o=!0,i=Qn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,s={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},c=b.a.runKernel(re.tc,s,u);return o?Qn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=Object(ie.b)({threshold_:function(e,t="binary",n=!1,r=.5){const a=Object(ae.a)(e,"image","threshold"),i=a.shape[0]*a.shape[1];let o,s,u,c,l=Qt(Wi([r]),255);if(j.b(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),j.b(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),j.b("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),j.b("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,s,u]=Mi(a,[1,1,1],-1);const e=Qt(o,.2989),t=Qt(s,.587),n=Qt(u,.114);c=Yt(Yt(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,r,a,i,o,s,u=Wi([-1]),c=Wi([0]),l=Wi([0]);for(let d=0;d<e.size-1;d++){n=rr(e,0,d+1),r=rr(e,d+1),o=Zt(pa(n),t),s=Zt(pa(r),t);const h=pa(Qt(n,ui(0,n.size)));a=Zt(h,pa(n));const p=pn(r.shape,n.size),f=Yt(ui(0,r.size),p),m=Qt(r,f);i=Zt(pa(m),pa(r));const b=bn(a,i),g=bn(a,i),k=Qt(o,s);l=Qt(Qt(k,b),g);const y=Xr(l,c);c=Fr(y,l,c),u=Fr(y,Wi([d]),u)}return u}(dr(oe(ki(c),"int32"),Object(Li.a)([]),256),i)}const d=n?aa(c,l):Xr(c,l);return oe(Qt(d,255),"int32")}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zo=Object(ie.b)({transform_:function(e,t,n="nearest",r="constant",a=0,i){const o=Object(ae.a)(e,"image","transform","float32"),s=Object(ae.a)(t,"transforms","transform","float32");j.b(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),j.b(2===s.rank&&(s.shape[0]===o.shape[0]||1===s.shape[0])&&8===s.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),j.b(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:o,transforms:s},c={interpolation:n,fillMode:r,fillValue:a,outputShape:i};return b.a.runKernel(re.ed,u,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qo=Object(ie.b)({bandPart_:function(e,t,n){Object(j.b)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Object(j.b)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(ae.a)(e,"a","bandPart");Object(j.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[i,o]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const s=Qn(ui(0,i,1,"int32"),[-1,1]),u=ui(0,o,1,"int32"),c=bn(s,u),l=Sa(aa(c,ln(+t,"int32")),Zr(c,ln(-n,"int32"))),d=ja([i,o],r.dtype);return Qn(Bi(Qi(Qn(r,[-1,i,o])).map((e=>Fr(l,e,d)))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=Object(ie.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(j.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(j.b)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Mi(e,e.shape[0],0).map((e=>Fi(e,[0])));Object(j.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(b.a.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Qt(pa(Qt(n[r],e)),n[r]);e=bn(e,t)}return Zt(e,ao(e,"euclidean"))})));return t?Bi(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(e,t=!1){return b.a.tidy((()=>{Object(j.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=qr(n),i=se(e);const o=Ui([[1]],[1,1]);let s=se(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=s,c=a;[s,i,a]=b.a.tidy((()=>{const t=rr(i,[e,e],[n-e,1]),u=ao(t),c=rr(i,[e,e],[1,1]),l=Fr(Xr(c,0),Ui([[-1]]),Ui([[1]])),d=bn(c,Qt(l,u)),h=Zt(t,d);s=1===h.shape[0]?se(o):tr([o,rr(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=ca(Zt(Ne(l,d),u)),f=rr(i,[e,0],[n-e,r]),m=Qt(p,s),b=Ee(s);if(0===e)i=bn(f,Ne(m,Ne(b,f)));else{const t=bn(f,Ne(m,Ne(b,f)));i=tr([rr(i,[0,0],[e,r]),t],0)}const g=Ee(m),k=rr(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=bn(k,Ne(Ne(k,s),g));else{const t=bn(k,Ne(Ne(k,s),g));a=tr([rr(a,[0,0],[n,e]),t],1)}return[s,i,a]})),Ft([t,u,c])}return!t&&n>r&&(a=rr(a,[0,0],[n,r]),i=rr(i,[0,0],[r,r])),[a,i]}))}const ts=Object(ie.b)({qr_:function(e,t=!1){if(Object(j.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return es(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Qi(Qn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];r.forEach((e=>{const[n,r]=es(e,t);a.push(n),i.push(r)}));return[Qn(Bi(a,0),e.shape),Qn(Bi(i,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ns;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ns||(ns={}));const rs=Object(ie.b)({computeWeightedLoss_:function(e,t,n=ns.SUM_BY_NONZERO_WEIGHTS){const r=Object(ae.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(ae.a)(t,"weights","computeWeightedLoss"));const i=null==a?r:Qt(r,a);if(n===ns.NONE)return i;if(n===ns.SUM)return pa(i);if(n===ns.MEAN){if(null==a)return Ea(i);{const e=r.size/a.size,t=Zt(pa(i),pa(a));return e>1?Zt(t,ln(e)):t}}if(n===ns.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Zt(pa(i),ln(r.size));{const e=Qt(a,$a(r.shape)),t=oe(pa(La(e,ln(0))),"float32");return Zt(pa(i),t)}}throw Error(`Unknown reduction: ${n}`)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const as=Object(ie.b)({absoluteDifference_:function(e,t,n,r=ns.SUM_BY_NONZERO_WEIGHTS){const a=Object(ae.a)(e,"labels","absoluteDifference"),i=Object(ae.a)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(ae.a)(n,"weights","absoluteDifference")),Object(j.e)(a.shape,i.shape,"Error in absoluteDifference: ");const s=kn(bn(a,i));return rs(s,o,r)}});const is=Object(ie.b)({cosineDistance_:function(e,t,n,r,a=ns.SUM_BY_NONZERO_WEIGHTS){const i=Object(ae.a)(e,"labels","cosineDistance"),o=Object(ae.a)(t,"predictions","cosineDistance");let s=null;null!=r&&(s=Object(ae.a)(r,"weights","cosineDistance")),Object(j.e)(i.shape,o.shape,"Error in cosineDistance: ");const u=ln(1),c=bn(u,pa(Qt(i,o),n,!0));return rs(c,s,a)}});const os=Object(ie.b)({hingeLoss_:function(e,t,n,r=ns.SUM_BY_NONZERO_WEIGHTS){let a=Object(ae.a)(e,"labels","hingeLoss");const i=Object(ae.a)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Object(ae.a)(n,"weights","hingeLoss")),Object(j.e)(a.shape,i.shape,"Error in hingeLoss: ");const s=ln(1);a=bn(Qt(ln(2),a),s);const u=di(bn(s,Qt(a,i)));return rs(u,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss=Object(ie.b)({huberLoss_:function(e,t,n,r=1,a=ns.SUM_BY_NONZERO_WEIGHTS){const i=Object(ae.a)(e,"labels","huberLoss"),o=Object(ae.a)(t,"predictions","huberLoss");let s=null;null!=n&&(s=Object(ae.a)(n,"weights","huberLoss")),Object(j.e)(i.shape,o.shape,"Error in huberLoss: ");const u=ln(r),c=kn(bn(o,i)),l=Ra(c,u),d=bn(c,l),h=Yt(Qt(ln(.5),en(l)),Qt(u,d));return rs(h,s,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us=Object(ie.b)({logLoss_:function(e,t,n,r=1e-7,a=ns.SUM_BY_NONZERO_WEIGHTS){const i=Object(ae.a)(e,"labels","logLoss"),o=Object(ae.a)(t,"predictions","logLoss");let s=null;null!=n&&(s=Object(ae.a)(n,"weights","logLoss")),Object(j.e)(i.shape,o.shape,"Error in logLoss: ");const u=ln(1),c=ln(r),l=ca(Qt(i,sa(Yt(o,c)))),d=Qt(bn(u,i),sa(Yt(bn(u,o),c))),h=bn(l,d);return rs(h,s,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs=Object(ie.b)({meanSquaredError_:function(e,t,n,r=ns.SUM_BY_NONZERO_WEIGHTS){const a=Object(ae.a)(e,"labels","meanSquaredError"),i=Object(ae.a)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Object(ae.a)(n,"weights","meanSquaredError")),Object(j.e)(a.shape,i.shape,"Error in meanSquaredError: ");const s=Ri(a,i);return rs(s,o,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls=Object(ie.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=ns.SUM_BY_NONZERO_WEIGHTS){let i=Object(ae.a)(e,"multiClassLabels","sigmoidCrossEntropy");const o=Object(ae.a)(t,"logits","sigmoidCrossEntropy");let s=null;if(null!=n&&(s=Object(ae.a)(n,"weights","sigmoidCrossEntropy")),Object(j.e)(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ln(r),t=ln(1),n=ln(.5);i=Yt(Qt(i,bn(t,e)),Qt(n,e))}const u=function(e,t){const n=Object(ae.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(ae.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(j.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=di(r),i=Qt(r,n),o=ua(Wr(ca(kn(r))));return Yt(bn(a,i),o)}(i,o);return rs(u,s,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ds=Object(ie.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=ns.SUM_BY_NONZERO_WEIGHTS){let i=Object(ae.a)(e,"onehotLabels","softmaxCrossEntropy");const o=Object(ae.a)(t,"logits","softmaxCrossEntropy");let s=null;if(null!=n&&(s=Object(ae.a)(n,"weights","softmaxCrossEntropy")),Object(j.e)(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ln(r),t=ln(1),n=ln(i.shape[1]);i=Yt(Qt(i,bn(t,e)),Zt(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=un(((e,t,r)=>{const a=xa(t,[n],!0),i=bn(oe(t,"float32"),a);r([e,i]);const o=ca(Qt(i,e));return{value:pa(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,i=ka(e.shape,[n]);return[Qt(Qn(e,i),bn(oe(r,"float32"),Wr(a))),Qt(Qn(e,i),bn(Wr(a),oe(r,"float32")))]}}}));return r(e,t)}(i,o);return rs(u,s,a)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hs=Object(ie.b)({sparseFillEmptyRows_:function(e,t,n,r){const a=Object(ae.a)(e,"indices","sparseFillEmptyRows","int32"),i=Object(ae.a)(t,"values","sparseFillEmptyRows"),o=Object(ae.a)(n,"denseShape","sparseFillEmptyRows","int32"),s=Object(ae.a)(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==s.rank)throw new Error(`Default value should be a scalar but received shape ${s.shape}`);const u={indices:a,values:i,denseShape:o,defaultValue:s},c=b.a.runKernel(re.Kc,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps=Object(ie.b)({sparseReshape_:function(e,t,n){const r=Object(ae.a)(e,"inputIndices","sparseReshape","int32"),a=Object(ae.a)(t,"inputShape","sparseReshape","int32"),i=Object(ae.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:r,inputShape:a,newShape:i},s=b.a.runKernel(re.Lc,o);return{outputIndices:s[0],outputShape:s[1]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=Object(ie.b)({sparseSegmentMean_:function(e,t,n){const r=Object(ae.a)(e,"data","sparseSegmentMean"),a=Object(ae.a)(t,"indices","sparseSegmentMean","int32"),i=Object(ae.a)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const o={data:r,indices:a,segmentIds:i};return b.a.runKernel(re.Mc,o)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms=Object(ie.b)({sparseSegmentSum_:function(e,t,n){const r=Object(ae.a)(e,"data","sparseSegmentSum"),a=Object(ae.a)(t,"indices","sparseSegmentSum","int32"),i=Object(ae.a)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const o={data:r,indices:a,segmentIds:i};return b.a.runKernel(re.Nc,o)}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bs=Object(ie.b)({stringNGrams_:function(e,t,n,r,a,i,o,s){const u=Object(ae.a)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=Object(ae.a)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:a,rightPad:i,padWidth:o,preserveShortSequences:s},d={data:u,dataSplits:c},h=b.a.runKernel(re.Vc,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gs=Object(ie.b)({stringSplit_:function(e,t,n=!0){const r=Object(ae.a)(e,"input","stringSplit","string"),a=Object(ae.a)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const i={skipEmpty:n},o={input:r,delimiter:a},s=b.a.runKernel(re.Wc,o,i);return{indices:s[0],values:s[1],shape:s[2]}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ks=Object(ie.b)({stringToHashBucketFast_:function(e,t){const n=Object(ae.a)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return b.a.runKernel(re.Xc,a,r)}}),ys={fft:Ei,ifft:ji,rfft:zi,irfft:$i},vs={hammingWindow:So,hannWindow:Oo,frame:_o,stft:To},ws={flipLeftRight:No,grayscaleToRGB:Co,resizeNearestNeighbor:Yo,resizeBilinear:Ko,rotateWithOffset:Eo,cropAndResize:Ao,nonMaxSuppression:$o,nonMaxSuppressionAsync:Wo,nonMaxSuppressionWithScore:Uo,nonMaxSuppressionWithScoreAsync:Vo,nonMaxSuppressionPadded:Ho,nonMaxSuppressionPaddedAsync:qo,threshold:Xo,transform:Zo},Is={bandPart:Qo,gramSchmidt:Jo,qr:ts},xs={absoluteDifference:as,computeWeightedLoss:rs,cosineDistance:is,hingeLoss:os,huberLoss:ss,logLoss:us,meanSquaredError:cs,sigmoidCrossEntropy:ls,softmaxCrossEntropy:ds},Ss={sparseFillEmptyRows:hs,sparseReshape:ps,sparseSegmentMean:fs,sparseSegmentSum:ms},Os={stringNGrams:bs,stringSplit:gs,stringToHashBucketFast:ks},_s={sgd:Sn.sgd,momentum:Sn.momentum,adadelta:Sn.adadelta,adagrad:Sn.adagrad,rmsprop:Sn.rmsprop,adamax:Sn.adamax,adam:Sn.adam};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ts=n(89);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(e,t){const n=e[0].length;e.forEach(((e,t)=>{j.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),j.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let i=0;i<n;i++)j.b(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Ns(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs=30;function Es(e){return e<=Cs?e:Object(j.G)(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Ms(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function zs(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Rs(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Fs(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bs=1.7580993408473768,Ps=1.0507009873554805,Ds=.3275911,Gs=.254829592,Ls=-.284496736,Ws=1.421413741,Us=-1.453152027,Vs=1.061405429;var Hs=n(29);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ks(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ys(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Xs(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Zs(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Qs(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Js(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}function eu(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tu="->",nu=/->/g;function ru(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(nu,"").length)/tu.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(tu);Object(j.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const i=r.split(","),o=i.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const s=[];for(let e=0;e<a.length;++e){const t=a[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===s.indexOf(t)&&s.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===s.indexOf(t)&&","!==t&&s.push(t)}const u=new Array(i.length);for(let e=0;e<o;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(s.indexOf(i[e][t]))}const c=s.length,l=[];for(let e=a.length;e<c;++e)l.push(e);return{allDims:s,summedDims:l,idDims:u}}function au(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function iu(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Object(j.b)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function ou(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const a=uu(t,n[e]);for(const t of a)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function su(e){return e.every(((e,t)=>e===t))}function uu(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function cu(e,t,n=0){let r=[];if("number"==typeof t)Object(j.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(j.b)(a<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}Object(j.b)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function du(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function hu(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pu(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function fu(e,t){return`size ${e} must be non-negative, not ${t}`}function mu(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function bu(e,t){return`Input to reshape is a SparseTensor with ${Object(j.O)(e)}\n  dense values, but the requested shape requires a multiple of ${Object(j.O)(t)}. inputShape=${e} outputShape= ${t}`}function gu(e,t){return`Input to reshape is a tensor with ${Object(j.O)(e)} dense values, but the requested shape has ${Object(j.O)(t)}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(){return"segment ids must be >= 0"}function yu(){return"segment ids are not increasing"}function vu(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function wu(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(e,t){let n,r=!1;for(e<=Cs?(n=e,r=!0):n=Object(j.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(j.G)(e,n+1);return n}function xu(e,t,n){const r=[],a=e.length;for(let i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}function Su(e,t,n,r){const a=t.shape.length,i=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],s=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)s.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)s.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)s.push(t.shape[e]);for(let t=n+1;t<i;t++)s.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:s}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ou(e){try{return e.map((e=>Object(mt.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function _u(e){return e.map((e=>Object(mt.encodeString)(e)))}var Tu=n(51),Au=n(48);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var r=n(3),a=n(9),i=n(14),o=n(15),s=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=e;if(Object(o.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(o.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(o.A)(e))return void Object(o.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(o.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(o.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)c(e[t],r,n.concat(t))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof i.a)return l(a,e.dtype,t,n),e;let c=Object(o.r)(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!Object(o.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,c);Object(o.A)(e)||Array.isArray(e)||(e=[e]);const h="string"!==c?Object(s.toTypedArray)(e,c):Object(o.m)(e,[],!0);return r.a.makeTensor(h,d,c)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var r=n(3),a=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=i;const s=(...e)=>{r.a.startScope(n);try{const t=o(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"a",(function(){return v}));var r=n(48),a=n(9),i=n(35),o=n(4),s=n(30),u=n(29),c=n(6),l=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const i=()=>{r=n()};let o;const s=c.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:c.now()-s})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,i){const o="number"==typeof r?l.L(`${r}ms`,9):r.error,s=l.L(e,25),u=t.rank,c=t.size,d=l.L(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${s}\t%c${o}\t%c${u}D ${d}\t%c${c}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var f=n(14),m=n(10);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class k{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){Object(s.d)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(s.d)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.b(`Initialization of backend ${e} failed`),u.b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.b(`Initialization of backend ${e} failed`),u.b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return k.nextTensorId++}nextVariableId(){return k.nextVariableId++}clone(e){const t=v.runKernel(o.sb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return v.runKernel(o.x,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Object(s.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=b(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(b(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const c=Object(s.c)(t,this.backendName);l.b(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:i,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const s=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,s);n=this.saveTensorsForBackwardMode(e)}return s}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:d,attrs:h}=e,p=b(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(c,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Object(s.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(l.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return i.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.z(e[0])&&(a=e.map((e=>c.encodeString(e))));const i=r.write(a,t,n),o=new f.a(t,n,i,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(i),t=Object(l.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new f.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,i){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(s.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,i))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.b(a instanceof f.a,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],o=i.inputs;for(const e in o){const n=o[e];let s=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),s=!0,a[i.id]=!0;break}if(s)break}}const i={};i[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,o[n.id]=!0;break}}const s=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,s.push(t)}}return s}(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Object(l.D)(Object(l.O)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const i=t[a],o=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const s=i.gradient(o);for(const t in i.inputs){if(!(t in s))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(s)}.`);const a=n((()=>s[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=i.inputs[t];if(!l.a(a.shape,o.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return l.b(l.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.b(t.every((e=>e instanceof f.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.b(n.value instanceof f.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.b(l.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];l.b(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.b(i.every((e=>e instanceof f.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return i.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(c.now)(),n=await this.backend.time(e);return n.wallMs=Object(c.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=Object(i.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new k(t)}return Object(a.d)(e._tfengine.ENV),Object(f.f)((()=>e._tfengine)),e._tfengine}k.nextTensorId=0,k.nextVariableId=0;const v=y();function w(e,t){const n={a:e,b:t};return v.runKernel(o.d,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return s})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return k})),n.d(t,"p",(function(){return y})),n.d(t,"q",(function(){return v})),n.d(t,"s",(function(){return w})),n.d(t,"t",(function(){return I})),n.d(t,"u",(function(){return x})),n.d(t,"w",(function(){return S})),n.d(t,"v",(function(){return O})),n.d(t,"x",(function(){return _})),n.d(t,"y",(function(){return T})),n.d(t,"z",(function(){return A})),n.d(t,"A",(function(){return N})),n.d(t,"B",(function(){return C})),n.d(t,"C",(function(){return E})),n.d(t,"D",(function(){return j})),n.d(t,"E",(function(){return $})),n.d(t,"F",(function(){return M})),n.d(t,"G",(function(){return z})),n.d(t,"H",(function(){return R})),n.d(t,"I",(function(){return F})),n.d(t,"J",(function(){return B})),n.d(t,"K",(function(){return P})),n.d(t,"M",(function(){return D})),n.d(t,"L",(function(){return G})),n.d(t,"N",(function(){return L})),n.d(t,"O",(function(){return W})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return V})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return q})),n.d(t,"T",(function(){return K})),n.d(t,"V",(function(){return Y})),n.d(t,"U",(function(){return X})),n.d(t,"mc",(function(){return Z})),n.d(t,"W",(function(){return Q})),n.d(t,"X",(function(){return J})),n.d(t,"Y",(function(){return ee})),n.d(t,"ab",(function(){return te})),n.d(t,"Z",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return ie})),n.d(t,"eb",(function(){return oe})),n.d(t,"fb",(function(){return se})),n.d(t,"gb",(function(){return ue})),n.d(t,"hb",(function(){return ce})),n.d(t,"ib",(function(){return le})),n.d(t,"kb",(function(){return de})),n.d(t,"ob",(function(){return he})),n.d(t,"nb",(function(){return pe})),n.d(t,"pb",(function(){return fe})),n.d(t,"qb",(function(){return me})),n.d(t,"sb",(function(){return be})),n.d(t,"rb",(function(){return ge})),n.d(t,"tb",(function(){return ke})),n.d(t,"ub",(function(){return ye})),n.d(t,"vb",(function(){return ve})),n.d(t,"wb",(function(){return we})),n.d(t,"zb",(function(){return Ie})),n.d(t,"Ab",(function(){return xe})),n.d(t,"Bb",(function(){return Se})),n.d(t,"Cb",(function(){return Oe})),n.d(t,"Db",(function(){return _e})),n.d(t,"Eb",(function(){return Te})),n.d(t,"Gb",(function(){return Ae})),n.d(t,"Hb",(function(){return Ne})),n.d(t,"Ib",(function(){return Ce})),n.d(t,"Fb",(function(){return Ee})),n.d(t,"xb",(function(){return je})),n.d(t,"yb",(function(){return $e})),n.d(t,"Jb",(function(){return Me})),n.d(t,"Pb",(function(){return ze})),n.d(t,"Kb",(function(){return Re})),n.d(t,"Nb",(function(){return Fe})),n.d(t,"Lb",(function(){return Be})),n.d(t,"Mb",(function(){return Pe})),n.d(t,"Ob",(function(){return De})),n.d(t,"Qb",(function(){return Ge})),n.d(t,"Rb",(function(){return Le})),n.d(t,"Sb",(function(){return We})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ve})),n.d(t,"Vb",(function(){return He})),n.d(t,"Wb",(function(){return qe})),n.d(t,"Xb",(function(){return Ke})),n.d(t,"bc",(function(){return Ye})),n.d(t,"Yb",(function(){return Xe})),n.d(t,"Zb",(function(){return Ze})),n.d(t,"ac",(function(){return Qe})),n.d(t,"dc",(function(){return Je})),n.d(t,"cc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return it})),n.d(t,"jc",(function(){return ot})),n.d(t,"kc",(function(){return st})),n.d(t,"lc",(function(){return ut})),n.d(t,"nc",(function(){return ct})),n.d(t,"oc",(function(){return lt})),n.d(t,"qc",(function(){return dt})),n.d(t,"tc",(function(){return ht})),n.d(t,"uc",(function(){return pt})),n.d(t,"rc",(function(){return ft})),n.d(t,"sc",(function(){return mt})),n.d(t,"pc",(function(){return bt})),n.d(t,"vc",(function(){return gt})),n.d(t,"xc",(function(){return kt})),n.d(t,"yc",(function(){return yt})),n.d(t,"zc",(function(){return vt})),n.d(t,"Ac",(function(){return wt})),n.d(t,"Bc",(function(){return It})),n.d(t,"Gc",(function(){return xt})),n.d(t,"Ec",(function(){return St})),n.d(t,"Fc",(function(){return Ot})),n.d(t,"Dc",(function(){return _t})),n.d(t,"Cc",(function(){return Tt})),n.d(t,"Ic",(function(){return At})),n.d(t,"Qc",(function(){return Nt})),n.d(t,"Zc",(function(){return Ct})),n.d(t,"Jc",(function(){return Et})),n.d(t,"Pc",(function(){return jt})),n.d(t,"Hc",(function(){return $t})),n.d(t,"Kc",(function(){return Mt})),n.d(t,"Lc",(function(){return zt})),n.d(t,"Mc",(function(){return Rt})),n.d(t,"Nc",(function(){return Ft})),n.d(t,"Oc",(function(){return Bt})),n.d(t,"Sc",(function(){return Pt})),n.d(t,"Rc",(function(){return Dt})),n.d(t,"Uc",(function(){return Gt})),n.d(t,"Vc",(function(){return Lt})),n.d(t,"Wc",(function(){return Wt})),n.d(t,"Xc",(function(){return Ut})),n.d(t,"Yc",(function(){return Vt})),n.d(t,"ad",(function(){return Ht})),n.d(t,"bd",(function(){return qt})),n.d(t,"cd",(function(){return Kt})),n.d(t,"dd",(function(){return Yt})),n.d(t,"ed",(function(){return Xt})),n.d(t,"fd",(function(){return Zt})),n.d(t,"gd",(function(){return Qt})),n.d(t,"hd",(function(){return Jt})),n.d(t,"id",(function(){return en})),n.d(t,"jd",(function(){return tn})),n.d(t,"Tc",(function(){return nn})),n.d(t,"jb",(function(){return rn})),n.d(t,"wc",(function(){return an})),n.d(t,"kd",(function(){return on})),n.d(t,"lb",(function(){return sn})),n.d(t,"mb",(function(){return un}));const r="Abs",a="Acos",i="Acosh",o="Add",s="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",k="AvgPoolGrad",y="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",I="BatchToSpaceND",x="Bincount",S="BroadcastTo",O="BroadcastArgs",_="Cast",T="Ceil",A="ClipByValue",N="Complex",C="ComplexAbs",E="Concat",j="Conv2D",$="Conv2DBackpropFilter",M="Conv2DBackpropInput",z="Conv3D",R="Conv3DBackpropFilterV2",F="Conv3DBackpropInputV2",B="Cos",P="Cosh",D="Cumsum",G="CropAndResize",L="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",V="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",Y="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Z="RealDiv",Q="Einsum",J="Elu",ee="EluGrad",te="Erf",ne="Equal",re="Exp",ae="ExpandDims",ie="Expm1",oe="FFT",se="Fill",ue="FlipLeftRight",ce="Floor",le="FloorDiv",de="FusedBatchNorm",he="GatherV2",pe="GatherNd",fe="Greater",me="GreaterEqual",be="Identity",ge="IFFT",ke="Imag",ye="IsFinite",ve="IsInf",we="IsNan",Ie="LeakyRelu",xe="Less",Se="LessEqual",Oe="LinSpace",_e="Log",Te="Log1p",Ae="LogicalAnd",Ne="LogicalNot",Ce="LogicalOr",Ee="LogSoftmax",je="LRN",$e="LRNGrad",Me="Max",ze="Maximum",Re="MaxPool",Fe="MaxPoolGrad",Be="MaxPool3D",Pe="MaxPool3DGrad",De="MaxPoolWithArgmax",Ge="Mean",Le="Min",We="Minimum",Ue="MirrorPad",Ve="Mod",He="Multinomial",qe="Multiply",Ke="Neg",Ye="NotEqual",Xe="NonMaxSuppressionV3",Ze="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Je="OnesLike",et="OneHot",tt="Pack",nt="PadV2",rt="Pool",at="Pow",it="Prelu",ot="Prod",st="Range",ut="Real",ct="Reciprocal",lt="Relu",dt="Reshape",ht="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ft="ResizeBilinear",mt="ResizeBilinearGrad",bt="Relu6",gt="Reverse",kt="Round",yt="Rsqrt",vt="ScatterNd",wt="Select",It="Selu",xt="Slice",St="Sin",Ot="Sinh",_t="Sign",Tt="Sigmoid",At="Softplus",Nt="Sqrt",Ct="Sum",Et="SpaceToBatchND",jt="SplitV",$t="Softmax",Mt="SparseFillEmptyRows",zt="SparseReshape",Rt="SparseSegmentMean",Ft="SparseSegmentSum",Bt="SparseToDense",Pt="SquaredDifference",Dt="Square",Gt="StridedSlice",Lt="StringNGrams",Wt="StringSplit",Ut="StringToHashBucketFast",Vt="Sub",Ht="Tan",qt="Tanh",Kt="Tile",Yt="TopK",Xt="Transform",Zt="Transpose",Qt="Unique",Jt="Unpack",en="UnsortedSegmentSum",tn="ZerosLike",nn="Step",rn="FromPixels",an="RotateWithOffset",on="_FusedMatMul",sn="FusedConv2D",un="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return s})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return c})),n.d(t,"k",(function(){return l})),n.d(t,"j",(function(){return d})),n.d(t,"l",(function(){return h})),n.d(t,"i",(function(){return p})),n.d(t,"b",(function(){return f})),n.d(t,"d",(function(){return m})),n.d(t,"c",(function(){return b}));n(0);var r=n(36),a=n(11);function i(e,t){if(!e)throw new Error(t)}function o(e){return"boolean"==typeof e}function s(e){return"number"==typeof e&&Number.isInteger(e)}function u(e){return e instanceof Array&&e.every((e=>s(e)))}function c(e){return 0===e[0]&&1===e[1]||(1===e[0]&&2===e[1]||2===e[0]&&3===e[1])}function l(e){i(e.type in a.d,"The operand type is invalid."),e.dimensions&&i(u(e.dimensions),"The dimensions is invalid.")}function d(e,t=""){i(e instanceof a.c,`The parameter ${t} is not an operand.`)}function h(e,t=""){i(void 0===e||e instanceof a.c,`The parameter ${t} is not an optional operand.`)}function p(e,t){if("undefined"!=typeof e&&e.length>0)for(let n=0;n<e.length;++n)if(e[n]>=t||e[n]<-t)return!1;return!0}function f(e,t){i(e.length===t.length,`The actual length ${e.length} is not equal to expected length ${t.length}.`);for(let n=0;n<e.length;++n)i(e[n]===t[n],`${e[n]} is not equal to ${t[n]} of index ${n}.`)}function m(e,t,n,a,i,o,s){let u;if(s===r.a.explicit)u=[[0,0],[n[0],n[1]],[n[2],n[3]],[0,0]];else{u=[[0,0],[0,0],[0,0],[0,0]];const n=[0,0];for(let t=0;t<2;++t)n[t]=Math.ceil(e.shape[1+t]/a[t]);const c=[0,0];for(let r=0;r<2;++r)c[r]=a[r]*(n[r]-1)+i[r]+((t.shape[r]-1)*o[r]+1)-e.shape[1+r];if(s===r.a["same-upper"])for(let e=0;e<2;++e)u[e+1][0]=c[e]-Math.ceil(c[e]/2),u[e+1][1]=Math.ceil(c[e]/2);else for(let e=0;e<2;++e)u[e+1][0]=c[e]-Math.floor(c[e]/2),u[e+1][1]=Math.floor(c[e]/2)}return u}function b(e,t,n,a,i,o,s){const u=((n+i-1)/i-1)*i+(a+(a-1)*(t-1)),c=u>n?u-n:0;switch(e){case r.a["same-upper"]:o=Math.floor(c/2),s=Math.floor((c+1)/2);break;case r.a["same-lower"]:o=Math.floor((c+1)/2),s=Math.floor(c/2)}return[o,s]}},function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"swap",(function(){return a.S})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.T})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.U})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x})),n.d(t,"hexToLong",(function(){return s})),n.d(t,"fingerPrint64",(function(){return k})),n.d(t,"createScalarValue",(function(){return y})),n.d(t,"toTypedArray",(function(){return v})),n.d(t,"now",(function(){return w})),n.d(t,"fetch",(function(){return I})),n.d(t,"encodeString",(function(){return x})),n.d(t,"decodeString",(function(){return S}));var r=n(9),a=n(15),i=n(88);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=n.n(i).a||i;function s(e){return o.fromString(e,!0,16)}const u=s("c3a5c85c97cb3127"),c=s("b492b66fbe98f273"),l=s("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function p(e,t){return h(e,t,8)}function f(e,t){return h(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t,n=s("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function g(e,t,n,r){return function(e,t,n,r,a,i){a=a.add(e),i=m(i.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),i=i.add(m(a,44)),[a.add(r),i.add(o)]}(p(e,t),p(e,t+8),p(e,t+16),p(e,t+24),n,r)}function k(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=l.add(2*t),r=p(e,0).add(l),a=p(e,t-8);return b(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=l.add(2*t);return b(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(l.mul(n).xor(u.mul(r))).mul(l)}return l}(e,t):function(e,t=e.length){const n=l.add(2*t),r=p(e,0).mul(c),a=p(e,8),i=p(e,t-8).mul(n),o=p(e,t-16).mul(l);return b(m(r.add(a),43).add(m(i,30)).add(o),r.add(m(a.add(l),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=l.add(2*t),r=p(e,0).mul(l),a=p(e,8),i=p(e,t-8).mul(n),o=p(e,t-16).mul(l),s=m(r.add(a),43).add(m(i,30)).add(o),u=b(s,r.add(m(a.add(l),18)).add(i),n),c=p(e,16).mul(n),d=p(e,24),h=s.add(p(e,t-32)).mul(n),f=u.add(p(e,t-24)).mul(n);return b(m(c.add(d),43).add(m(h,30)).add(f),c.add(m(d.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(c).add(113),i=d(a.mul(l).add(113)).mul(l),s=[o.UZERO,o.UZERO],h=[o.UZERO,o.UZERO];r=r.mul(l).add(p(e,0));let k=0;const y=64*(t-1>>6),v=y+(t-1&63)-63;do{r=m(r.add(a).add(s[0]).add(p(e,k+8)),37).mul(c),a=m(a.add(s[1]).add(p(e,k+48)),42).mul(c),r=r.xor(h[1]),a=a.add(s[0]).add(p(e,k+40)),i=m(i.add(h[0]),33).mul(c),s=g(e,k,s[1].mul(c),r.add(h[0])),h=g(e,k+32,i.add(h[1]),a.add(p(e,k+16))),[i,r]=[r,i],k+=64}while(k!==y);const w=c.add(i.and(255).shl(1));return k=v,h[0]=h[0].add(t-1&63),s[0]=s[0].add(h[0]),h[0]=h[0].add(s[0]),r=m(r.add(a).add(s[0]).add(p(e,k+8)),37).mul(w),a=m(a.add(s[1]).add(p(e,k+48)),42).mul(w),r=r.xor(h[1].mul(9)),a=a.add(s[0].mul(9).add(p(e,k+40))),i=m(i.add(h[0]),33).mul(w),s=g(e,k,s[1].mul(w),r.add(h[0])),h=g(e,k+32,i.add(h[1]),a.add(p(e,k+16))),[i,r]=[r,i],b(b(s[0],h[0],w).add(d(a).mul(u)).add(i),b(s[1],h[1],w).add(r),w)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y(e,t){return"string"===t?x(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return Object(r.c)().platform.now()}function I(e,t){return Object(r.c)().platform.fetch(e,t)}function x(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n){return({inputs:i,attrs:o,backend:s})=>{const{x:u}=i;if(Object(a.a)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=s,l=c.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),h=n||u.dtype,p=r.util.getArrayFromDType(h,d);for(let e=0;e<d;++e)p[e]=t(l[e],o);return c.makeTensorInfo(u.shape,h,p)}}function o(e,t,n){return({inputs:r,attrs:i,backend:o})=>{const{x:s}=r;if(Object(a.a)(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,c=u.data.get(s.dataId).values,l=n||s.dtype,d=t(c,l,i);return u.makeTensorInfo(s.shape,l,d)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return u})),n.d(t,"d",(function(){return c}));var r=n(15);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a="tfjsflags";class i{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(s().getBool("IS_TEST")||s().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];s().getBool("IS_TEST")||s().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function s(){return u}let u=null;function c(e){u=e}},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return o})),n.d(t,"assertTypesMatch",(function(){return s})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n(14),a=n(32),i=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function s(e,t){Object(i.b)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const i=e;for(const e in i){const r=i[e];n.has(r)||(n.add(r),l(r,t,n))}}},function(e,t,n){"use strict";n.d(t,"d",(function(){return r})),n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"e",(function(){return u}));var r,a=n(5);!function(e){e.float32="float32",e.float16="float16",e.int32="int32",e.uint32="uint32",e.int8="int8",e.uint8="uint8"}(r||(r={}));class i{constructor(e){this.builder_=e}get builder(){return this.builder_}}class o extends i{constructor(e,t,n){super(n),a.a("string"==typeof e,"The name parameter is invalid"),this.name=e,a.k(t),this.desc=t}}class s extends i{constructor(e,t,n){super(n),this.desc=e,this.value=t}}class u extends i{constructor(e){super(e.builder),this.operation=e}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a,i,o)=>{const s=r.backend_util.assertAndGetBroadcastShape(t,n),u=s.length,c=r.util.computeStrides(s),l=r.util.sizeFromShape(s),d=r.util.getTypedArrayFromDType(o,l),h=t.length,p=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),b=r.backend_util.getBroadcastDims(t,s),g=r.backend_util.getBroadcastDims(n,s);if(b.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],i[t%i.length]);else for(let t=0;t<d.length;++t){const n=r.util.indexToLoc(t,u,c),o=n.slice(-h);b.forEach((e=>o[e]=0));const s=r.util.locToIndex(o,h,f),l=n.slice(-p);g.forEach((e=>l[e]=0));const k=r.util.locToIndex(l,p,m);d[t]=e(a[s],i[k])}return[d,s]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(7),i=n(28),o=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,s){return null==n?({inputs:n,backend:i})=>{const{a:o,b:u}=n,c=i;Object(a.a)([o,u],e);const l=c.data.get(o.dataId).values,d=c.data.get(u.dataId).values,h="string"===o.dtype?r.backend_util.fromUint8ToStringArray(l):l,p="string"===o.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=s||o.dtype,[m,b]=t(o.shape,u.shape,h,p,f);return c.makeTensorInfo(b,f,m)}:({inputs:e,backend:r})=>{const{a:a,b:u}=e,c=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=Object(i.a)({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(s.dataId).values,h=Object(i.a)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),p=c.data.get(h.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,b=c.data.get(f.dataId).values,g=c.data.get(m.dataId).values,[k,y,v]=n(a.shape,u.shape,l,d,b,g),w=c.makeTensorInfo(v,"float32",k),I=c.makeTensorInfo(v,"float32",y),x=Object(o.a)({inputs:{real:w,imag:I},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(w),c.disposeIntermediateTensorInfo(I),x}{const e=c.data.get(a.dataId).values,n=c.data.get(u.dataId).values,r=s||a.dtype,[i,o]=t(a.shape,u.shape,e,n,r);return c.makeTensorInfo(o,r,i)}}}function u(e){return(t,n,a,i,o,s)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),c=r.util.sizeFromShape(u),l=u.length,d=r.util.computeStrides(u),h=r.util.getTypedArrayFromDType("float32",c),p=r.util.getTypedArrayFromDType("float32",c),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),b=r.backend_util.mergeRealAndImagArrays(a,i),g=r.backend_util.mergeRealAndImagArrays(o,s),k=t.length,y=r.util.computeStrides(t),v=n.length,w=r.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%b.length,r=t%g.length,a=e(b[2*n],b[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=r.util.indexToLoc(t,l,d),a=n.slice(-k);f.forEach((e=>a[e]=0));const i=r.util.locToIndex(a,k,y),o=n.slice(-v);m.forEach((e=>o[e]=0));const s=r.util.locToIndex(o,v,w),u=e(b[2*i],b[2*i+1],g[2*s],g[2*s+1]);h[t]=u.real,p[t]=u.imag}return[h,p,u]}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return d})),n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return b})),n.d(t,"d",(function(){return g})),n.d(t,"a",(function(){return k})),n.d(t,"c",(function(){return y}));var r=n(35),a=n(15);function i(e,t,n,r){const i=Object(a.j)(t),s=function(e,t,n,r){const i=Object(a.O)(t),s=r[r.length-1],u=new Array(s).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let e=0;e<i/s;e++){const t=e*s;for(let e=0;e<s;e++)u[e]=Math.max(u[e],o(d[t+e],0,n).length)}return u}(e,t,n,i),l=t.length,d=u(e,t,n,i,s),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${l}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(a.z)(e)?`'${e}'`:"bool"===n?s(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function s(e){return 0===e?"false":"true"}function u(e,t,n,r,a,i=!0){const l="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[o(c(e)[0],0,n)]}return"bool"===n?[s(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*l;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(r=c(r),i=c(i)),["["+r.map(((e,t)=>o(e,a[t],n))).join(", ")+", ..., "+i.map(((e,t)=>o(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?c(e):Array.from(e)).map(((e,t)=>o(e,a[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,i=r+m;b.push(...u(e.slice(r,i),p,n,f,a,!1))}b.push("...");for(let t=d-3;t<d;t++){const r=t*m,i=r+m;b.push(...u(e.slice(r,i),p,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,i=r+m;b.push(...u(e.slice(r,i),p,n,f,a,t===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+g;let k=",\n";for(let e=2;e<h;e++)k+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":k),b}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(e){h=e}function b(e){p=e}function g(e){f=e}class k{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return i(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}Object.defineProperty(k,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Object(r.a)("Tensor",(()=>k));class y extends k{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>e instanceof k&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,s(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,s(e,n,r),s(t,n,r)}function i(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2==0?e:e+1}function s(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){d(g(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||j(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function k(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function I(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function x(e,t=(e=>0),n){return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const s=t(i);null!=n&&i>=n?a():setTimeout(o,s)};o()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function O(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>k(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function _(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:O(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[o]||i[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function N(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function C(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function E(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function j(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function $(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function M(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function z(e){return"string"==typeof e||e instanceof String}function R(e){return"boolean"==typeof e}function F(e){return"number"==typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":F(e)?"float32":z(e)?"string":R(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function D(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function G(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function L(e,t,n,r=!1){const a=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)a[t]=n[e+t]}else{const i=t[0],o=t.slice(1),s=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)a[t]=L(e+t*s,o,n,r)}return a}function W(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return L(0,e,t,n)}function U(e,t){const n=V(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function V(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Y(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return i})),n.d(t,"H",(function(){return o})),n.d(t,"S",(function(){return s})),n.d(t,"R",(function(){return u})),n.d(t,"J",(function(){return c})),n.d(t,"l",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"d",(function(){return p})),n.d(t,"m",(function(){return f})),n.d(t,"O",(function(){return m})),n.d(t,"y",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"v",(function(){return k})),n.d(t,"T",(function(){return y})),n.d(t,"P",(function(){return v})),n.d(t,"k",(function(){return w})),n.d(t,"L",(function(){return I})),n.d(t,"K",(function(){return x})),n.d(t,"s",(function(){return S})),n.d(t,"I",(function(){return O})),n.d(t,"Q",(function(){return _})),n.d(t,"o",(function(){return T})),n.d(t,"n",(function(){return A})),n.d(t,"h",(function(){return N})),n.d(t,"B",(function(){return C})),n.d(t,"p",(function(){return E})),n.d(t,"A",(function(){return j})),n.d(t,"g",(function(){return $})),n.d(t,"f",(function(){return M})),n.d(t,"z",(function(){return z})),n.d(t,"t",(function(){return R})),n.d(t,"w",(function(){return F})),n.d(t,"r",(function(){return B})),n.d(t,"u",(function(){return P})),n.d(t,"G",(function(){return D})),n.d(t,"j",(function(){return G})),n.d(t,"U",(function(){return W})),n.d(t,"D",(function(){return U})),n.d(t,"F",(function(){return V})),n.d(t,"E",(function(){return H})),n.d(t,"c",(function(){return q})),n.d(t,"C",(function(){return K})),n.d(t,"q",(function(){return Y})),n.d(t,"x",(function(){return X}))},function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return s})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return p})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"i",(function(){return b})),n.d(t,"g",(function(){return g})),n.d(t,"h",(function(){return k}));var r=n(23),a=n(31),i=n(15),o=n(49);async function s(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){const o=a[i],s=Array.isArray(e)?e[i].tensor:e[o];if("float32"!==s.dtype&&"int32"!==s.dtype&&"bool"!==s.dtype&&"string"!==s.dtype&&"complex64"!==s.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${s.dtype}`);const u={name:o,shape:s.shape,dtype:s.dtype};if("string"===s.dtype){const e=new Promise((async e=>{const t=await s.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(s.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let s,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,h=Object(i.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=o.a[n.dtype],a=e.slice(u,u+h*r),i="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(i.length);for(let e=0;e<i.length;e++){const t=i[e];p[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=y()),p=s(i)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(i.length);for(let e=0;e<i.length;e++){const t=i[e];p[e]=Math.round(t*n.scale+n.min)}}u+=h*r}else if("string"===l){const t=Object(i.O)(c.shape);p=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));p.push(n),u+=t}}else{const i=o.a[l],s=e.slice(u,u+h*i);if("float32"===l)p=new Float32Array(s);else if("int32"===l)p=new Int32Array(s);else if("bool"===l)p=new Uint8Array(s);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{p=new Float32Array(s);const e=new Float32Array(p.length/2),i=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],i[t]=p[2*t+1];const o=Object(a.a)(e,d,"float32"),u=Object(a.a)(i,d,"float32");n[t]=Object(r.a)(o,u),o.dispose(),u.dispose()}}u+=h*i}"complex64"!==l&&(n[t]=Object(a.a)(p,d,l))}return n}function c(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const l="undefined"!=typeof e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function h(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function p(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function g(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function k(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function y(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),i=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],s=e[n[o>>10]+(1023&o)]+t[o>>10];i[a]=s}return new Float32Array(a)}}}).call(this,n(95).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var r=n(0),a=n(7),i=n(41);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:s}=n;Object(a.a)(o,"transpose");const u=o.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=o.shape[s[e]];const l=r.data.get(o.dataId).values,d=Object(i.a)(l,o.shape,o.dtype,s,c);return{dataId:r.write(d,c,o.dtype),shape:c,dtype:o.dtype}}const s={kernelName:r.Transpose,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,s=n.makeTensorInfo(r.shape,"complex64");return n.data.get(s.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(a.shape,"float32",o)},s}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Complex,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Identity,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(3),a=n(15),i=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,o){if(null==o&&(o=Object(a.r)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],i=e!==n.length-1||r!==Object(a.O)(t.slice(e));Object(a.b)(n[e]===t[e]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?Object(i.toTypedArray)(e,o):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,o)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a)=>{const i=r.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],a);return i}}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,a,i){const o=r.slice_util.isSliceContinous(a,t,n),s=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(o){const n=r.slice_util.computeFlatOffset(t,u);return"string"===i?e.slice(n,n+s):e.subarray(n,n+s)}const c="string"===i?r.backend_util.fromUint8ToStringArray(e):e,l=Object(r.buffer)(a,i,c),d=Object(r.buffer)(n,i);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(l.get(...r),...n)}return"string"===i?r.backend_util.fromStringArrayToUint8(d.values):d.values}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{begin:u,size:c}=o;Object(a.a)(s,"slice");const[l,d]=r.slice_util.parseSliceParams(s,u,c);r.slice_util.assertParamsValid(s,l,d);const h=i(n.data.get(s.dataId).values,l,d,s.shape,s.dtype);return n.makeTensorInfo(d,s.dtype,h)}const s={kernelName:r.Slice,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(3),a=n(4),i=n(1),o=n(15),s=n(2);const u=Object(s.b)({complex_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(i.a)(e,"real","complex"),s=Object(i.a)(t,"imag","complex");o.e(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const u={real:n,imag:s};return r.a.runKernel(a.A,u)}})},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Real,backendName:"cpu",kernelFunc:r}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e+t)),s=Object(i.b)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=Object(i.a)(r.Add,o,s),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e*t)),s=Object(i.b)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=Object(i.a)(r.Multiply,o,s),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l}));var r=n(0),a=n(12),i=n(85),o=n(18),s=n(19),u=n(24);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:h}=l;if("complex64"===h){if("complex64"===d.dtype)return Object(s.a)({inputs:{x:d},backend:n});const e=Object(i.a)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=Object(o.a)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=Object(u.a)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,h)){const e=Object(s.a)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}if("int32"===h){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===h){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[i,o]=Object(a.a)(((e,t)=>e!==t?1:0))(d.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",i)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${h}`)}const l={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return i}));var r=n(9);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.warn(...e)}function i(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.log(...e)}},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"b",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"h",(function(){return p})),n.d(t,"g",(function(){return f})),n.d(t,"a",(function(){return m}));var r=n(9),a=n(35),i=n(29);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)("kernelRegistry",(()=>new Map)),s=Object(a.a)("gradRegistry",(()=>new Map));function u(e,t){const n=b(e,t);return o.get(n)}function c(e){return s.get(e)}function l(e){const t=o.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[i,o]=a,[s]=i.split("_");s===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=b(t,n);o.has(r)&&i.b(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function h(e){const{kernelName:t}=e;s.has(t)&&Object(r.c)().getBool("DEBUG")&&i.b(`Overriding the gradient for '${t}'`),s.set(t,e)}function p(e,t){const n=b(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function f(e){if(!s.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);s.delete(e)}function m(e,t){l(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function b(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(1),a=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n){const i=Object(r.c)(e,n);return Object(a.a)(e,t,i,n)}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,i,o,s;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(i||(i={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(s||(s={}));const u={float32:o,int32:a,bool:i,complex64:s};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,i){const o=r.util.sizeFromShape(a),s=r.util.makeZerosTypedArray(i,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(s[r]+=o>0?t[n]:1)}return s}function i(e,t,n,a=!1){const i=e.shape[0],o=e.shape[1],s=Object(r.buffer)([i,n],t.dtype);for(let r=0;r<i;r++)for(let i=0;i<o;i++){const o=e.get(r,i);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?s.set(1,r,o):t.size>0?s.set(s.get(r,o)+t.get(r,i),r,o):s.set(s.get(r,o)+1,r,o))}return s}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e-t)),s=Object(i.b)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=Object(i.a)(r.Sub,o,s),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";(function(e,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function i(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof e)t=e;else if("undefined"!=typeof r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function o(e,t){const n=function(){const e=i();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}))}).call(this,n(46),n(50))},function(e,t,n){"use strict";n.d(t,"e",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"a",(function(){return d})),n.d(t,"c",(function(){return h})),n.d(t,"i",(function(){return p})),n.d(t,"h",(function(){return f})),n.d(t,"g",(function(){return m})),n.d(t,"j",(function(){return b})),n.d(t,"f",(function(){return g})),n.d(t,"d",(function(){return ye}));var r=n(44),a=n(86),i=n(11),o=n(0);class s{constructor(e){this.outputs_=[],this.builder_=e}get builder(){return this.builder_}get outputs(){return this.outputs_}compute(e){const t=new Map;for(const n of this.inputs())t.set(n,e.getTensor(n));const n=o.tidy((()=>this.computeImpl(t)));for(let t=0;t<this.outputs_.length;++t)e.setOutputTensor(this.outputs_[t],n[t]);for(const t of this.inputs())e.releaseTensor(t)}dispose(){}}class u extends s{constructor(e){super(e),e&&this.createOutput()}createOutput(){this.outputs_.push(new i.e(this))}get output(){return this.outputs_[0]}computeImpl(e){return[this.run(e)]}}var c,l,d,h,p,f,m,b,g,k=n(5);class y extends u{constructor(e,t,n,r={}){if(super(e.builder),k.j(e),this.input_=e,k.j(t),this.mean_=t,k.j(n),this.variance_=n,k.l(r.scale),this.scale_=r.scale,k.l(r.bias),this.bias_=r.bias,void 0!==r.axis){const e=r.axis;k.a(k.f(e),"The axis parameter is invalid."),this.axis_=e}else this.axis_=1;if(void 0!==r.epsilon){const e=r.epsilon;k.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;this.activation_=r.activation}inputs(){const e=[this.input_,this.mean_,this.variance_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}run(e){const t=e.get(this.input_);k.a(this.axis_<t.rank&&this.axis_>=-t.rank,"The axis parameter is invalid.");const n=this.axis_>=0?this.axis_:t.rank+this.axis_,r=e.get(this.mean_);k.a(1===r.rank,"The mean operand is not 1-D.");const a=e.get(this.variance_);let i,s;k.a(1===a.rank,"The mean operand is not 1-D."),this.scale_&&(i=e.get(this.scale_),k.a(1===i.rank,"The scale operand is not 1-D.")),this.bias_&&(s=e.get(this.bias_),k.a(1===s.rank,"The bias operand is not 1-D."));const u=Array.from(Array(t.rank).keys());return u[n]=t.rank-1,u[t.rank-1]=n,o.transpose(o.batchNorm(o.transpose(t,u),r,a,s,i,this.epsilon_),u)}}class v extends u{constructor(e,t){super(e.builder),k.j(e),this.a_=e,k.j(t),this.b_=t}inputs(){return[this.a_,this.b_]}run(e){const t=e.get(this.a_),n=e.get(this.b_);return this.runOp(t,n)}}class w extends v{runOp(e,t){return o.add(e,t)}}class I extends v{runOp(e,t){return o.sub(e,t)}}class x extends v{runOp(e,t){return o.mul(e,t)}}class S extends v{runOp(e,t){return o.div(e,t)}}class O extends v{runOp(e,t){return o.maximum(e,t)}}class _ extends v{runOp(e,t){return o.minimum(e,t)}}class T extends v{runOp(e,t){return o.pow(e,t)}}class A extends v{runOp(e,t){if(1===e.rank)return 1===t.rank?o.dot(e,t):o.matMul(o.reshape(e,[1,-1]),t);if(1===t.rank)return o.matMul(e,o.reshape(t,[-1,1]));{const n=e.rank>t.rank?e.rank:t.rank;let r=o.matMul(e,t);return r.rank!==n&&(r=o.reshape(r,[1].concat(r.shape))),r}}}class N extends u{constructor(e){void 0!==e?(super(e.builder),k.j(e),this.x_=e):(super(void 0),this.x_=void 0)}inputs(){return[this.x_]}run(e){const t=e.get(this.x_);return this.runOp(t)}}class C extends N{runOp(e){return o.abs(e)}}class E extends N{runOp(e){return o.ceil(e)}}class j extends N{runOp(e){return o.cos(e)}}class $ extends N{runOp(e){return o.exp(e)}}class M extends N{runOp(e){return o.floor(e)}}class z extends N{runOp(e){return o.log(e)}}class R extends N{runOp(e){return o.neg(e)}}class F extends N{runOp(e){return o.sin(e)}}class B extends N{runOp(e){return o.tan(e)}}class P extends N{apply(e){return this.builder_=e.builder,k.j(e),this.x_=e,this.createOutput(),this.output}}class D extends P{runOp(e){return o.sigmoid(e)}}class G extends P{runOp(e){return o.tanh(e)}}class L extends P{runOp(e){return o.relu(e)}}class W extends P{runOp(e){return o.div(o.mul(e,o.maximum(0,o.minimum(6,o.add(e,3)))),6)}}class U extends P{constructor(e,t={}){if(void 0!==e?(super(e),k.j(e),this.x_=e):(super(void 0),this.x_=void 0),void 0!==t.minValue){const e=t.minValue;k.a("number"==typeof e,"The minValue parameter is invalid"),this.minValue_=e}if(void 0!==t.maxValue){const e=t.maxValue;k.a("number"==typeof e,"The maxValue parameter is invalid"),this.maxValue_=e}}get minValue(){return void 0!==this.minValue_?this.minValue_:-1/0}get maxValue(){return void 0!==this.maxValue_?this.maxValue_:1/0}runOp(e){return void 0!==this.minValue_&&void 0!==this.maxValue_?o.clipByValue(e,this.minValue_,this.maxValue_):void 0!==this.minValue_&&void 0===this.maxValue_?o.maximum(e,this.minValue_):void 0===this.minValue_&&void 0!==this.maxValue_?o.minimum(e,this.maxValue_):o.clone(e)}}class V extends u{constructor(e,t){k.a(e.every((e=>e instanceof i.c)),"The parameter is not an operand."),super(e[0].builder),this.inputs_=e,k.a(k.f(t),"The axis parameter is invalid."),this.axis_=t}inputs(){return this.inputs_}run(e){const t=[];for(const n of this.inputs())t.push(e.get(n));return o.concat(t,this.axis_)}}class H extends P{constructor(e,t=.01){super(e),k.a("number"==typeof t,"The alpha parameter is invalid."),this.alpha_=t}get alpha(){return this.alpha_}runOp(e){return o.leakyRelu(e,this.alpha_)}}class q extends u{constructor(e,t,n={}){super(e.builder),k.j(e),this.input_=e,k.j(t),this.filter_=t,this.initOptions(n.padding,n.strides,n.dilations,n.groups,n.inputLayout,n.filterLayout,n.autoPad,n.bias,n.activation)}initOptions(e=[0,0,0,0],t=[1,1],n=[1,1],r=1,a=c.nchw,i=l.oihw,o=d.explicit,s,u){k.a(k.g(e)&&4===e.length,"The padding parameter is invalid."),this.padding_=e,k.a(k.g(t)&&2===t.length,"The strides parameter is invalid."),this.strides_=t,k.a(k.g(n)&&2===n.length,"The dilations parameter is invalid."),this.dilations_=n,k.a(k.f(r),"The gourps parameter is invalid."),this.groups_=r,k.a(a in c,"The input layout parameter is invalid."),this.inputLayout_=a,k.a(i in l,"The filter layout parameter is invalid."),this.filterLayout_=i,k.a(o in d,"The autoPad parameter is invalid."),this.autoPad_=o,this.bias_=s,this.bias_&&k.j(this.bias_),u instanceof L?(this.fusedActivation_="relu",this.activation_=void 0):this.isRelu6(u)?(this.fusedActivation_="relu6",this.activation_=void 0):u instanceof H?(this.fusedActivation_="leakyrelu",this.leakyreluAlpha_=u.alpha,this.activation_=void 0):u instanceof D?(this.fusedActivation_="sigmoid",this.activation_=void 0):(this.fusedActivation_=void 0,this.activation_=u)}isRelu6(e){if(e instanceof U){const t=e;if(Math.abs(t.minValue-0)<1e-5&&Math.abs(t.maxValue-6)<1e-5)return!0}return!1}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}inputs(){const e=[this.input_,this.filter_];return this.bias_&&e.push(this.bias_),e}run(e){let t,n,r=e.get(this.input_),a=!1;this.bias_&&(n=e.get(this.bias_)),this.inputLayout_===c.nchw&&(r=o.transpose(r,[0,2,3,1]));const s=r.shape[3];void 0===this.filterTensor_?(t=e.get(this.filter_),this.filterLayout_===l.oihw?t=o.transpose(t,[2,3,1,0]):this.filterLayout_===l.ohwi?t=o.transpose(t,[1,2,3,0]):this.filterLayout_===l.ihwo&&(t=o.transpose(t,[1,2,0,3])),1!==this.groups_&&(t=o.transpose(t,[0,1,3,2])),this.filter_ instanceof i.a&&(this.filterTensor_=t,o.keep(this.filterTensor_))):t=this.filterTensor_;const u=k.d(r,t,this.padding_,this.strides_,[0,0],this.dilations_,this.autoPad_);let d;if(1===this.groups_)d=o.fused.conv2d({x:r,filter:t,strides:this.strides_,pad:u,dataFormat:"NHWC",dilations:this.dilations_,bias:n,activation:this.fusedActivation_,leakyreluAlpha:this.leakyreluAlpha_}),a=!0;else{if(this.groups_!==s||this.groups_!==t.shape[2])throw new Error(`The tf.js convolution doesn't support groups parameter ${this.groups_}`);if(u instanceof Array&&u[1][0]===u[1][1]&&u[1][0]===u[2][0]&&u[1][0]===u[2][1]){const e=u[1][0];d=o.fused.depthwiseConv2d({x:r,filter:t,strides:this.strides_,pad:e,dataFormat:"NHWC",dilations:this.dilations_,bias:n,activation:this.fusedActivation_,leakyreluAlpha:this.leakyreluAlpha_}),a=!0}else d=o.depthwiseConv2d(r,t,this.strides_,u,"NHWC",this.dilations_)}return a||(n&&(d=o.add(d,n)),"relu"===this.fusedActivation_?d=o.relu(d):"relu6"===this.fusedActivation_?d=o.clipByValue(d,0,6):"leakyrelu"===this.fusedActivation_?d=o.leakyRelu(d,this.leakyreluAlpha_):"sigmoid"===this.fusedActivation_?d=o.sigmoid(d):void 0!==this.fusedActivation_&&k.a(!1,`The ${this.fusedActivation_} is un supported.`)),this.inputLayout_===c.nchw&&(d=o.transpose(d,[0,3,1,2])),d}dispose(){this.filterTensor_&&o.dispose(this.filterTensor_)}}class K extends u{constructor(e,t,n={}){super(e.builder),k.j(e),this.input_=e,k.j(t),this.filter_=t,this.initOptions(n.padding,n.strides,n.dilations,n.groups,n.inputLayout,n.filterLayout,n.autoPad,n.outputPadding,n.outputSizes,n.bias,n.activation)}initOptions(e=[0,0,0,0],t=[1,1],n=[1,1],r=1,a=c.nchw,i=h.iohw,o=d.explicit,s=[0,0],u,l,p){k.a(k.g(e)&&4===e.length,"The padding parameter is invalid."),this.padding_=e,k.a(k.g(t)&&2===t.length,"The strides parameter is invalid."),this.strides_=t,k.a(k.g(n)&&2===n.length,"The dilations parameter is invalid."),this.dilations_=n,k.a(this.dilations_.every((e=>1===e)),"The tf.conv2dTranspose does not support dilations parameter."),k.a(k.f(r),"The gourps parameter is invalid."),this.groups_=r,k.a(1===this.groups_,"The tf.conv2dTranspose does not support groups parameter."),k.a(a in c,"The input layout parameter is invalid."),this.inputLayout_=a,k.a(i in h,"The filter layout parameter is invalid."),this.filterLayout_=i,k.a(o in d,"The autoPad parameter is invalid."),this.autoPad_=o,k.a(void 0===u||k.g(u)&&2===u.length,"The outputSizes parameter is invalid."),this.outputSizes_=u,void 0===u?(k.a(k.g(s)&&2===s.length,"The outputPadding parameter is invalid."),this.outputPadding_=s):this.outputPadding_=[0,0],this.bias_=l,this.bias_&&k.j(this.bias_),p instanceof L?(this.fusedActivation_="relu",this.activation_=void 0):this.isRelu6(p)?(this.fusedActivation_="relu6",this.activation_=void 0):p instanceof H?(this.fusedActivation_="leakyrelu",this.leakyreluAlpha_=p.alpha,this.activation_=void 0):p instanceof D?(this.fusedActivation_="sigmoid",this.activation_=void 0):(this.fusedActivation_=void 0,this.activation_=p)}isRelu6(e){if(e instanceof U){const t=e;if(Math.abs(t.minValue-0)<1e-5&&Math.abs(t.maxValue-6)<1e-5)return!0}return!1}getFusedOutputs(){return this.activation_?[this.activation_.apply(this.output)]:[this.output]}inputs(){const e=[this.input_,this.filter_];return this.bias_&&e.push(this.bias_),e}run(e){let t,n,r=e.get(this.input_);this.bias_&&(n=e.get(this.bias_)),this.inputLayout_===c.nchw&&(r=o.transpose(r,[0,2,3,1])),void 0===this.filterTensor_?(t=e.get(this.filter_),this.filterLayout_===h.iohw?t=o.transpose(t,[2,3,1,0]):this.filterLayout_===h.ohwi&&(t=o.transpose(t,[1,2,0,3])),1!==this.groups_&&(t=o.transpose(t,[0,1,2,3])),this.filter_ instanceof i.a&&(this.filterTensor_=t,o.keep(this.filterTensor_))):t=this.filterTensor_;const a=k.d(r,t,this.padding_,this.strides_,this.outputPadding_,this.dilations_,this.autoPad_);let s;const u=[r.shape[0],0,0,t.shape[2]];if(void 0!==this.outputSizes_)u[1]=this.outputSizes_[0],u[2]=this.outputSizes_[1];else for(let e=0;e<2;++e)u[e+1]=(r.shape[e+1]-1)*this.strides_[e]+t.shape[e]+(t.shape[e]-1)*(this.dilations_[e]-1)-a[e+1][0]-a[e+1][1]+this.outputPadding_[e];return s=o.conv2dTranspose(r,t,u,this.strides_,a),n&&(s=o.add(s,n)),"relu"===this.fusedActivation_?s=o.relu(s):"relu6"===this.fusedActivation_?s=o.clipByValue(s,0,6):"leakyrelu"===this.fusedActivation_?s=o.leakyRelu(s,this.leakyreluAlpha_):"sigmoid"===this.fusedActivation_?s=o.sigmoid(s):void 0!==this.fusedActivation_&&k.a(!1,`The ${this.fusedActivation_} is un supported.`),this.inputLayout_===c.nchw&&(s=o.transpose(s,[0,3,1,2])),s}dispose(){this.filterTensor_&&o.dispose(this.filterTensor_)}}class Y extends s{constructor(e,t,n,r,a,o={}){super(e.builder),k.j(e),this.input_=e,k.j(t),this.weight_=t,k.j(n),this.recurrentWeight_=n,k.a(k.f(r)&&r>0,"The steps parameter is invalid."),this.steps_=r,k.a(k.f(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(o.bias,o.recurrentBias,o.initialHiddenState,o.resetAfter,o.returnSequence,o.direction,o.layout,o.activations),this.outputs.push(new i.e(this)),this.returnSequence_&&this.outputs_.push(new i.e(this))}initOptions(e,t,n,r=!0,a=!1,i=f.forward,o=p.zrn,s=[this.builder.sigmoid(),this.builder.tanh()]){k.l(e),this.bias_=e,k.l(t),this.recurrentBias_=t,k.l(n),this.initialHiddenState_=n,k.a(k.e(r),"The resetAfter parameter is not a boolean."),this.resetAfter_=r,k.a(k.e(a),"The resetAfter parameter is not a boolean."),this.returnSequence_=a,k.a(i in f,"The direction parameter is invalid."),this.direction_=i,k.a(o in p,"The layout parameter is invalid."),this.layout_=o,k.a(s instanceof Array&&2===s.length&&s.every((e=>e instanceof P)),"The activations parameter is invalid."),this.activations_=s}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),this.initialHiddenState_&&e.push(this.initialHiddenState_),e}computeImpl(e){const t=e.get(this.input_),n=e.get(this.weight_),r=e.get(this.recurrentWeight_),a=this.bias_?e.get(this.bias_):void 0,i=this.recurrentWeight_?e.get(this.recurrentBias_):void 0,s=this.initialHiddenState_?e.get(this.initialHiddenState_):void 0,u=this.steps_,c=this.hiddenSize_,l=this.resetAfter_,d=this.returnSequence_,h=this.layout_,p=this.activations_,m=this.direction_,b=m===f.both?2:1;let g,k=s;void 0===k&&(k=o.zeros([b,1,c]));const y=[],v=[],w=[],I=[];for(let e=0;e<b;++e)y.push(o.squeeze(o.slice(n,[e,0,0],[1,-1,-1]),[0])),v.push(o.squeeze(o.slice(r,[e,0,0],[1,-1,-1]),[0])),w.push(a?o.squeeze(o.slice(a,[e,0],[1,-1]),[0]):void 0),I.push(i?o.squeeze(o.slice(i,[e,0],[1,-1]),[0]):void 0);for(let e=0;e<u;++e){const n=[];let r;for(let e=0;e<b;++e)n.push(o.squeeze(o.slice(k,[e,0,0],[1,-1,-1]),[0]));for(let a=0;a<b;++a){const i=1===a||m===f.backward?u-e-1:e,s=o.squeeze(o.slice(t,[i,0,0],[1,-1,-1]),[0]),d=o.reshape(X.compute(s,y[a],v[a],n[a],c,p,w[a],I[a],l,h),[1,-1,c]);r=r?o.concat([r,d],0):d}k=r,d&&(r=o.reshape(r,[1,b,-1,c]),g=g?o.concat([g,r],0):r)}return[k,g]}}class X extends u{constructor(e,t,n,r,a,i={}){super(e.builder),k.j(e),this.input_=e,k.j(t),this.weight_=t,k.j(n),this.recurrentWeight_=n,k.j(r),this.hiddenState_=r,k.a(k.f(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(i.bias,i.recurrentBias,i.resetAfter,i.layout,i.activations)}initOptions(e,t,n=!0,r=p.zrn,a=[this.builder.sigmoid(),this.builder.tanh()]){k.l(e),this.bias_=e,k.l(t),this.recurrentBias_=t,k.a(k.e(n),"The resetAfter parameter is not a boolean."),this.resetAfter_=n,k.a(r in p,"The layout parameter is invalid."),this.layout_=r,k.a(a instanceof Array&&2===a.length&&a.every((e=>e instanceof P)),"The activations parameter is invalid."),this.activations_=a}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_,this.hiddenState_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),e}static compute(e,t,n,r,a,i,s,u,c=!0,l=p.zrn){const d=o.scalar(1),h=o.scalar(0),f=l===p.zrn?{z:0,r:a,n:2*a}:{r:0,z:a,n:2*a},m=i[0],b=i[1],g=m.runOp(o.add(o.add(s?o.slice(s,[f.z],[a]):h,u?o.slice(u,[f.z],[a]):h),o.add(o.matMul(e,o.transpose(o.slice(t,[f.z,0],[a,-1]))),o.matMul(r,o.transpose(o.slice(n,[f.z,0],[a,-1])))))),k=m.runOp(o.add(o.add(s?o.slice(s,[f.r],[a]):h,u?o.slice(u,[f.r],[a]):h),o.add(o.matMul(e,o.transpose(o.slice(t,[f.r,0],[a,-1]))),o.matMul(r,o.transpose(o.slice(n,[f.r,0],[a,-1]))))));let y;return y=c?b.runOp(o.add(s?o.slice(s,[f.n],[a]):h,o.add(o.matMul(e,o.transpose(o.slice(t,[f.n,0],[a,-1]))),o.mul(k,o.add(u?o.slice(u,[f.n],[a]):h,o.matMul(r,o.transpose(o.slice(n,[f.n,0],[a,-1])))))))):b.runOp(o.add(o.add(s?o.slice(s,[f.n],[a]):h,u?o.slice(u,[f.n],[a]):h),o.add(o.matMul(e,o.transpose(o.slice(t,[f.n,0],[a,-1]))),o.matMul(o.mul(k,r),o.transpose(o.slice(n,[f.n,0],[a,-1])))))),o.add(o.mul(g,r),o.mul(y,o.sub(d,g)))}run(e){return X.compute(e.get(this.input_),e.get(this.weight_),e.get(this.recurrentWeight_),e.get(this.hiddenState_),this.hiddenSize_,this.activations_,this.bias_?e.get(this.bias_):void 0,this.recurrentBias_?e.get(this.recurrentBias_):void 0,this.resetAfter_,this.layout_)}}class Z extends u{constructor(e,t={}){if(super(e.builder),k.j(e),this.input_=e,k.l(t.scale),this.scale_=t.scale,k.l(t.bias),this.bias_=t.bias,void 0!==t.epsilon){const e=t.epsilon;k.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;void 0!==t.layout?(k.a(t.layout in c,"The layout parameter is invalid."),this.layout_=t.layout):this.layout_=c.nchw}inputs(){const e=[this.input_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}run(e){const t=e.get(this.input_);k.a(4===t.rank,"The input operand is not 4-D.");let n,r,a=[2,3],i=[1,-1,1,1],s=t.shape[1];this.layout_===c.nhwc&&(a=[1,2],i=[1,1,1,-1],s=t.shape[3]),this.scale_&&(n=e.get(this.scale_),k.a(1===n.rank,"The scale operand is not 1-D."),k.a(n.shape[0]===s,"The length of scale is not equal to the size of the feature dimension of the input.")),this.bias_&&(r=e.get(this.bias_),k.a(1===r.rank,"The bias operand is not 1-D."),k.a(r.shape[0]===s,"The length of bias is not equal to the size of the feature dimension of the input."));const u=o.mean(t,a,!0),l=o.mean(o.pow(o.sub(t,u),2),a,!0),d=o.div(o.sub(t,u),o.sqrt(o.add(l,this.epsilon_))),h=n?o.mul(o.reshape(n,i),d):d;return r?o.add(o.reshape(r,i),h):h}}class Q extends u{constructor(e,t,n={}){super(e.builder),this.mode_=m.constant,this.value_=0,k.j(e),this.input_=e,k.j(t),this.padding_=t,void 0!==n.mode&&(k.a(n.mode in m,"The mode parameter is invalid."),this.mode_=n.mode),void 0!==n.value&&(this.value_=n.value)}inputs(){return[this.input_,this.padding_]}run(e){const t=e.get(this.input_),n=e.get(this.padding_);k.a(2===n.rank&&"int32"===n.dtype&&n.shape[0]===t.rank,"The padding operand is invalid.");const r=n.arraySync();if(this.mode_===m.constant)return o.pad(t,r,this.value_);if(this.mode_===m.edge){const e=new Array(r.length);let n=t;for(;;){for(let t=0;t<r.length;++t){e[t]=[0,0];for(let n=0;n<2;++n)r[t][n]>0?(e[t][n]=1,r[t][n]-=1):e[t][n]=0}if(e.every((e=>0===e[0]&&0===e[1])))break;n=o.mirrorPad(n,e,"symmetric")}return n}{let e;return this.mode_===m.reflection?e="reflect":this.mode_===m.symmetric&&(e="symmetric"),o.mirrorPad(t,r,e)}}}class J extends u{constructor(e,t={}){super(e.builder),k.j(e),this.input_=e,this.initOptions(t.windowDimensions,t.padding,t.strides,t.dilations,t.layout,t.autoPad,t.roundingType,t.outputSizes)}initOptions(e=[-1,-1],t=[0,0,0,0],n=[1,1],r=[1,1],a=c.nchw,i=d.explicit,o=b.floor,s){k.a(k.g(e)&&2===e.length,"The padding parameter is invalid."),this.windowDimensions_=e,k.a(k.g(t)&&4===t.length,"The padding parameter is invalid."),this.padding_=t,k.a(k.g(n)&&2===n.length,"The strides parameter is invalid."),this.strides_=n,k.a(k.g(r)&&2===r.length,"The dilations parameter is invalid."),this.dilations_=r,k.a(a in c,"The layout parameter is invalid."),this.layout_=a,k.a(i in d,"The autoPad parameter is invalid."),this.autoPad_=i,k.a(o in b,"The roundingType parameter is invalid."),this.roundingType_=o,s&&k.a(k.g(s)&&2===s.length,"The outputSizes parameter is invalid."),this.outputSizes_=s}inputs(){return[this.input_]}calculateOutputSizes(e,t){const n=e[1],r=e[2],a=this.windowDimensions_[0],i=this.windowDimensions_[1];let o,s=this.padding_[0],u=this.padding_[1],c=this.padding_[2],l=this.padding_[3];if(this.autoPad_!==d.explicit&&([s,u]=k.c(this.autoPad_,this.dilations_[0],n,a,this.strides_[0],s,u),[c,l]=k.c(this.autoPad_,this.dilations_[1],r,i,this.strides_[1],c,l)),void 0===t)o=Math.trunc;else switch(t){case"ceil":o=Math.ceil;break;case"floor":o=Math.floor;break;case"round":o=Math.round}const h=a+(a-1)*(this.dilations_[0]-1),p=i+(i-1)*(this.dilations_[1]-1);return[1+o((n-h+s+u)/this.strides_[0]),1+o((r-p+c+l)/this.strides_[1])]}run(e){let t=e.get(this.input_);this.layout_===c.nchw&&(t=o.transpose(t,[0,2,3,1]));const n=this.windowDimensions_;let r,a,i;if(-1===n[0]&&-1===n[1]&&(n[0]=t.shape[1],n[1]=t.shape[2]),void 0!==this.outputSizes_){let e=!1;for(const n of[void 0,"ceil","floor","round"]){const[r,a]=this.calculateOutputSizes(t.shape,n);if(this.outputSizes_[0]===r&&this.outputSizes_[1]===a){i=n,e=!0;break}}k.a(e,`The outputSizes [${this.outputSizes_}] is invalid.`),r=this.outputSizes_[0],a=this.outputSizes_[1]}else i=this.roundingType_===b.floor?"floor":"ceil",[r,a]=this.calculateOutputSizes(t.shape,i);this.layout_===c.nchw?this.outputShape_=[t.shape[0],t.shape[3],r,a]:this.outputShape_=[t.shape[0],r,a,t.shape[3]];const s=this.getPoolingType();let u,l;if(this.autoPad_===d.explicit)this.padding_.every((e=>0===e))?(u="valid",i=void 0):u=[[0,0],[this.padding_[0],this.padding_[1]],[this.padding_[2],this.padding_[3]],[0,0]];else if(this.autoPad_===d["same-upper"])u="same",i=void 0;else{u=[[0,0],[0,0],[0,0],[0,0]];const e=[0,0];for(let n=0;n<2;++n)e[n]=Math.ceil(t.shape[1+n]/this.strides_[n]);const r=[0,0];for(let a=0;a<2;++a)r[a]=this.strides_[a]*(e[a]-1)+((n[a]-1)*this.dilations_[a]+1)-t.shape[1+a];for(let e=0;e<2;++e)u[e+1][0]=r[e]-Math.floor(r[e]/2),u[e+1][1]=Math.floor(r[e]/2)}return"l2"===s?(t=o.pow(t,2),l=o.sqrt(o.pool(t,this.windowDimensions_,"avg",u,this.dilations_,this.strides_,i))):l=o.pool(t,this.windowDimensions_,s,u,this.dilations_,this.strides_,i),this.layout_===c.nchw&&(l=o.transpose(l,[0,3,1,2])),k.b(l.shape,this.outputShape_),l}}class ee extends J{getPoolingType(){return"avg"}}class te extends J{getPoolingType(){return"max"}}class ne extends J{getPoolingType(){return"l2"}}class re extends u{constructor(e,t={}){super(e.builder),k.j(e),this.input_=e,void 0!==t.axes?(k.a(k.g(t.axes),"The axes parameter is invalid."),this.axes_=t.axes):this.axes_=void 0,void 0!==t.keepDimensions?(k.a(k.e(t.keepDimensions),"The keepDimensions parameter is not a boolean."),this.keepDimensions_=t.keepDimensions):this.keepDimensions_=!1}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return k.a(k.i(this.axes_,t.rank),`The axes must be in range [-${t.rank}, ${t.rank})`),this.runOp(t,this.axes_,this.keepDimensions_)}}class ae extends re{runOp(e,t,n){return o.logSumExp(e,t,n)}}class ie extends re{runOp(e,t,n){return o.max(e,t,n)}}class oe extends re{runOp(e,t,n){return o.mean(e,t,n)}}class se extends re{runOp(e,t,n){return o.min(e,t,n)}}class ue extends re{runOp(e,t,n){return o.prod(e,t,n)}}class ce extends re{runOp(e,t,n){return o.sum(e,t,n)}}class le extends re{runOp(e,t,n){return o.sum(o.abs(e),t,n)}}class de extends re{runOp(e,t,n){return o.sqrt(o.sum(o.pow(e,2),t,n))}}class he extends u{constructor(e,t={}){if(super(e.builder),this.mode_=g["nearest-neighbor"],this.scales_=[1,1],this.axes_=[2,3],k.j(e),this.input_=e,void 0!==t.scales){const e=t.scales;k.a(e instanceof Array&&e.every((e=>"number"==typeof e))&&2===e.length,"The scales parameter is invalid."),this.scales_=t.scales}void 0!==t.sizes&&(k.a(k.g(t.sizes)&&2===t.sizes.length,"The sizes parameter is invalid."),this.sizes_=t.sizes),void 0!==t.axes&&(k.a(k.g(t.axes)&&2===t.axes.length&&k.h(t.axes),"The axes parameter is invalid."),this.axes_=t.axes),k.a(void 0!==this.scales_||void 0!==this.sizes_,"The scales or sizes parameter is not provied."),void 0!==t.mode&&(k.a(t.mode in g,"The mode parameter is invalid."),this.mode_=t.mode)}inputs(){return[this.input_]}run(e){let t=e.get(this.input_);k.a(4===t.rank,"The input tensor is not 4-D.");const n=[0,0];let r;return void 0!==this.sizes_?(n[0]=this.sizes_[0],n[1]=this.sizes_[1]):void 0!==this.scales_&&(n[0]=Math.floor(t.shape[this.axes_[0]]*this.scales_[0]),n[1]=Math.floor(t.shape[this.axes_[1]]*this.scales_[1])),0===this.axes_[0]?t=o.transpose(t,[2,0,1,3]):2===this.axes_[0]&&(t=o.transpose(t,[0,2,3,1])),this.mode_===g["nearest-neighbor"]?r=o.image.resizeNearestNeighbor(t,n,!1,!0):this.mode_===g.linear&&(r=o.image.resizeBilinear(t,n,!1,!0)),0===this.axes_[0]?r=o.transpose(r,[1,2,0,3]):2===this.axes_[0]&&(r=o.transpose(r,[0,3,1,2])),r}}class pe extends u{constructor(e,t){super(e.builder),k.j(e),this.input_=e,k.a(k.g(t)&&0!==t.length,"The newShape parameter is invalid."),this.newShape_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return o.reshape(t,this.newShape_)}}class fe extends u{constructor(e,t,n,r){super(e.builder),k.j(e),this.input_=e,k.a(k.g(t),"The starts parameter is invalid."),this.starts_=t,k.a(k.g(n)&&n.every((e=>e>0||-1===e)),"The sizes parameter is invalid."),this.sizes_=n,k.a(n.length==n.length,"The length of sizes is not equal to the length of sizes.))"),k.a(void 0===r||k.g(r),"The axes parameter is invalid."),void 0!==r&&k.a(n.length===r.length,"The length of axes is invalid.))"),this.axes_=r}inputs(){return[this.input_]}run(e){const t=e.get(this.input_),n=t.shape.length;if(void 0===this.axes_){this.axes_=[];for(let e=0;e<n;++e)this.axes_.push(e)}k.a(this.axes_.every((e=>e<n&&e>=-n)),"The value of axes is invalid."),k.a(this.starts_.length===this.axes_.length,"The length of starts is invalid."),k.a(this.sizes_.length===this.axes_.length,"The length of sizes is invalid.");const r=new Array(this.axes_.length).fill(0),a=new Array(this.axes_.length).fill(-1);for(let e=0;e<this.axes_.length;++e){let i=this.axes_[e];i<0&&(i=n+i),r[i]=this.starts_[e]>=0?this.starts_[e]:this.starts_[e]+t.shape[i],a[i]=this.sizes_[e]}return o.slice(t,r,a)}}class me extends u{constructor(e){super(e.builder),k.j(e),this.x_=e}inputs(){return[this.x_]}run(e){const t=e.get(this.x_);if(2!==t.rank)throw new Error("The rank of x parameter should be 2.");return o.softmax(t)}}class be extends s{constructor(e,t,n={}){super(e.builder),k.j(e),this.input_=e,k.a(k.f(t)||k.g(t),"The splits parameter is invalid."),this.splits_=t,k.a(void 0===n.axis||k.f(n.axis),"The options.axis is invalid."),this.axis_=n.axis;const r=k.f(t)?t:t.length;for(let e=0;e<r;++e)this.outputs.push(new i.e(this))}inputs(){return[this.input_]}computeImpl(e){const t=e.get(this.input_);return o.split(t,this.splits_,this.axis_)}}class ge extends u{constructor(e,t){super(e.builder),k.j(e),this.input_=e,void 0!==t&&k.a(k.g(t)&&0!==t.length,"The axes parameter is invalid."),this.axes_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return o.squeeze(t,this.axes_)}}class ke extends u{constructor(e,t){super(e.builder),k.j(e),this.input_=e,void 0!==t&&k.a(k.g(t)&&0!==t.length,"The permutation parameter is invalid."),this.permutation_=t}inputs(){return[this.input_]}run(e){const t=e.get(this.input_);return o.transpose(t,this.permutation_)}}!function(e){e.nchw="nchw",e.nhwc="nhwc"}(c||(c={})),function(e){e.oihw="oihw",e.hwio="hwio",e.ohwi="ohwi",e.ihwo="ihwo"}(l||(l={})),function(e){e.explicit="explicit",e["same-upper"]="same-upper",e["same-lower"]="same-lower"}(d||(d={})),function(e){e.iohw="iohw",e.hwoi="hwoi",e.ohwi="ohwi"}(h||(h={})),function(e){e.zrn="zrn",e.rzn="rzn"}(p||(p={})),function(e){e.forward="forward",e.backward="backward",e.both="both"}(f||(f={})),function(e){e.constant="constant",e.edge="edge",e.reflection="reflection",e.symmetric="symmetric"}(m||(m={})),function(e){e.floor="floor",e.ceil="ceil"}(b||(b={})),function(e){e["nearest-neighbor"]="nearest-neighbor",e.linear="linear"}(g||(g={}));class ye{constructor(e){k.a(e instanceof r.a,"The context paramter is invalid."),this.context_=e}get context(){return this.context_}build(e){return a.a.buildAndCompile(e)}input(e,t){return new i.b(e,t,this)}constant(e,t){return new i.a(e,t.resource,this)}batchNormalization(e,t,n,r={}){return this.validateOperandBuilder([e,t,n,r.scale,r.bias]),new y(e,t,n,r).getFusedOutputs()[0]}clamp(e={},t={}){if(e instanceof i.c){const n=e;return this.validateOperandBuilder([n]),new U(n,t).output}return new U(void 0,e)}concat(e,t){return this.validateOperandBuilder(e),new V(e,t).output}conv2d(e,t,n={}){const r=[e,t];return n.bias&&r.push(n.bias),this.validateOperandBuilder(r),new q(e,t,n).getFusedOutputs()[0]}convTranspose2d(e,t,n={}){const r=[e,t];return n.bias&&r.push(n.bias),this.validateOperandBuilder(r),new K(e,t,n).getFusedOutputs()[0]}add(e,t){return this.validateOperandBuilder([e,t]),new w(e,t).output}sub(e,t){return this.validateOperandBuilder([e,t]),new I(e,t).output}mul(e,t){return this.validateOperandBuilder([e,t]),new x(e,t).output}div(e,t){return this.validateOperandBuilder([e,t]),new S(e,t).output}max(e,t){return this.validateOperandBuilder([e,t]),new O(e,t).output}min(e,t){return this.validateOperandBuilder([e,t]),new _(e,t).output}pow(e,t){return this.validateOperandBuilder([e,t]),new T(e,t).output}abs(e){return this.validateOperandBuilder([e]),new C(e).output}ceil(e){return this.validateOperandBuilder([e]),new E(e).output}cos(e){return this.validateOperandBuilder([e]),new j(e).output}exp(e){return this.validateOperandBuilder([e]),new $(e).output}floor(e){return this.validateOperandBuilder([e]),new M(e).output}log(e){return this.validateOperandBuilder([e]),new z(e).output}neg(e){return this.validateOperandBuilder([e]),new R(e).output}sin(e){return this.validateOperandBuilder([e]),new F(e).output}tan(e){return this.validateOperandBuilder([e]),new B(e).output}hardSwish(e){return void 0===e?new W(void 0):(this.validateOperandBuilder([e]),new W(e).output)}relu(e){return void 0===e?new L(void 0):(this.validateOperandBuilder([e]),new L(e).output)}sigmoid(e){return void 0===e?new D(void 0):(this.validateOperandBuilder([e]),new D(e).output)}tanh(e){return void 0===e?new G(void 0):(this.validateOperandBuilder([e]),new G(e).output)}gemm(e,t,n={}){return this.validateOperandBuilder([e,t,n.c]),class{static build(e,t,n,r={}){k.j(t),k.j(n),k.a(void 0===r.c||"number"==typeof r.c||r.c instanceof i.c,"The options.c is invalid."),k.a(void 0===r.aTranspose||k.e(r.aTranspose),"The options.aTranspose is invalid."),k.a(void 0===r.bTranspose||k.e(r.bTranspose),"The options.bTranspose is invalid."),k.a(void 0===r.alpha||"number"==typeof r.alpha,"The options.alpha is invalid."),k.a(void 0===r.beta||"number"==typeof r.beta,"The options.beta is invalid."),r.aTranspose&&(t=e.transpose(t)),r.bTranspose&&(n=e.transpose(n));const a=e.constant({type:i.d.float32,dimensions:[1]},{resource:void 0===r.alpha?o.scalar(1):o.scalar(r.alpha)}),s=e.constant({type:i.d.float32,dimensions:[1]},{resource:void 0===r.beta?o.scalar(1):o.scalar(r.beta)}),u=e.matmul(e.mul(a,t),n);return r.c?e.add(u,e.mul(s,r.c)):u}}.build(this,e,t,n)}gru(e,t,n,r,a,i={}){return this.validateOperandBuilder([e,t,n,i.bias,i.recurrentBias,i.initialHiddenState]),new Y(e,t,n,r,a,i).outputs}gruCell(e,t,n,r,a,i={}){return this.validateOperandBuilder([e,t,n,r,i.bias,i.recurrentBias]),new X(e,t,n,r,a,i).output}instanceNormalization(e,t={}){return this.validateOperandBuilder([e,t.bias,t.scale]),new Z(e,t).output}leakyRelu(e={},t={}){if(e instanceof i.c){const n=e;return this.validateOperandBuilder([n]),new H(n,t.alpha).output}return new H(void 0,e.alpha)}matmul(e,t){return this.validateOperandBuilder([e,t]),new A(e,t).output}pad(e,t,n={}){return this.validateOperandBuilder([e,t]),new Q(e,t,n).output}averagePool2d(e,t={}){return this.validateOperandBuilder([e]),new ee(e,t).output}l2Pool2d(e,t={}){return this.validateOperandBuilder([e]),new ne(e,t).output}maxPool2d(e,t={}){return this.validateOperandBuilder([e]),new te(e,t).output}reduceL1(e,t={}){return this.validateOperandBuilder([e]),new le(e,t).output}reduceL2(e,t={}){return this.validateOperandBuilder([e]),new de(e,t).output}reduceLogSumExp(e,t={}){return this.validateOperandBuilder([e]),new ae(e,t).output}reduceMax(e,t={}){return this.validateOperandBuilder([e]),new ie(e,t).output}reduceMean(e,t={}){return this.validateOperandBuilder([e]),new oe(e,t).output}reduceMin(e,t={}){return this.validateOperandBuilder([e]),new se(e,t).output}reduceProduct(e,t={}){return this.validateOperandBuilder([e]),new ue(e,t).output}reduceSum(e,t={}){return this.validateOperandBuilder([e]),new ce(e,t).output}resample2d(e,t={}){return this.validateOperandBuilder([e]),new he(e,t).output}reshape(e,t){return this.validateOperandBuilder([e]),new pe(e,t).output}slice(e,t,n,r={}){return this.validateOperandBuilder([e]),new fe(e,t,n,r.axes).output}softmax(e){return this.validateOperandBuilder([e]),new me(e).output}split(e,t,n={}){return this.validateOperandBuilder([e]),new be(e,t,n).outputs}squeeze(e,t={}){return this.validateOperandBuilder([e]),new ge(e,t.axes).output}transpose(e,t={}){return this.validateOperandBuilder([e]),new ke(e,t.permutation).output}validateOperandBuilder(e){k.a(e.every((e=>!e||e instanceof i.c&&e.builder===this)),"The operand is not built by this builder.")}}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e===t?1:0)),s=Object(i.a)(r.Equal,o,null,"bool"),u={kernelName:r.Equal,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.exp(e))),s=Object(i.b)(r.Exp,o,"float32"),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,i){const o=t.length,s=r.util.sizeFromShape(t),u=r.util.computeStrides(t),c=r.util.computeStrides(i),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(i));for(let t=0;t<s;++t){const n=r.util.indexToLoc(t,o,u),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[a[e]];l[r.util.locToIndex(i,o,c)]=e[t]}return l}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>1/(1+Math.exp(-e)))),s=Object(i.a)(r.Sigmoid,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,i,o=!1,s=0){const u=a.length,c=[t[0],e.length/t[0]],l=c[1],d=u>0?i[u-1]+1:0;if(d<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=r.util.getArrayFromDType(n,p);if(0===u)return d>0&&f.fill(s),[f,h];if(d<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,b=1,g=0,k=i[m];for(;;){let t=0;if(b<u){if(t=i[b],k===t){++b;continue}if(k>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(k<0||k>=d)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(k,d));k>g&&f.fill(s,g*l,k*l);for(let t=m;t<b;++t){const n=a[t];if(n<0||n>=c[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,a[t],c[0]));for(let t=0;t<l;t++)f[k*l+t]+=e[n*l+t]}if(o)for(let e=0;e<l;e++)f[k*l+e]/=b-m;if(m=b,++b,g=k+1,k=t,b>u)break}return g<d&&f.fill(s,g*l,d*l),[f,h]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));n(90),n(91);var r,a,i=n(0),o=n(5);!function(e){e.default="default",e["high-performance"]="high-performance",e["low-power"]="low-power"}(r||(r={})),function(e){e.default="default",e.gpu="gpu",e.cpu="cpu"}(a||(a={}));class s{constructor(e={}){o.a(e instanceof Object,"Invalid options."),void 0!==e.powerPreference&&o.a(e.powerPreference in r,"Invalid power preference."),this.options_=e}get options(){return this.options_}get tf(){return i}}},function(e,t,n){var r=n(102),a=n(103),i=n(104),o=n(105),s=n(106),u=n(107),c=n(108);c.alea=r,c.xor128=a,c.xorwow=i,c.xorshift7=o,c.xor4096=s,c.tychei=u,e.exports=c},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e){n(3);var t=n(51),r=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r.c)();a.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>t.isBrowser())),a.registerFlag("IS_NODE",(()=>"undefined"!=typeof e&&"undefined"!=typeof e.versions&&"undefined"!=typeof e.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n(50))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return i("refCount")}incRef(e){return i("incRef")}timerAvailable(){return!0}time(e){return i("time")}read(e){return i("read")}readSync(e){return i("readSync")}readToGPU(e,t){return i("readToGPU")}numDataIds(){return i("numDataIds")}disposeData(e,t){return i("disposeData")}write(e,t,n){return i("write")}move(e,t,n,r,a){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return i("dispose")}}function i(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t){var n,r,a=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var u,c=[],l=!1,d=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&p())}function p(){if(!l){var e=s(h);l=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new f(e,t)),1!==c.length||l||s(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){"use strict";let r;function a(e){r=e}function i(e){if(void 0!==r)return r;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function o(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"mockIsMobile",(function(){return a})),n.d(t,"isMobile",(function(){return i})),n.d(t,"isBrowser",(function(){return o}))},function(e,t,n){"use strict";n.r(t);var r=n(53);n.d(t,"simpleAbsImpl",(function(){return r.b}));var a=n(26);n.d(t,"addImpl",(function(){return a.c}));var i=n(33);n.d(t,"bincountImpl",(function(){return i.a})),n.d(t,"bincountReduceImpl",(function(){return i.b}));var o=n(54);n.d(t,"ceilImpl",(function(){return o.b}));var s=n(55);n.d(t,"concatImpl",(function(){return s.a}));var u=n(39);n.d(t,"equalImpl",(function(){return u.c}));var c=n(40);n.d(t,"expImpl",(function(){return c.c}));var l=n(56);n.d(t,"expm1Impl",(function(){return l.b}));var d=n(57);n.d(t,"floorImpl",(function(){return d.b}));var h=n(58);n.d(t,"gatherNdImpl",(function(){return h.a}));var p=n(59);n.d(t,"gatherV2Impl",(function(){return p.a}));var f=n(60);n.d(t,"greaterImpl",(function(){return f.b}));var m=n(61);n.d(t,"greaterEqualImpl",(function(){return m.b}));var b=n(62);n.d(t,"lessImpl",(function(){return b.b}));var g=n(63);n.d(t,"lessEqualImpl",(function(){return g.b}));var k=n(64);n.d(t,"linSpaceImpl",(function(){return k.a}));var y=n(65);n.d(t,"logImpl",(function(){return y.b}));var v=n(66);n.d(t,"maxImpl",(function(){return v.a}));var w=n(67);n.d(t,"maximumImpl",(function(){return w.b}));var I=n(68);n.d(t,"minimumImpl",(function(){return I.b}));var x=n(27);n.d(t,"multiplyImpl",(function(){return x.c}));var S=n(69);n.d(t,"negImpl",(function(){return S.b}));var O=n(70);n.d(t,"notEqualImpl",(function(){return O.b}));var _=n(71);n.d(t,"prodImpl",(function(){return _.b}));var T=n(72);n.d(t,"rangeImpl",(function(){return T.a}));var A=n(73);n.d(t,"rsqrtImpl",(function(){return A.b}));var N=n(42);n.d(t,"sigmoidImpl",(function(){return N.c}));var C=n(22);n.d(t,"sliceImpl",(function(){return C.c}));var E=n(74);n.d(t,"sparseFillEmptyRowsImpl",(function(){return E.a}));var j=n(75);n.d(t,"sparseReshapeImpl",(function(){return j.a}));var $=n(43);n.d(t,"sparseSegmentReductionImpl",(function(){return $.a}));var M=n(76);n.d(t,"sqrtImpl",(function(){return M.b}));var z=n(77);n.d(t,"squaredDifferenceImpl",(function(){return z.b}));var R=n(78);n.d(t,"stridedSliceImpl",(function(){return R.a}));var F=n(79);n.d(t,"stringNGramsImpl",(function(){return F.a}));var B=n(80);n.d(t,"stringSplitImpl",(function(){return B.a}));var P=n(81);n.d(t,"stringToHashBucketFastImpl",(function(){return P.a}));var D=n(34);n.d(t,"subImpl",(function(){return D.c}));var G=n(82);n.d(t,"tileImpl",(function(){return G.a}));var L=n(83);n.d(t,"topKImpl",(function(){return L.a}));var W=n(41);n.d(t,"transposeImpl",(function(){return W.a}));var U=n(84);n.d(t,"uniqueImpl",(function(){return U.a}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const o={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Object(a.a)(t,"abs");let o=new Float32Array(r.util.sizeFromShape(t.shape));return o=i(n.data.get(t.dataId).values),n.makeOutput(o,t.shape,t.dtype)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.ceil(e))),s=Object(i.b)(r.Ceil,o),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const i=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.util.sizeFromShape(e.shape);i.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)i[r+t]=o[s++]}a+=e.shape[1]}))}return i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.expm1(e))),s=Object(i.b)(r.Expm1,o),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.floor(e))),s=Object(i.b)(r.Floor,o),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,i,o,s,u,c){const l=Object(r.buffer)([a,o],n);for(let n=0;n<a;n++){const r=[];let a=0;for(let t=0;t<i;t++){const o=e[n*i+t];a+=o*s[t],r.push(o)}if(a<0||a>=c/o)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<o;e++)l.values[n*o+e]=t.get(...t.indexToLoc(a*o+e))}return l}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=Object(r.buffer)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),i=r[0],o=r[2],s=t.locToIndex([i,o]);r[2]=t.values[s];const u=e.locToIndex(r);0<=u&&u<e.values.length&&(a.values[n]=e.values[u])}return a}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e>t?1:0)),s=Object(i.a)(r.Greater,o,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e>=t?1:0)),s=Object(i.a)(r.GreaterEqual,o,null,"bool"),u={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e<t?1:0)),s=Object(i.a)(r.Less,o,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e<=t?1:0)),s=Object(i.a)(r.LessEqual,o,null,"bool"),u={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=(t-e)/(n-1),i=r.util.makeZerosTypedArray(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+a;return i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.log(e))),s=Object(i.b)(r.Log,o),u={kernelName:r.Log,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const i=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let n=0;n<i.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}i[n]=a}return i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>Math.max(e,t))),s=Object(i.a)(r.Maximum,o),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>Math.min(e,t))),s=Object(i.a)(r.Minimum,o),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return s}));var r=n(0),a=n(7),i=n(27);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){const a=r.util.createScalarValue(-1,n);return Object(i.c)([],t,a,e,n)}const s={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(a.a)(r,"neg");const i=n.data.get(r.dataId).values,[s,u]=o(i,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,s)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>e!==t?1:0)),s=Object(i.a)(r.NotEqual,o,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return s}));var r=n(0),a=n(7),i=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,a){const[i,o]=r.backend_util.computeOutAndReduceShapes(e,a),s=Object(r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(i),s),c=r.util.sizeFromShape(o);for(let e=0;e<u.length;++e){const t=e*c;let r=1;for(let e=0;e<c;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:i,outDtype:s}}const s={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:u}=t,{axis:c,keepDims:l}=s;Object(a.a)(u,"prod");const d=u.shape.length,h=r.util.parseAxisParam(c,u.shape),p=r.backend_util.getAxesPermutation(h,d);let f=h,m=u;const b=[];null!=p&&(m=Object(i.a)({inputs:{x:u},backend:n,attrs:{perm:p}}),b.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const g=n.data.get(m.dataId).values,{outVals:k,outShape:y,outDtype:v}=o(m.shape,m.dtype,g,f);let w=y;return l&&(w=r.backend_util.expandShapeToKeepDim(y,h)),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,v,k)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const i=Math.abs(Math.ceil((t-e)/n)),o=r.util.makeZerosTypedArray(i,a);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>1/Math.sqrt(e))),s=Object(i.b)(r.Rsqrt,o),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,i,o,s){const u=t[0],c=o[0],l=new Array(c),d=new Array(u),h=t[1];if(0===c){if(0!==u)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.util.getArrayFromDType(n,0),[0,h],r.util.getArrayFromDType(i,0),l,d]}let p=!0,f=0;const m=new Array(c).fill(0);for(let t=0;t<u;++t){const n=e[t*h];if(n<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=c)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,c));++m[n],p=p&&n>=f,f=n}let b=!0;for(let e=0;e<c;++e){const t=0===m[e];l[e]=t,b=b&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(b&&p){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,h],n,l,d]}{const t=m[c-1],o=r.util.getArrayFromDType(n,t*h),p=r.util.getArrayFromDType(i,t),f=new Array(c).fill(0);for(let t=0;t<u;++t){const n=e[t*h],r=f[n],i=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<h;++n)o[i*h+n]=e[t*h+n];p[i]=a[t],d[t]=i}for(let e=0;e<c;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;p[t]=s}}return[o,[t,h],p,l,d]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,i){const o=r.util.sizeFromShape(a),s=t[0],u=i.length,c=[];let l=1,d=-1;for(let e=0;e<u;++e){const t=i[e];if(-1===t){if(-1!==d)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,c.push(1)}else{if(t<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,c.push(t)}}if(-1!==d){if(l<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/l);if(l*e!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,c));c[d]=e}if(r.util.sizeFromShape(c)!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,c));const h=a.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*c[e+1]}const m=r.util.getArrayFromDType(n,s*u);for(let t=0;t<s;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<u;++e)m[t*u+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[s,u],c]}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(21),i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)((e=>Math.sqrt(e))),s=Object(i.a)(r.Sqrt,(e=>Math.sqrt(e))),u={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(12),i=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)(((e,t)=>{const n=e-t;return n*n})),s=Object(i.a)(r.SquaredDifference,o),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const i=Object(r.buffer)(e,t.dtype);for(let e=0;e<i.size;e++){const r=i.indexToLoc(e),o=new Array(r.length);for(let e=0;e<o.length;e++)o[e]=r[e]*n[e]+a[e];i.set(t.get(...o),...r)}return i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a{constructor(e,t,n,a,i,o){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=i,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,i){for(let o=0;o<a;++o){const s=this.getPadWidth(i),u=Math.max(0,s-o),c=Math.max(0,s-(a-(o+1))),l=i-(u+c),d=t+(u>0?0:o-s);let h=0;h+=u*this.leftPad.length;for(let t=0;t<l;++t)h+=e[d+t].length;h+=c*this.rightPad.length;h+=(u+c+l-1)*this.separator.length,n[r+o]=new Uint8Array(h);const p=n[r+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const i=a-1,o=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=i;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=i;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),o[e]=o[e-1]+r}const s=new Array(o[i]);for(let n=0;n<i;++n){const r=t[n];let a=o[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,i);this.createNGrams(e,r,s,a,u,i),a+=u})),this.preserveShort&&a===o[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,u=1;this.createNGrams(e,r,s,a,u,o)}}return[s,o]}}function i(e,t,n,r,i,o,s,u){return new a(n,r,i,o,s,u).compute(e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let i=e.indexOf(a);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(a,i);n&&0===t.length||r.push(t),a=i+1}}function i(e,t,n){const i=e.length,o=[];let s=0,u=0;const c=new Array(i);for(let r=0;r<i;++r){const i=o.length;a(e[r],t,n,o);const l=o.length-i;c[r]=l,s+=l,u=Math.max(u,l)}const l=r.util.getArrayFromDType("int32",2*s),d=new Array(s),h=[i,u];let p=0;for(let e=0;e<i;++e)for(let t=0;t<c[e];++t)l[2*p]=e,l[2*p+1]=t,d[p]=o[p],++p;return[l,d,h]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r.buffer)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const i=e.locToIndex(r);a.values[t]=e.values[i]}return a}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function i(e,t,n=0,o=e.length-1){for(;o>n;){if(o-n>600){const r=o-n+1,a=t-n+1,s=Math.log(r),u=.5*Math.exp(2*s/3),c=.5*Math.sqrt(s*u*(r-u)/r)*Math.sign(a-r/2);i(e,t,Math.max(n,Math.floor(t-a*u/r+c)),Math.min(o,Math.floor(t+(r-a)*u/r+c)))}const s=e[t];let u=n,c=o;for(r.util.swap(e,n,t),a(e[o],s)>0&&r.util.swap(e,n,o);u<c;){for(r.util.swap(e,u,c),u++,c--;a(e[u],s)<0;)u+=1;for(;a(e[c],s)>0;)c-=1}0===a(e[n],s)?r.util.swap(e,n,c):(c+=1,r.util.swap(e,c,o)),c<=t&&(n=c+1),t<=c&&(o=c-1)}}function o(e,t,n,o,s){const u=t[t.length-1],[c,l]=[e.length/u,u],d=r.util.getTypedArrayFromDType(n,c*o),h=r.util.getTypedArrayFromDType("int32",c*o);for(let t=0;t<c;t++){const n=t*l,r=e.subarray(n,n+l);let u=new Array(r.length);r.forEach(((e,t)=>u[t]={value:e,index:t})),o<u.length&&(i(u,o),u=u.slice(0,o)),s&&u.sort(a);const c=t*o,p=d.subarray(c,c+o),f=h.subarray(c,c+o);for(let e=0;e<o;e++)p[e]=u[e].value,f[e]=u[e].index}const p=t.slice();return p[p.length-1]=o,[Object(r.buffer)(p,n,d),Object(r.buffer)(p,"int32",h)]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const i=r.util.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let e=0;e<i;e++)o[0]*=n[e];o[1]=n[i];for(let e=i+1;e<n.length;e++)o[2]*=n[e];const s={},u=new Int32Array(n[i]),c=new r.TensorBuffer(o,a,e),l=[],d=1===o[0]&&1===o[2];for(let t=0;t<n[i];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(c.get(n,t,r));n=e.join(",")}if(void 0!==s[n])u[t]=s[n];else{const e=Object.keys(s).length;s[n]=e,u[t]=e,l.push(t)}}const h=o.slice();h[1]=Object.keys(s).length;const p=new r.TensorBuffer(h,a);l.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)p.set(c.get(n,e,r),n,t,r)}));const f=n.slice();return f[i]=h[1],{outputValues:p.values,outputShape:f,indices:u}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(0),a=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n="float32"){if("complex64"===n){const n=i(e,t,"float32"),r=i(e,t,"float32");return Object(a.a)({inputs:{real:n,imag:r},backend:e})}const o=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,o)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));n(90),n(91);var r=n(0),a=n(11),i=n(5);class o{constructor(e,t,n,r){this.constantTenosrs_=e,this.operandRefs_=r,this.allocateInputTensors(t,n),this.outputTensors_=new Map,this.outputOperands_=new Set}allocateInputTensors(e,t){this.inputTensors_=new Map;for(const n in t){const r=t[n],a=e.get(n);let i=r.resource;this.inputTensors_.set(a,{ref:this.operandRefs_.get(a),tensor:i})}}compute(e){for(const t of e.values())this.outputOperands_.add(t);const t={};for(const n of e.keys())t[n]=this.getTensor(e.get(n));return t}setOutputTensor(e,t){i.a(!this.outputTensors_.has(e),"MLOutput already has tensor."),this.outputTensors_.set(e,{ref:this.operandRefs_.get(e),tensor:t})}releaseTensor(e){let t;if(e instanceof a.b)t=this.inputTensors_;else{if(!(e instanceof a.e))return;if(this.outputOperands_.has(e))return;t=this.outputTensors_}const n=t.get(e);i.a(void 0!==n,"No tensor found for operand."),n.ref--,0===n.ref&&(r.dispose(n.tensor),t.delete(e))}getTensor(e){if(e instanceof a.a)return this.constantTenosrs_.get(e);if(e instanceof a.b)return this.inputTensors_.get(e).tensor;if(e instanceof a.e)return this.outputTensors_.has(e)||(e.operation.compute(this),i.a(this.outputTensors_.has(e),"No output is set.")),this.outputTensors_.get(e).tensor;throw new Error("The operand is invalid.")}}class s{constructor(e){this.inputs_=new Map,this.outputs_=new Map,this.constants_=new Set,this.operandRefs_=new Map,this.constantTensors_=new Map,i.a(void 0!==e,"Invalid argument");for(const t in e)i.a("string"==typeof t&&e[t]instanceof a.e,"The outputs parameter is invalid."),this.outputs_.set(t,e[t]);i.a(0!==this.outputs_.size,"The outputs is empty")}compute(e,t){i.a(0!==Object.keys(t).length,"The outputs is invalid.");const n=new Map;for(const e in t)i.a("string"==typeof e&&this.outputs_.has(e),"The name of the output is invalid."),n.set(e,this.outputs_.get(e));const a=r.tidy((()=>new o(this.constantTensors_,this.inputs_,e,this.operandRefs_).compute(n)));for(const e of Object.keys(a)){const n=a[e];t[e].resource=n}}static buildAndCompile(e){const t=new s(e);return t.build(),t.compile(),t}build(){const e=new Set;for(const t of this.outputs_.values())this.buildOperation(t.operation,e)}buildOperation(e,t){if(!t.has(e)){t.add(e);for(const n of e.inputs()){if(this.operandRefs_.has(n)){let e=this.operandRefs_.get(n);e++,this.operandRefs_.set(n,e)}else this.operandRefs_.set(n,1);if(n instanceof a.b){if(this.inputs_.has(n.name)){if(this.inputs_.get(n.name)!==n)throw new Error("The name of this input is existed.");continue}this.inputs_.set(n.name,n)}else n instanceof a.a?this.constants_.has(n)||this.constants_.add(n):n instanceof a.e&&this.buildOperation(n.operation,t)}}}compile(){this.allocateConstants(),this.computeOnce()}allocateConstants(){for(const e of this.constants_)this.constantTensors_.set(e,e.value)}computeOnce(){const e={};for(const t of this.inputs_.keys()){const n=this.inputs_.get(t).desc.dimensions.map((e=>e<0?1:e));e[t]={resource:r.zeros(n)}}const t=r.tidy((()=>new o(this.constantTensors_,this.inputs_,e,this.operandRefs_).compute(this.outputs_)));for(const e of Object.keys(t)){const n=t[e];n.data(),r.dispose(n)}}dispose(){for(const e of this.constantTensors_.values())r.dispose(e);const e=new Set;for(const t of this.outputs_.values())this.disposeOperation(t.operation,e)}disposeOperation(e,t){if(!t.has(e)){e.dispose(),t.add(e);for(const n of e.inputs())n instanceof a.e&&this.disposeOperation(n.operation,t)}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(44);class a{constructor(){}createContext(e={}){return new r.a(e)}}},function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var i={},o={};function s(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=o[e])?r:(n=c(e,(0|e)<0?-1:0,!0),a&&(o[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=i[e])?r:(n=c(e,e<0?-1:0,!1),a&&(i[e]=n),n)}function u(e,t){if(isNaN(e))return t?k:g;if(t){if(e<0)return k;if(e>=f)return x}else{if(e<=-m)return S;if(e+1>=m)return I}return e<0?u(-e,t).neg():c(e%p|0,e/p|0,t)}function c(e,t,n){return new r(e,t,n)}r.fromInt=s,r.fromNumber=u,r.fromBits=c;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(l(n,8)),i=g,o=0;o<e.length;o+=8){var s=Math.min(8,e.length-o),c=parseInt(e.substring(o,o+s),n);if(s<8){var h=u(l(n,s));i=i.mul(h).add(u(c))}else i=(i=i.mul(a)).add(u(c))}return i.unsigned=t,i}function h(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):c(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var p=4294967296,f=p*p,m=f/2,b=s(1<<24),g=s(0);r.ZERO=g;var k=s(0,!0);r.UZERO=k;var y=s(1);r.ONE=y;var v=s(1,!0);r.UONE=v;var w=s(-1);r.NEG_ONE=w;var I=c(-1,2147483647,!1);r.MAX_VALUE=I;var x=c(-1,-1,!0);r.MAX_UNSIGNED_VALUE=x;var S=c(0,-2147483648,!1);r.MIN_VALUE=S;var O=r.prototype;O.toInt=function(){return this.unsigned?this.low>>>0:this.low},O.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},O.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(l(e,6),this.unsigned),i=this,o="";;){var s=i.div(a),c=(i.sub(s.mul(a)).toInt()>>>0).toString(e);if((i=s).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},O.getHighBits=function(){return this.high},O.getHighBitsUnsigned=function(){return this.high>>>0},O.getLowBits=function(){return this.low},O.getLowBitsUnsigned=function(){return this.low>>>0},O.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},O.isZero=function(){return 0===this.high&&0===this.low},O.eqz=O.isZero,O.isNegative=function(){return!this.unsigned&&this.high<0},O.isPositive=function(){return this.unsigned||this.high>=0},O.isOdd=function(){return 1==(1&this.low)},O.isEven=function(){return 0==(1&this.low)},O.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},O.eq=O.equals,O.notEquals=function(e){return!this.eq(e)},O.neq=O.notEquals,O.ne=O.notEquals,O.lessThan=function(e){return this.comp(e)<0},O.lt=O.lessThan,O.lessThanOrEqual=function(e){return this.comp(e)<=0},O.lte=O.lessThanOrEqual,O.le=O.lessThanOrEqual,O.greaterThan=function(e){return this.comp(e)>0},O.gt=O.greaterThan,O.greaterThanOrEqual=function(e){return this.comp(e)>=0},O.gte=O.greaterThanOrEqual,O.ge=O.greaterThanOrEqual,O.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},O.comp=O.compare,O.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(y)},O.neg=O.negate,O.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,i=65535&this.low,o=e.high>>>16,s=65535&e.high,u=e.low>>>16,l=0,d=0,p=0,f=0;return p+=(f+=i+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,l+=(d+=n+s)>>>16,l+=t+o,c((p&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},O.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},O.sub=O.subtract,O.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),n)return c(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,i=this.low>>>16,o=65535&this.low,s=e.high>>>16,l=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,m=0,k=0,y=0;return k+=(y+=o*p)>>>16,m+=(k+=i*p)>>>16,k&=65535,m+=(k+=o*d)>>>16,f+=(m+=r*p)>>>16,m&=65535,f+=(m+=i*d)>>>16,m&=65535,f+=(m+=o*l)>>>16,f+=t*p+r*d+i*l+o*s,c((k&=65535)<<16|(y&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},O.mul=O.multiply,O.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,r,i;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?k:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return k;if(e.gt(this.shru(1)))return v;i=k}else{if(this.eq(S))return e.eq(y)||e.eq(w)?S:e.eq(S)?y:(t=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:w:(r=this.sub(e.mul(t)),i=t.add(r.div(e)));if(e.eq(S))return this.unsigned?k:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(t)/Math.LN2),s=o<=48?1:l(2,o-48),d=u(t),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=u(t-=s,this.unsigned)).mul(e);d.isZero()&&(d=y),i=i.add(d),r=r.sub(p)}return i},O.div=O.divide,O.modulo=function(e){return a(e)||(e=h(e)),n?c((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},O.mod=O.modulo,O.rem=O.modulo,O.not=function(){return c(~this.low,~this.high,this.unsigned)},O.and=function(e){return a(e)||(e=h(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},O.or=function(e){return a(e)||(e=h(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},O.xor=function(e){return a(e)||(e=h(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},O.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},O.shl=O.shiftLeft,O.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},O.shr=O.shiftRight,O.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},O.shru=O.shiftRightUnsigned,O.shr_u=O.shiftRightUnsigned,O.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},O.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},O.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},O.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},O.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof e?e:e=>e();function a(){return new Promise((e=>r((()=>e()))))}}).call(this,n(110).setImmediate)},function(e,t,n){"use strict";var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=Object(r.env)();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function s(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function u(e,t,n,a=!1){const u=[];if(u.push(`\n    let workGroupSizeX = ${n.workGroupSize[0]}u;\n    let workGroupSizeY = ${n.workGroupSize[1]}u;\n    let workGroupSizeZ = ${n.workGroupSize[2]}u;\n\n    var<private> localId: vec3<u32>;\n    var<private> globalId: vec3<u32>;\n    var<private> numWorkgroups: vec3<u32>;\n\n    // Only used when the y/z dimension of workgroup size is 1.\n    fn getGlobalIndex() -> i32 {\n      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {\n        return i32(globalId.x);\n      }\n\n      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +\n          localId.y * workGroupSizeX + localId.x;\n      let workGroupID = (globalId - localId)/vec3<u32>(\n          workGroupSizeX, workGroupSizeY, workGroupSizeZ);\n\n      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +\n        workGroupID.y * numWorkgroups.x + workGroupID.x) *\n        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +\n        localInvocationIndex);\n    }\n  `),!0===a)return u.push(`\n      struct Matrix0 {\n        numbers: array<${s(t.dtype,n.isVec4)}>;\n      };\n      struct Uniform {\n        size            : i32;\n        numChannels     : i32;\n        outShapeStrides : vec2<i32>;\n        dispatchSize    : vec3<u32>;\n      };\n\n      @group(0) @binding(0) var<storage, write> result : Matrix0;\n      @group(0) @binding(2) var<uniform> uniforms: Uniform;\n    `),[c,u.join("\n"),d(t.shape),n.getUserCode()].join("\n");let h="struct Uniforms { NAN : f32; ";n.variableNames.forEach(((t,n)=>{h+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${o(e[n].shape.length)}; `})),h+=`outShape : ${o(t.shape.length)} ; `;const p=t.shape.length-1;h+=`\n       outShapeStrides: ${o(p)}; `,n.size&&(h+="size : i32; "),n.uniforms&&(h+=n.uniforms),h+="};",u.push(h),n.atomic?u.push("\n    struct Matrix0 {\n        numbers: array<atomic<i32>>;\n    };\n\n    @group(0) @binding(0) var<storage, read_write> result : Matrix0;\n  "):u.push(`\n    struct Matrix0 {\n        numbers: array<${s(t.dtype,n.isVec4)}>;\n    };\n\n    @group(0) @binding(0) var<storage, write> result : Matrix0;\n  `),n.variableNames.forEach(((t,r)=>{u.push(`\n    struct Matrix${1+r} {\n      numbers: array<${s(e[r].dtype,n.isVec4)}>;\n    };\n    @group(0) @binding(${1+r}) var<storage, read> ${t} : Matrix${1+r};\n    `)})),""!==h&&u.push(`\n    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms : Uniforms;\n    `);const[f,m]=function(e,t){const{x:n,y:r=[],z:a=[]}=t,s=e.length;if(n.length===s){return[`fn getOutputCoords() -> ${o(s)}{\n      let globalIndex = getGlobalIndex();\n      return getCoordsFromIndex(globalIndex);\n    }\n    `,s]}let u="";const c=[n,r,a];let l=0;for(let e=0;e<c.length;e++){const t=c[e];if(0!==t.length)if(l+=t.length,1===t.length)u+=`let d${t[0]} = i32(globalId[${e}]);`;else{const n=i(t,"uniforms.outShape");u+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)u+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?u+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:u+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}const d=[];for(let e=0;e<l;e++)d.push(`d${e}`);const h=o(l);let p=`fn getOutputCoords() -> ${h} {\n    ${u}\n  `;0===d.length?p+=`return ${h}(0); }`:p+=`return ${h}(${d.join(",")}); }`;return[p,l]}(t.shape,n.dispatchLayout),b=[c,u.join("\n"),d(t.shape),f,l(t.shape.length)];if(n.atomic||b.push(function(e,t,n){const r=e.length,a=s(t,n);let i;i=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result.numbers[flatIndex] = ${a}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result.numbers[flatIndex] = ${a}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result.numbers[flatIndex] = ${a}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result.numbers[flatIndex] = ${a}(value);\n    }`;if(r>=2){const e=["d0","d1","d2","d3"].slice(0,r),t=o(r);i+=n?`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return i}(t.shape,t.dtype,n.isVec4)),m===t.shape.length){const a=e.map((e=>function(e,t,n,a){let i=function(e,t){const n=e.name,r=e.shape.length,a=o(r),i="get"+n.charAt(0).toUpperCase()+n.slice(1),s=["d0","d1","d2","d3"].slice(0,r),u=s.map((e=>`${e} : i32`)).join(", ");if(r<1)return t?`\n        fn ${i}() -> vec4<f32> {\n          return vec4<f32>(${n}.numbers[0]);\n        }\n      `:`\n      fn ${i}() ->f32 {\n        return f32(${n}.numbers[0]);\n      }\n    `;const c=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let l=`${r}D`;0===r&&(l="1D");if(t)return`\n      fn ${i}(${u}) -> vec4<f32> {\n        return vec4<f32>(${n}.numbers[getIndexFromCoords${l}(${a}(${s.join(",")}),\n          ${c}) / 4]);\n      }\n      `;return`\n    fn ${i}(${u}) -> f32 {\n      return f32(${n}.numbers[getIndexFromCoords${l}(${a}(${s.join(",")}),\n        ${c})]);\n    }\n   `}(e,n);e.shape.length<=t.length&&(i+=function(e,t,n,a){const i=e.name,s=i.charAt(0).toUpperCase()+i.slice(1),u="get"+s+"ByOutput",c=e.shape.length,l=t.length,d=o(l);if(r.util.arraysEqual(e.shape,t)&&a)return n?`\n        fn ${u}Index(globalIndex : i32) -> vec4<f32> {\n          return vec4<f32>(${i}.numbers[globalIndex]);\n        }\n\n        fn ${u}Coords(coords : ${d}) -> vec4<f32> {\n          return vec4<f32>(${i}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n        }\n        `:`\n      fn ${u}Index(globalIndex : i32) -> f32 {\n        return f32(${i}.numbers[globalIndex]);\n      }\n\n      fn ${u}Coords(coords : ${d}) -> f32 {\n        return f32(${i}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n      }\n      `;const h=r.backend_util.getBroadcastDims(e.shape,t),p=l-c;let f="";if(0===c)return n?`\n      fn ${u}Index(globalIndex : i32) -> vec4<f32> {\n        return get${s}();\n      }\n\n      fn ${u}Coords(coords : ${d}) -> vec4<f32> {\n        return get${s}();\n      }\n    `:`\n      fn ${u}Index(globalIndex : i32) -> f32{\n        return get${s}();\n      }\n\n      fn ${u}Coords(coords : ${d}) -> f32{\n        return get${s}();\n      }\n    `;f=l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords[${e+p}] = 0;`)).join("\n");let m="";if(l<2&&c>0)m="coords";else if(l>1){m=`${o(c)}(${e.shape.map(((e,t)=>`coords[${t+p}]`)).join(", ")})`}else m="coords";const b=`uniforms.${i.charAt(0).toLowerCase()+i.slice(1)}Shape`,g=`${c}D`;if(n)return`\n      fn ${u}Index(globalIndex : i32) -> vec4<f32> {\n        var coords = getCoordsFromIndex(globalIndex);\n        ${f}\n        return ${i}.numbers[getIndexFromCoords${g}(${m}, ${b}) / 4];\n      }\n\n      fn ${u}Coords(coordsIn : ${d}) -> vec4<f32> {\n        var coords = coordsIn;\n        ${f}\n        return ${i}.numbers[getIndexFromCoords${g}(${m}, ${b}) / 4];\n      }\n    `;return`\n    fn ${u}Index(globalIndex : i32) -> f32 {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${f}\n      return f32(${i}.numbers[getIndexFromCoords${g}(${m}, ${b})]);\n    }\n\n    fn ${u}Coords(coordsIn : ${d}) -> f32 {\n      var coords = coordsIn;\n      ${f}\n      return f32(${i}.numbers[getIndexFromCoords${g}(${m}, ${b})]);\n    }\n  `}(e,t,n,a));return i}(e,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");b.push(a)}b.push(n.getUserCode());return b.join("\n")}a.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),a.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),a.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",(()=>4)),a.registerFlag("WEBGPU_USE_NAIVE_CONV2D",(()=>!1)),a.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),a.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),a.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),a.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),a.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),a.registerFlag("WEBGPU_USE_IMPORT",(()=>!1));const c="\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let mod: i32 = a % b;\n    if (sign < 0. && mod != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));\n  }\n";function l(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;default:r.util.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function d(e){const t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";const n=r.util.computeStrides(e),a=o(t),i=[];for(let e=0;e<t;e++)i.push(`d${e}`);if(1===n.length)return"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }";return`\n    fn getCoordsFromIndex(index : i32) -> ${a} {\n      ${"var index2 = index;"+n.map(((e,t)=>`${`let ${i[t]} = index2 / uniforms.outShapeStrides[${t}]`}; ${t===n.length-1?`let ${i[t+1]} = index2 - ${i[t]} * uniforms.outShapeStrides[${t}]`:`index2 = index2 - ${i[t]} * uniforms.outShapeStrides[${t}]`};`)).join("")}\n      return ${a}(${i.join(",")});\n    }\n  `}const h=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function p(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]==0))}function f(e,t,n=[1,1,1],r=[1,1,1]){const[a,i,o]=[Math.ceil(h(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(h(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(h(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[a,i,o]}function m(e,t){const n=h(e.x.map((e=>t[e]))),r=h(e.y.map((e=>t[e])));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function b(e,t){const n=h(e.x.map((e=>t[e]))),r=h(e.y.map((e=>t[e])));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function g(e){return{x:e.map(((e,t)=>t))}}function k(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function y(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var v;!function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"}(v||(v={}));const w="\n  if (isNaN.r) {\n    resultTemp.r = uniforms.NAN;\n  }\n  if (isNaN.g) {\n    resultTemp.g = uniforms.NAN;\n  }\n  if (isNaN.b) {\n    resultTemp.b = uniforms.NAN;\n  }\n  if (isNaN.a) {\n    resultTemp.a = uniforms.NAN;\n  }\n  ",I=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;\n  ${w}\n  return resultTemp;\n  `;function x(e,t){const n=t?w:"\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ";return t?`\n    var resultTemp = vec4<f32>(${e}(a, b));\n    let isNaN = isnanVec4(a) | isnanVec4(b);\n    `+n+"\n    return resultTemp;\n  ":n+`\n    return ${e}(a, b);\n  `}function S(e,t){switch(e){case v.MUL:return"return a * b;";case v.ADD:return"return a + b;";case v.SUB:return"return a - b;";case v.DIV:return"return a / b;";case v.EQUAL:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case v.GREATER:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case v.GREATER_EQUAL:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case v.LESS:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case v.LESS_EQUAL:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case v.LOGICAL_AND:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(f32(a) >= 1.0 && f32(b) >= 1.0);";case v.NOT_EQUAL:return t?"return vec4<f32>(a != b);":"return f32(a != b);";case v.SQUARED_DIFFERENCE:return"return (a - b) * (a - b);";case v.INT_DIV:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n  ":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n  ";case v.PRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n  ":"if (a < 0.0) { return b * a; }  return a;";case v.MAX:return x("max",t);case v.MIN:return x("min",t);case v.POW:return t?I:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n  ";case v.COMPLEX_MULTIPLY_REAL:return"return areal * breal - aimag * bimag;";case v.COMPLEX_MULTIPLY_IMAG:return"return areal * bimag + aimag * breal;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var O;!function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.LEAKYRELU=15]="LEAKYRELU",e[e.RSQRT=16]="RSQRT",e[e.SIN=17]="SIN",e[e.SINH=18]="SINH",e[e.SIGMOID=19]="SIGMOID",e[e.SQRT=20]="SQRT",e[e.SQUARE=21]="SQUARE",e[e.TANH=22]="TANH",e[e.TO_INT=23]="TO_INT"}(O||(O={}));function _(e,t){switch(e){case O.ABS:return"return abs(a);";case O.COS:return"return cos(a);";case O.COSH:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case O.CEIL:return"return ceil(a);";case O.ELU:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case O.EXP:return"return exp(a);";case O.EXPM1:return"return exp(a) - 1.0;";case O.FLOOR:return"return floor(a);";case O.LINEAR:return"return a;";case O.LOG:return"if (a < 0.0) { return 1.0/0.0; }\n  return log(a);";case O.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case O.NEG:return"return -a;";case O.PRELU:return"return (a < 0.0) ? b * a : a;";case O.LEAKYRELU:return"if (a < 0.0) { return uniforms.alpha * a; } return a;";case O.RELU:return t?"\n  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));\n  let isNaN = isnanVec4(a);\n\n  if (isNaN.r) {\n    resFloat.r = a.r;\n  }\n  if (isNaN.g) {\n    resFloat.g = a.g;\n  }\n  if (isNaN.b) {\n    resFloat.b = a.b;\n  }\n  if (isNaN.a) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if(a < 0.0) { return 0.0; } return a;";case O.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case O.RSQRT:return"return 1.0/sqrt(a);";case O.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case O.SIN:return"return sin(a);";case O.SINH:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case O.SQRT:return"return sqrt(a);";case O.SQUARE:return"return a * a;";case O.TANH:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case O.TO_INT:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T(e,t=!1){if(null===e)return null;if("linear"===e)return _(O.LINEAR);if("relu"===e)return _(O.RELU,t);if("elu"===e)return _(O.ELU,t);if("relu6"===e)return _(O.RELU6,t);if("prelu"===e)return S(v.PRELU,t);if("sigmoid"===e)return _(O.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A(e,t,n,a){return r.util.assert(a%4==0&&4===e[0],(()=>"tileInner must be divisible by 4. And ColPerThread must be 4")),`\n  var<workgroup> mm_Asub : array<array<vec4<f32>, ${a/e[0]}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${a}>;\n\n  let RowPerThread = ${e[1]};\n  let ColPerThread = ${e[0]};\n  let TileInner = ${a};\n\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n\n    let tileRow = ${1===t?"0":"i32(localId.y) * RowPerThread"};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${1===t?"0":"i32(globalId.y) * RowPerThread"};\n    let globalCol = i32(globalId.x);\n    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n    var acc: array<vec4<f32>, RowPerThread>;\n    var ACached : vec4<f32>;\n    var BCached : array<vec4<f32>, 4>;\n\n    // Loop over shared dimension.\n    var globalColA = tileCol;\n    let RowPerThreadB = TileInner / i32(workGroupSizeY);\n    let tileRowB = i32(localId.y) * RowPerThreadB;\n    for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);\n        }\n        globalColA = globalColA + TileInner / ColPerThread;\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {\n            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];\n            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];\n            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];\n            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];\n\n            for (var i = 0; i < RowPerThread; i = i + 1) {\n                ACached = mm_Asub[tileRow + i][k];\n                acc[i] = BCached[0] * ACached.x + acc[i];\n                acc[i] = BCached[1] * ACached.y + acc[i];\n                acc[i] = BCached[2] * ACached.z + acc[i];\n                acc[i] = BCached[3] * ACached.w + acc[i];\n            }\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        mm_write(globalRow + innerRow,\n                 globalCol,\n                 acc[innerRow], globalId);\n    }\n  }`}class N{constructor(e,t,n,r=null,a=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},1===t[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);const o=null!=r,s=null!=i;o&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=1===t[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=o,this.activation=a,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){const e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],a=[this.tileInner,this.tileBOuter];return[p(r,this.aShape.slice(1)),p(a,n.slice(1))]}getUserCode(){const e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":"if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];\n        }\n        return vec4<f32>(0.0)",t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];\n        }\n        return vec4<f32>(0.0)";let n="",r="";if(this.activation){const e=T(this.activation,this.isVec4);n=this.hasPreluActivationWeights?`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n              ${e}\n            }`,r="value = activation(value, outCoord);"}return`\n      ${n}\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${e};\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${t};\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {\n        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])\n        {\n          var value = valueIn;\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col * 4);\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${r}\n          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);\n        }\n      }\n      ${A(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(e,t){const n=t[1]*e[1],r=t[0]*e[0],a=n>r?n:r;return`\n    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${a}>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileRow = i32(localId.y) * ${e[1]};\n      let tileCol = i32(localId.x) * ${e[0]};\n\n      let globalRow = i32(globalId.y) * ${e[1]};\n      let globalCol = i32(globalId.x) * ${e[0]};\n\n      let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n\n      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;\n      var ACached : f32;\n      var BCached : array<f32, ${e[0]}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n\n      let ColPerThreadA = ${a} / ${t[0]};\n      let tileColA = i32(localId.x) * ColPerThreadA;\n      let RowPerThreadB = ${a} / ${t[1]};\n      let tileRowB = i32(localId.y) * RowPerThreadB;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileColA + innerCol;\n\n            mm_Asub[inputRow][inputCol] = mm_readA(\n                globalRow + innerRow,\n                t * ${a} + inputCol, globalId);\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n\n            mm_Bsub[inputRow][inputCol] = mm_readB(\n              t * ${a} + inputRow,\n              globalCol + innerCol, globalId);\n          }\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${a}; k = k + 1) {\n          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n            ACached = mm_Asub[tileRow + innerRow][k];\n            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        workgroupBarrier();\n      }\n\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n\n          if ((globalCol + innerCol) < uniforms.dimBOuter &&\n              (globalRow + innerRow) < uniforms.dimAOuter) {\n            mm_write(globalRow + innerRow,\n                     globalCol + innerCol,\n                     acc[innerRow][innerCol], globalId);\n          }\n        }\n      }\n    }\n  `}class E{constructor(e,t,n,a=!1,i=!1,o=null,s=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const c=a?e[1]:e[2];this.workGroupSize=function(e,t,n){return 1===e?[32,1,1]:1===n?[1,32,1]:[8,8,1]}(t[1],0,t[2]),1!==t[1]&&1!==t[2]||(n=1),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),r.util.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));const l=null!=o,d=null!=u;l&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=a,this.transposeB=i,this.addBias=l,this.activation=s,this.hasPreluActivationWeights=d;const h=this.outputShape[2],p=this.transposeB?[this.outputShape[0],h,c]:[this.outputShape[0],c,h];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){const t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread;let a=t>n?t:n;1===this.outputShape[1]&&(a*=4),r.util.assert(a%this.workGroupSize[0]==0&&a%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));const i=[a,n];return[p([t,a],this.aShape.slice(1)),p(i,e.slice(1))]}getUserCode(){let e,t;e=!1===this.transposeA?this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];\n           }\n           return 0.0;":this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];\n           }\n           return 0.0;",t=!1===this.transposeB?this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];\n           }\n           return 0.0;":this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];\n           }\n           return 0.0;";let n="",r="";if(this.activation){const e=T(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}var a;return`\n      ${n}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        ${e}\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        var value = valueIn;\n        let batch = i32(globalId.z);\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      ${this.outputShape[1]>1?C([this.workPerThread,this.workPerThread,1],this.workGroupSize):(a=this.workGroupSize,`\n    let TileSize = ${4*a[0]};\n    var<workgroup> mm_Asub : array<vec4<f32>, ${a[0]}>;\n\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;\n\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        let colA = t * TileSize + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),\n                                mm_readA(globalRow, colA + 1, globalId),\n                                mm_readA(globalRow, colA + 2, globalId),\n                                mm_readA(globalRow, colA + 3, globalId));\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileSize / 4; k = k + 1) {\n          let rowB = t * TileSize + k * 4;\n          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),\n                              mm_readB(rowB + 1, globalCol, globalId),\n                              mm_readB(rowB + 2, globalCol, globalId),\n                              mm_readB(rowB + 3, globalCol, globalId));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {\n        mm_write(globalRow, globalCol, acc, globalId);\n      }\n    }\n  `)}\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j{constructor(e,t=!1,n=!1,r=null,a=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize);const o=null!=r,s=null!=i;o&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=a,this.hasPreluActivationWeights=s,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e,t;e=!1===this.transposeA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];",t=!1===this.transposeB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",r="";if(this.activation){const e=T(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        ${e}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {\n        var value = valueIn;\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      \n    var<workgroup> sumValues : array<f32, workGroupSizeX>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {\n        let dataA = mm_readA(batch, row, k);\n        let dataB = mm_readB(batch, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  \n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ${constructor(e,t,n,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],r.util.assert(e[1]<=16||t[2]<=16,(()=>"This program can be only used when A width or B Height are small")),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(2*n[1]/this.workGroupSize[1]),n[0]];const s=null!=a;s&&this.variableNames.push("bias");const u=null!=o;u&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=i,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){const n=T(this.activation,!1);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            let b = getPreluActivationWeightsByOutputCoords(outCoord);\n            ${n}\n            }`:`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            ${n}\n        }`,t="value = activation(value, outCoord);"}return`\n      ${e}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];\n        }\n        return 0.0;\n      }\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];\n         }\n         return 0.0;\n      }\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col);\n          var value = valueIn;\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, value);\n        }\n      }\n      ${function(e){const t=e[1]/2,n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${r}>;\n  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Introduces two shared memory buffers, some logical threads could handle\n  // arithmetic operations and others handle IO operations between barrier api,\n  // makes ALUs and load/store units work simultaneously, could improves\n  // the performance.\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = tileRow;\n    for (var t = 0; t < numTiles; t = t + 1) {\n      if (t == 0) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        }\n      } else {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n      if (t != 0) {\n        t = t + 1;\n      }\n\n      if (t < numTiles) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub2[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};\n    if (tileRow >= ${t} && writeCol >= 0) {\n      mm_write(writeCol, globalCol, acc, globalId);\n    }\n  }\n  `}(this.workGroupSize)}\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:i}=n,o=r.util.sizeFromShape(a.shape),s=r.util.inferFromImplicitShape(i,o),u=r.util.sizeFromShape(s);return r.util.assert(o===u,(()=>`The new shape (${s}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}const z={kernelName:r.Reshape,backendName:"webgpu",kernelFunc:M};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R({a:e,b:t,transposeA:n,transposeB:a,backend:i,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),k=r.util.sizeFromShape(b),y=r.util.sizeFromShape(g),v=r.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r.util.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const w=n?[k,h,f]:[k,f,h],I=a?[y,m,p]:[y,p,m],x=M({inputs:{x:e},backend:i,attrs:{shape:w}}),S=M({inputs:{x:t},backend:i,attrs:{shape:I}}),O=[x,S],_=Math.max(k,y),T=h%4==0&&m%4==0&&!n&&!a&&m>=32;let A;A=f*m<=32?new j([_,f,m],n,a,o,c,s):n||a||!(f<=16&&(m<=512||p>=2*m)||m<=16&&(f<=512||h>=2*f))?T?new N(w,[_,f,m],Object(r.env)().get("WEBGPU_MATMUL_WORK_PER_THREAD"),o,c,s):new E(w,[_,f,m],Object(r.env)().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,a,o,c,s):new $(w,I,[_,f,m],o,c,s);const C=[x,S];o&&C.push(o),s&&C.push(s);const z=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[h]}],R=i.runWebGPUProgram(A,C,e.dtype,z),F=M({inputs:{x:R},backend:i,attrs:{shape:v}});O.push(R);for(const e of O)i.disposeData(e.dataId);return F}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F={kernelName:r._FusedMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:o,preluActivationWeights:s}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return R({a:a,b:i,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:s,leakyreluAlpha:d,activation:l})}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${S(this.op,!1)}\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P{constructor(e,t,n,a){this.variableNames=["A","B"],this.size=!0;this.workGroupSize=[256,1,1],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=g(this.outputShape),this.lastDimensionSize=a?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=a,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){const e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);\n         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];\n         let b = getBByOutputCoords(coords);`;return`\n        fn binaryOperation(a : f32, b : f32) -> f32 {\n          ${S(this.op,!1)}\n        }\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          // Fill in the shared memory buffer. Here we need a loop to make sure\n          // that all data in A|B are uploaded when |sharedMemorySize| is larger\n          // than work group size.\n          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);\n          }\n          workgroupBarrier();\n\n          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n            let flatIndex = index * ${this.workPerThread} + i;\n            if(flatIndex < uniforms.size) {\n              let coords = getCoordsFromIndex(flatIndex);\n\n              ${t}\n              setOutputAtIndex(flatIndex, binaryOperation(a, b));\n            }\n          }\n        }\n        `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`\n      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n        ${S(this.op,this.isVec4)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOperation(a : f32, b : f32) -> f32 {\n        ${S(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L(e,t,n){if(r.util.arraysEqual(t,n)&&r.util.sizeFromShape(t)%4==0)return new D(e,t,n);const a=1===t.length&&n.length>1&&t[0]<1024,i=1===n.length&&t.length>1&&n[0]<1024;return a||i?new P(e,t,n,i):new G(e,t,n)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const U={kernelName:r.Identity,backendName:"webgpu",kernelFunc:W};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.makeTensorInfo(r.shape,"complex64"),o=n.tensorMap.get(i.dataId),s=W({inputs:{x:r},backend:n}),u=W({inputs:{x:a},backend:n});return o.complexTensorInfos={real:s,imag:u},i}const H={kernelName:r.Complex,backendName:"webgpu",kernelFunc:V};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q{constructor(e,t){this.variableNames=["A"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${_(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,s=n||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=t){const e=o.tensorMap.get(i.dataId),n=t(e.values,s);return o.makeTensorInfo(i.shape,s,n)}const u=new q(i.shape,e);return o.runWebGPUProgram(u,[i],s)}}function Y({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:a}){return({inputs:i,backend:o})=>{const{a:s,b:u}=i,c=o;if(n&&"complex64"===s.dtype){const t=c.tensorMap.get(s.dataId),n=c.tensorMap.get(u.dataId);let a,i;if(e!==v.MUL)[a,i]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,i={dataId:n.dataId,dtype:n.dtype,shape:s.shape},o={dataId:a.dataId,dtype:a.dtype,shape:u.shape},l=L(e,s.shape,u.shape);return c.runWebGPUProgram(l,[i,o],Object(r.upcastType)(n.dtype,a.dtype))}));else{const e=new B(v.COMPLEX_MULTIPLY_REAL,s.shape,u.shape),r=new B(v.COMPLEX_MULTIPLY_IMAG,s.shape,u.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u.shape}];a=c.runWebGPUProgram(e,o,"float32"),i=c.runWebGPUProgram(r,o,"float32")}const o=V({inputs:{real:a,imag:i},backend:c});return c.disposeData(a.dataId),c.disposeData(i.dataId),o}const l=a||Object(r.upcastType)(s.dtype,u.dtype);if(("string"===s.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([s,u]))&&null!=t){const e=c.tensorMap.get(s.dataId).values,n=c.tensorMap.get(u.dataId).values,a="string"===s.dtype?r.backend_util.fromUint8ToStringArray(e):e,i="string"===s.dtype?r.backend_util.fromUint8ToStringArray(n):n,[o,d]=t(s.shape,u.shape,a,i,l);return c.makeTensorInfo(d,l,o)}const d=L(e,s.shape,u.shape);return c.runWebGPUProgram(d,[s,u],l)}}var X=n(52);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Z,ceilImpl:Q,concatImpl:J,equalImpl:ee,expImpl:te,expm1Impl:ne,floorImpl:re,gatherNdImpl:ae,gatherV2Impl:ie,greaterEqualImpl:oe,greaterImpl:se,lessEqualImpl:ue,lessImpl:ce,logImpl:le,maxImpl:de,maximumImpl:he,minimumImpl:pe,multiplyImpl:fe,negImpl:me,notEqualImpl:be,prodImpl:ge,rangeImpl:ke,rsqrtImpl:ye,simpleAbsImpl:ve,sliceImpl:we,stridedSliceImpl:Ie,stringNGramsImpl:xe,subImpl:Se,tileImpl:Oe,topKImpl:_e,transposeImpl:Te,uniqueImpl:Ae}=X,Ne=K({opType:O.ABS,cpuKernelImpl:ve}),Ce={kernelName:r.Abs,backendName:"webgpu",kernelFunc:Ne},Ee=Y({opSnippet:v.ADD,cpuKernelImpl:Z,supportsComplex:!0}),je={kernelName:r.Add,backendName:"webgpu",kernelFunc:Ee};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $e{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));const t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Me={kernelName:r.AddN,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;if(1===a.length)return W({inputs:{x:a[0]},backend:n});const i=a.map((e=>e.dtype)).reduce(((e,t)=>Object(r.upcastType)(e,t))),o=a.map((e=>e.shape)),s=new $e(o);return n.runWebGPUProgram(s,a,i)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ze{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;const a=[t];r.backend_util.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,e.length),this.op="min"===n?"<":">";const[i]=r.backend_util.computeOutAndReduceShapes(e,a);this.outputShape=0===i.length?[1]:i,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){const e=e=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape[${e}]`;return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ${`\n      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;\n      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n    `}\n\n      // In order to get a flattened index into the input tensor, we need to\n      // add back the index along the reduced dimension to |outputCoords|.\n      // This function outputs the offset to the first value along\n      // |axis| and the stride to get the next value of the input along |axis|.\n      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        var i = ${this.outputShape.length-1};\n\n        var stride = 1;\n        var inputStride = 1;\n        var offset = 0;\n\n        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {\n          let length = ${e(`${this.inputShape.length} - r`)};\n          if (${this.inputShape.length} - r == uniforms.axis) {\n            inputStride = stride;\n          } else {\n            offset = offset + ${((e,t)=>1===this.outputShape.length?e:`${e}[${t}]`)("outputCoords","i")} * stride;\n            i = i - 1;\n          }\n          stride = stride * length;\n        }\n\n        return vec2<i32>(offset, inputStride);\n      }\n\n      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{\n        return coordInfo[0] + coordInfo[1] * index;\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let outputIndex = index / i32(workGroupSizeX);\n        let coordInfo = getInputCoordInfo(outputIndex);\n        let Length = ${e("uniforms.axis")};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n\n        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n            k = k + i32(workGroupSizeX)) {\n          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(Length), workGroupSizeX);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Re{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`\n      let TILE_DIM = ${this.workGroupSize[0]};\n      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(local_invocation_id) localId : vec3<u32>,\n              @builtin(workgroup_id) workgroupId : vec3<u32>) {\n        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);\n        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] =\n              A.numbers[y * width + x];\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);\n        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fe{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=o(this.outputShape.length),t=function(e){const t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);const n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`resRC[${t}]`;return n.join()}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.newDim);return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}function Be(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{perm:o}=a,s=n,u=i.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=i.shape[o[e]];if(n.shouldExecuteOnCPU([i])){const e=s.tensorMap.get(i.dataId).values,t=Te(e,i.shape,i.dtype,o,c);return n.makeTensorInfo(c,i.dtype,t)}if(2===i.shape.length&&r.util.arraysEqual(o,[1,0])){const e=new Re(i.shape,o);return s.runWebGPUProgram(e,[i],i.dtype)}const l=new Fe(i.shape,o);return s.runWebGPUProgram(l,[i],i.dtype)}const Pe={kernelName:r.Transpose,backendName:"webgpu",kernelFunc:Be};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const De={kernelName:r.ArgMax,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o}=a;let s=r.util.parseAxisParam(o,i.shape);const u=r.backend_util.getAxesPermutation(s,i.shape.length);let c=i;const l=[];null!=u&&(c=Be({inputs:{x:i},backend:n,attrs:{perm:u}}),l.push(c),s=r.backend_util.getInnerMostAxes(s.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[s[0]],c.shape.length);const d=new ze(c.shape,s[0],"max"),h=[{type:"int32",data:[s[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(d,[c],"int32",h);return l.forEach((e=>n.disposeData(e.dataId))),p}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ge={kernelName:r.ArgMin,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o}=a;let s=r.util.parseAxisParam(o,i.shape);const u=r.backend_util.getAxesPermutation(s,i.shape.length);let c=i;const l=[];null!=u&&(c=Be({inputs:{x:i},backend:n,attrs:{perm:u}}),l.push(c),s=r.backend_util.getInnerMostAxes(s.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[s[0]],c.shape.length);const d=new ze(c.shape,s[0],"min"),h=[{type:"int32",data:[s[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(d,[c],"int32",h);return l.forEach((e=>n.disposeData(e.dataId))),p}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Le{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";"avg"===this.poolType&&(t="resultValue / count");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class We{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue={kernelName:r.AvgPool,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{filterSize:o,strides:s,pad:u,dimRoundingMode:c}=a,l=r.backend_util.computePool2DInfo(i.shape,o,s,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return W({inputs:{x:i},backend:n});let d;const h=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return 1===l.filterHeight&&1===l.filterWidth?d=new We(l):(d=new Le(l,"avg"),h.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),n.runWebGPUProgram(d,[i],i.dtype,h)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ve={kernelName:r.BatchMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:o,transposeB:s}=r;return R({a:a,b:i,transposeA:o,transposeB:s,backend:n})}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class He{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${o(e.length)}; `,this.shaderKey="slice"}getUserCode(){const e=o(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return qe.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let n;n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${qe[t]} = uniforms.start[${t}] + coords.${qe[t]};`));return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          var sourceLoc : ${e};\n          let coords = getCoordsFromIndex(index);\n          ${n.join("\n")}\n          setOutputAtIndex(index, getSource(${t}));\n        }\n      }\n    `}}const qe=["x","y","z","w","u","v"];function Ke(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{begin:o,size:s}=a,[u,c]=r.slice_util.parseSliceParams(i,o,s);if(r.slice_util.assertParamsValid(i,u,c),n.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=n.tensorMap.get(i.dataId),t=we(e.values,u,c,i.shape,i.dtype);return n.makeTensorInfo(c,i.dtype,t)}if(0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,i.dtype,[]);const l=new He(u,c),d=[{type:"int32",data:u}];return n.runWebGPUProgram(l,[i],i.dtype,d)}const Ye={kernelName:r.Slice,backendName:"webgpu",kernelFunc:Ke},Xe={kernelName:r.BatchToSpaceND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockShape:o,crops:s}=a;r.util.assert(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=r.backend_util.getReshaped(i.shape,o,u),l=r.backend_util.getPermuted(c.length,o.length),d=r.backend_util.getReshapedPermuted(i.shape,o,u),h=r.backend_util.getSliceBeginCoords(s,o.length),p=r.backend_util.getSliceSize(d,s,o.length),f=[],m=M({inputs:{x:i},backend:n,attrs:{shape:c}}),b=Be({inputs:{x:m},backend:n,attrs:{perm:l}}),g=M({inputs:{x:b},backend:n,attrs:{shape:d}}),k=Ke({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach((e=>n.disposeData(e.dataId))),k}},Ze=Y({opSnippet:v.NOT_EQUAL,dtype:"bool",cpuKernelImpl:be}),Qe={kernelName:r.NotEqual,backendName:"webgpu",kernelFunc:Ze};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Je(e){const{inputs:t,backend:n}=e,{input:r}=t;return W({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}const et={kernelName:r.Real,backendName:"webgpu",kernelFunc:Je};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tt={kernelName:r.Cast,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:a,attrs:i}=t,{x:o}=n,{dtype:s}=i;if("complex64"===s){if("complex64"===o.dtype)return W({inputs:{x:o},backend:a});const t=r.zeros(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),i=V({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),i}if("complex64"===o.dtype){const t=Je({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeData(t.dataId),n}if(!r.util.hasEncodingLoss(o.dtype,s)){const e=W({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s)return function(e,t){const n=new q(e.shape,O.TO_INT),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,a);if("bool"===s){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=Ze({inputs:{a:o,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}},nt=K({opType:O.CEIL,cpuKernelImpl:Q}),rt={kernelName:r.Ceil,backendName:"webgpu",kernelFunc:nt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class at{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue : vec4<f32>;\n          for (var i = 0; i < 4; i = i + 1) {\n            if (isnan(value[i])) {\n              clampedValue[i] = value[i];\n            } else {\n              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);\n            }\n          }\n\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    "}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class it{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot={kernelName:r.ClipByValue,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{clipValueMin:o,clipValueMax:s}=a;let u;const c=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return u=r.util.sizeFromShape(i.shape)%4==0?new at(i.shape):new it(i.shape),n.runWebGPUProgram(u,[i],i.dtype,c)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class st{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32;`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);const t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ut(e){const{inputs:t,backend:n}=e,{input:r}=t;return W({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}const ct={kernelName:r.Imag,backendName:"webgpu",kernelFunc:ut};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(e,t,n){const a=e[0].dtype;if("complex64"===a){const r=e.map((e=>Je({inputs:{input:e},backend:n}))),a=e.map((e=>ut({inputs:{input:e},backend:n}))),i=lt(r,t,n),o=lt(a,t,n),s=V({inputs:{real:i,imag:o},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),a.forEach((e=>n.disposeData(e.dataId))),n.disposeData(i.dataId),n.disposeData(o.dataId),s}let i=n.shouldExecuteOnCPU(e);if("string"===a&&(i=!0),i){const i=e.map((e=>{const a=r.util.sizeFromShape(e.shape.slice(t));return M({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=i.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=r.backend_util.computeOutShape(i.map((e=>e.shape)),1),u=1===i[0].shape[0],c=J(o,s,a,u),l=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(l,a,c);return i.forEach((e=>n.disposeData(e.dataId))),d}const{tensors2D:o,outShape:s}=function(e,t,n){const a=r.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>M({inputs:{x:e},backend:n,attrs:{shape:[r.util.sizeFromShape(e.shape.slice(0,t)),r.util.sizeFromShape(e.shape.slice(t))]}}))),outShape:a}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n),u=o.map((e=>e.shape)),c=new st(u),l=[],d=new Array(u.length-1);if(d.length>0){d[0]=u[0][1],l.push({type:"int32",data:[d[0]]});for(let e=1;e<d.length;e++)d[e]=d[e-1]+u[e][1],l.push({type:"int32",data:[d[e]]})}const h=n.runWebGPUProgram(c,o,o[0].dtype,l);o.forEach((e=>n.disposeData(e.dataId)));const p=M({inputs:{x:h},backend:n,attrs:{shape:s}});return n.disposeData(h.dataId),p}function dt(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a,o=r.util.parseAxisParam(i,t[0].shape)[0],s=r.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===r.util.sizeFromShape(s))return n.makeTensorInfo(s,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return W({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));return r.backend_util.assertParamsConsistent(c,o),lt(u,o,n)}const ht={kernelName:r.Concat,backendName:"webgpu",kernelFunc:dt};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pt{constructor(e,t){this.variableNames=["A"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;\n      inChannels : i32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n      for(var i = 0; i<${this.workPerThread}; i = i + 1) {\n        let flatIndex = index * ${this.workPerThread} + i;\n\n        let rc = getCoordsFromIndex(flatIndex);\n\n        if(flatIndex < uniforms.size) {\n          let blockIndex = rc[0];\n          let pos = rc[1];\n\n          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];\n          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;\n          var value = 0.0;\n          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {\n            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -\n              uniforms.pad[0];\n            let d1 = offsetX + uniforms.dilation[0] * ((pos %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n            let ch = pos % uniforms.inChannels;\n            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {\n              value = getA(d0, d1, ch);\n            }\n          }\n          setOutputAtIndex(flatIndex, value);\n        }\n      }\n    }\n  `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ft{constructor(e,t=!1,n=null,a=!1,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;\n      dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},1===this.outputShape[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,this.hasLeakyreluAlpha=i,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=1===this.outputShape[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){const e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],a=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[p(e,[n,a]),p(t,[a,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);\n    let divBy4Remainder${e} = flatIndex${e} % 4;\n    let divBy4Index${e} = flatIndex${e} / 4;\n    let curData${e} = x.numbers[divBy4Index${e}];\n    if (divBy4Remainder${e} == 0) {\n      temp = curData${e};\n    } else {\n      // TODO: This could end up being a redundant load with another one in\n      // the same shader invocation. Perhaps there's an opportunity for\n      // optimization\n      let nextData${e} = x.numbers[divBy4Index${e} + 1];\n      if (divBy4Remainder${e} == 1) {\n        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);\n      } else if (divBy4Remainder${e} == 2) {\n        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);\n      } else if (divBy4Remainder${e} == 3) {\n        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);\n      }\n    }\n    `}getUserCode(){const e=A(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];\n        let outCol = r % uniforms.outShape[2];\n        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);\n        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];\n        let inChCoord = c % uniforms.xShape[3];\n        var coord = vec4<i32>(\n            batch,\n            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n            inChCoord);\n        var resData = vec4<f32>(0.0);\n        ${0===this.convInfo.inChannels%4?"// The bounds checking is always needed since we use it to pad zero for\n          // the 'same' padding type.\n          if (coordsInBounds4D(coord, uniforms.xShape)) {\n            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];\n          } else {\n            resData = vec4<f32>(0.0); }":`var temp = vec4<f32>(0.0);\n          ${this.getSampleAWithRemainder(1)}\n          resData = temp;\n          if (WCol == (uniforms.filterDims[1] - 1)) {\n            coord = vec4<i32>(\n              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);\n              ${this.getSampleAWithRemainder(2)}\n            if (inChCoord == 0) {\n              resData = vec4<f32>(resData.xyz, temp.x);\n            } else if (inChCoord == 1) {\n              resData = vec4<f32>(resData.xy, temp.xy);\n            } else {\n              resData = vec4<f32>(resData.x, temp.xyz);\n            }\n          }\n          `}\n        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {\n          ${t}\n         }\n         return vec4<f32>(0.0);\n        `,r=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W.numbers[row * uniforms.dimBOuter / 4 + col];\n         }\n         return vec4<f32>(0.0);\n        ";let a="",i="";if(this.activation){const e=T(this.activation,this.isVec4);if(this.hasPreluActivationWeights)a=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${e}\n        }`;else{if(this.hasLeakyreluAlpha)throw a=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {\n          let b = getLeakyreluAlphaByOutputCoords(outCoord);\n          ${e}\n        }`,new Error("Leakyrelu is not supported.");a=`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          ${e}\n        }`}i="value = activation(value, outCoord);"}return`\n        ${a}\n        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          let r = row;\n          let c = col * 4;\n          var batch = i32(globalId.z);\n          ${n}\n        }\n\n        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          ${r}\n        }\n\n        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {\n          var batch = i32(globalId.z);\n          var value = valueInput;\n          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)\n          {\n            let outCoord = vec4<i32>(\n              batch,\n              row / uniforms.outShape[2],\n              row % uniforms.outShape[2],\n              col * 4);\n            ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n            ${i}\n            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],\n              value);\n          }\n        }\n        ${e}\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mt{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=m(this.dispatchLayout,this.outputShape),this.elementsPerThread=b(this.dispatchLayout,this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){const e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;r.util.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));const a=[e,n],i=[n,t],o=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[p(a,[o,u]),p(i,[u,s])]}getUserCode(){const e=C(this.elementsPerThread,this.workGroupSize),t="\n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);\n    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];\n    let coord = vec4<i32>(\n        batch,\n        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n        col % uniforms.xShape[3]);\n    // The bounds checking is always needed since we use it to pad zero for the\n    // 'same' padding type.\n    if(coordsInBounds4D(coord, uniforms.xShape)) {\n      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;",n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${t}\n    }\n    return 0.0;\n    `,r=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W.numbers[row * uniforms.dimBOuter + col];\n\t }\n\t return 0.0;\n\t ";let a="",i="";if(this.activation){const e=T(this.activation,!1);a=this.hasPreluActivationWeights?`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n                    ${e}\n                  }\n                `,i="value = activation(value, outCoord);"}return`\n    ${a}\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      ${n}\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      ${r}\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n      ${i}\n      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n    ${e}\n  `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bt{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){const n=T(this.activation);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${n}\n             }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n                    ${n}\n                  }\n                `,t="value = activation(value, outCoord);"}return`\n      ${e}\n      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if(coordsInBounds4D(coord, uniforms.xShape)) {\n          return getX(batch, row, col, chan);\n        }\n        return 0.0;\n      }\n\n      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n        let coord = vec4<i32>(row, col, xChannel, outChannel);\n        if(coordsInBounds4D(coord, uniforms.wShape)) {\n          return getW(row, col, xChannel, outChannel);\n        }\n        return 0.0;\n      }\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let outChannel = coords[3];\n\n        var acc = 0.0;\n\n        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {\n              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n              let v = readInp(batch, coordRow, coordCol, xChannel);\n              let f = readFilt(row, col, xChannel, outChannel);\n              acc = acc + v * f;\n            }\n          }\n        }\n\n        writeResult(batch, coords[1], coords[2], outChannel, acc);\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gt({x:e,filter:t,convInfo:n,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:s=0,activation:u=null}){const c=null!=i,l=null!=o;let d;if(n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return function({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:s=null}){const u=e.shape,c="channelsLast"===n.dataFormat;let l,d;if(n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){const a=n.inHeight*n.inWidth*n.inChannels;l=M({inputs:{x:e},backend:r,attrs:{shape:[1,n.batchSize,a]}}),d=M({inputs:{x:t},backend:r,attrs:{shape:[1,a,n.outChannels]}})}else l=M({inputs:{x:e},backend:r,attrs:{shape:[1,c?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),d=M({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});const h=R({a:l,b:d,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:s,preluActivationWeights:i,leakyreluAlpha:o}),p=M({inputs:{x:h},backend:r,attrs:{shape:n.outShape}});return r.disposeData(l.dataId),r.disposeData(d.dataId),r.disposeData(h.dataId),p}({x:e,filter:t,convInfo:n,backend:a,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:s});if(Object(r.env)().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&1===e.shape[0])return function({x:e,filter:t,convInfo:n,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:s=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,strideWidth:h,strideHeight:p,padInfo:f,outWidth:m,outHeight:b,dilationWidth:g,dilationHeight:k,dataFormat:y}=n,v="channelsLast"===y,w=c*l*d,I=b*m,x=[I,w],S=[],O=M({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),_=M({inputs:{x:t},backend:a,attrs:{shape:[1,w,-1]}});S.push(O),S.push(_);const T=new pt(x,v),A=[{type:"int32",data:[f.left,f.top]},{type:"int32",data:[h,p]},{type:"int32",data:[g,k]},{type:"int32",data:[m]},{type:"int32",data:[d*c]},{type:"int32",data:[d]}],N=a.runWebGPUProgram(T,[O],O.dtype,A),C=M({inputs:{x:N},backend:a,attrs:{shape:[1,x[0],x[1]]}});S.push(N),S.push(C);const j=[1,x[0],x[1]],$=new E(j,[1,I,n.outChannels],Object(r.env)().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!1,!1,i,u,o),z=j[2],R=[{type:"int32",data:[j[1]]},{type:"int32",data:[n.outChannels]},{type:"int32",data:[z]}],F=[C,_];i&&F.push(i),o&&F.push(o);const B=a.runWebGPUProgram($,F,C.dtype,R),P=M({inputs:{x:B},backend:a,attrs:{shape:v?[1,b,m,n.outChannels]:[1,n.outChannels,b,m]}});S.push(B);for(const e of S)a.disposeData(e.dataId);return P}({x:e,filter:t,convInfo:n,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:s,activation:u});const h=Object(r.env)().getBool("WEBGPU_USE_NAIVE_CONV2D"),p=(n.inChannels%4==0||3===n.inChannels&&"VALID"===n.padInfo.type)&&n.outChannels%4==0&&n.outChannels>=32,f=[n.padInfo.top,n.padInfo.left],m=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(h)d=new bt(n,c,u,l);else{d=p?new ft(n,c,u,l):new mt(n,c,u,l);const e=n.outShape[1]*n.outShape[2],t=n.outShape[3],r=n.filterHeight*n.filterWidth*n.inShape[3];m.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[r]})}const b=[e,t];return c&&b.push(i),l&&b.push(o),a.runWebGPUProgram(d,b,e.dtype,m)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kt={kernelName:r.Conv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:i,filter:o}=t,{strides:s,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=n,h=r.backend_util.convertConv2DDataFormat(c);return gt({x:i,filter:o,convInfo:r.backend_util.computeConv2DInfo(i.shape,o.shape,s,l,u,d,!1,h),backend:a})}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yt{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=m(this.dispatchLayout,this.outputShape),this.elementsPerThread=b(this.dispatchLayout,this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      \n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n      return 0.0;\n    }\n    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n      return 0.0;\n    }\n    let coord = vec4<i32>(\n        batch,\n        i32(xR),\n        i32(xC),\n        col % uniforms.outBackprop[3]);\n    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      let coordX = uniforms.filterDims.x - 1 -\n          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let coordY = uniforms.filterDims.y - 1 -\n          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n          coordX >= 0 && coordY >= 0) {\n        let coord = vec4<i32>(coordX, coordY, col,\n            row % uniforms.outBackprop[3]);\n        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];\n      }\n      return 0.0;\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n\n    ${C(this.elementsPerThread,this.workGroupSize)}\n  `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vt{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${this.isChannelsLast?3:1}];\n\n        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = dyR;\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = dyC;\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wt={kernelName:r.Conv2DBackpropInput,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:i,filter:o}=t,{inputShape:s,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(s,o.shape,u,1,c,d,!1,h),f=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let m;if(Object(r.env)().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))m=new vt(p);else{m=new yt(p);const e=p.inShape[1]*p.inShape[2],t=p.inShape[3],n=p.filterHeight*p.filterWidth*p.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(m,[i,o],"float32",f)}},It=K({opType:O.COS}),xt={kernelName:r.Cos,backendName:"webgpu",kernelFunc:It},St=K({opType:O.COSH}),Ot={kernelName:r.Cosh,backendName:"webgpu",kernelFunc:St};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _t{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;const[a]=t;this.outputShape=[a,n[0],n[1],e],this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,o,s]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${i});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${o};\n        let in_y = ${a};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${s};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tt={kernelName:r.CropAndResize,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:s,method:u,extrapolationValue:c}=r,l=new _t(a.shape[3],i.shape,s,u),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(l,[a,i,o],"float32",d)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class At{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt={kernelName:r.DepthToSpace,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:o}=r,s=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*i,c=("NHWC"===o?a.shape[2]:a.shape[3])*i,l=("NHWC"===o?a.shape[3]:a.shape[1])/(i*i),d=[{type:"int32",data:[i]}],h=new At("NHWC"===o?[s,u,c,l]:[s,l,u,c],o);return n.runWebGPUProgram(h,[a],a.dtype,d)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ct{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){const n=T(this.activation,this.isVec4);e=this.hasPreluActivation?`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n            ${n}\n          }\n        `,t="dotProd[i] = activation(dotProd[i], coords);"}return`\n      ${e}\n\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {\n        let batch = 0;\n        let r = i32(globalId.x);\n        let c = i32(globalId.y) * 4;\n        let d2 = i32(globalId.z) * 4;\n        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;\n        let d1 = d2;\n        let q = 0;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n\n        var wVals : array<vec4<f32>, 9>;\n        wVals[0] = getW(0, 0, d1, q);\n        wVals[1] = getW(0, 1, d1, q);\n        wVals[2] = getW(0, 2, d1, q);\n        wVals[3] = getW(1, 0, d1, q);\n        wVals[4] = getW(1, 1, d1, q);\n        wVals[5] = getW(1, 2, d1, q);\n        wVals[6] = getW(2, 0, d1, q);\n        wVals[7] = getW(2, 1, d1, q);\n        wVals[8] = getW(2, 2, d1, q);\n\n        var xVals : array<array<vec4<f32>, 6>, 3>;\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          let xR = xRCorner + wR * uniforms.dilation[0];\n          for (var wC = 0; wC < 6; wC = wC + 1) {\n            let xC = xCCorner + wC * uniforms.dilation[1];\n            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {\n              xVals[wR][wC] = vec4<f32>(0.0);\n            } else {\n              xVals[wR][wC] = getX(batch, xR, xC, d1);\n            }\n          }\n        }\n\n        var dotProd : array<vec4<f32>, 4>;\n        dotProd[0] = vec4<f32>(0.0);\n        dotProd[1] = vec4<f32>(0.0);\n        dotProd[2] = vec4<f32>(0.0);\n        dotProd[3] = vec4<f32>(0.0);\n\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          for (var wC = 0; wC < 3; wC = wC + 1) {\n            let indexW = wR * 3 + wC;\n            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];\n            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];\n            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];\n            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];\n          }\n        }\n\n        for (var i = 0; i < 4; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d2);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            ${this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":""}\n            ${t}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Et{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;\n      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;\n      channelMul : i32;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),r.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){const n=T(this.activation,!1);e=this.hasPreluActivation?`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n            ${n}\n          }\n        `,t="dotProd = activation(dotProd, coords);"}return`\n      ${e}\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,\n          value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n        let d2 = coords[3];\n        let d1 = d2 / uniforms.channelMul;\n        let q = d2 - d1 * uniforms.channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n        let inputRowEnd = inputRowStart + uniforms.filterHeight *\n            uniforms.dilation[0];\n        let inputColEnd = inputColStart + uniforms.filterWidth *\n            uniforms.dilation[1];\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n\n        // Extract if checking out of for loop for performance.\n        if (inputRowStart >= 0 && inputColStart >= 0 &&\n          inputRowEnd < uniforms.inDims[0] &&\n              inputColEnd < uniforms.inDims[1]) {\n            // Here using a constant value |this.convInfo.filterHeight| instead\n            // of uniform value is in order to loop unrolling.\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          } else {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              if (xR < 0 || xR >= uniforms.inDims[0]) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                if (xC < 0 || xC >= uniforms.inDims[1]) {\n                  continue;\n                }\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          }\n\n        ${this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":""}\n        ${t}\n        writeResult(batch, coords[1], coords[2], d2, dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jt={kernelName:r.DepthwiseConv2dNative,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:o}=t,{strides:s,pad:u,dilations:c,dimRoundingMode:l}=a;let d=c;null==d&&(d=[1,1]);const h=r.backend_util.computeConv2DInfo(i.shape,o.shape,s,d,u,l,!0),p=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]}];let f;return 1===h.batchSize&&h.inHeight===h.outHeight&&h.inWidth===h.outWidth&&1===h.strideHeight&&1===h.strideWidth&&h.filterHeight===h.filterWidth&&h.inChannels===h.outChannels&&3===h.filterHeight&&h.inChannels%4==0?f=new Ct(h):(f=new Et(h),p.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.outChannels/h.inChannels]})),n.runWebGPUProgram(f,[i,o],i.dtype,p)}},$t=Y({opSnippet:v.MUL,cpuKernelImpl:fe,supportsComplex:!0}),Mt={kernelName:r.Multiply,backendName:"webgpu",kernelFunc:$t};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zt{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[n]=r.backend_util.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");const n="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ${`\n         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n       `}\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         let outputIndex = index / i32(workGroupSizeX);\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + i32(workGroupSizeX)) {\n           let candidate = f32(x.numbers[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), workGroupSizeX);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${n}\n        }\n       }\n     `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(e,t,n,a,i){const o=e.shape.length,s=[],u=r.util.parseAxisParam(t,e.shape);let c=u;const l=r.backend_util.getAxesPermutation(c,o);let d=e;null!=l&&(d=Be({inputs:{x:e},attrs:{perm:l},backend:i}),c=r.backend_util.getInnerMostAxes(c.length,o),s.push(d)),r.backend_util.assertAxesAreInnerMostDims(a,c,o);const[h,p]=r.backend_util.computeOutAndReduceShapes(d.shape,c);let f,m=h;if(n&&(m=r.backend_util.expandShapeToKeepDim(h,u)),"max"!==a&&"prod"!==a||!i.shouldExecuteOnCPU([d])){const t=r.util.sizeFromShape(p),n={windowSize:t,inSize:t,batchSize:r.util.sizeFromShape(d.shape)/t,outSize:1},o="mean"===a?"float32":Object(r.sumOutType)(e.dtype),u=[{type:"int32",data:[t]}],c=new zt(n,a),l=i.runWebGPUProgram(c,[d],o,u);s.push(l),f=M({inputs:{x:l},attrs:{shape:m},backend:i})}else{const t=i.tensorMap.get(d.dataId).values;switch(a){case"max":const n=de(t,r.util.sizeFromShape(p),m,e.dtype);f=i.makeTensorInfo(m,e.dtype,n);break;case"prod":const{outVals:o,outShape:s,outDtype:u}=ge(d.shape,d.dtype,t,c);f=i.makeTensorInfo(s,u,o);break;default:throw new Error(`${a} CPU implementation is not yet supported.`)}}return s.forEach((e=>i.disposeData(e.dataId))),f}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;return Rt(a,i,o,"sum",n)}const Bt={kernelName:r.Sum,backendName:"webgpu",kernelFunc:Ft};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pt={kernelName:r.Einsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:i}=a,o=t,{allDims:s,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(i,o.length);r.backend_util.checkEinsumDimSizes(s.length,c,o);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),h=d.length;let p=null,f=s.length;const m=[];for(let e=0;e<h;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let i;r.backend_util.isIdentityPermutation(e)?i=o[t]:(i=Be({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(i));const s=i.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);r.util.arraysEqual(i.shape,s)||(i=M({inputs:{x:i},backend:n,attrs:{shape:s}}),m.push(i)),null===p?p=i:(p=$t({inputs:{a:i,b:p},backend:n}),m.push(p))}e<h-1&&(l[e]>=0&&(p=Ft({inputs:{x:p},backend:n,attrs:{axis:l[e]-(s.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeData(e.dataId);return p}},Dt=K({opType:O.ELU}),Gt={kernelName:r.Elu,backendName:"webgpu",kernelFunc:Dt},Lt=Y({opSnippet:v.EQUAL,dtype:"bool",cpuKernelImpl:ee}),Wt={kernelName:r.Equal,backendName:"webgpu",kernelFunc:Lt},Ut=K({opType:O.EXP,cpuKernelImpl:te,dtype:"float32"}),Vt={kernelName:r.Exp,backendName:"webgpu",kernelFunc:Ut};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ht(e){const{inputs:t,attrs:n,backend:a}=e,{dim:i}=n,{input:o}=t,s=o.shape.length,u=o.shape.slice();let c=i;return i<0&&(r.util.assert(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),c=s+i+1),u.splice(c,0,1),M({inputs:{x:o},backend:a,attrs:{shape:u}})}const qt={kernelName:r.ExpandDims,backendName:"webgpu",kernelFunc:Ht},Kt=K({opType:O.EXPM1,cpuKernelImpl:ne}),Yt={kernelName:r.Expm1,backendName:"webgpu",kernelFunc:Kt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xt{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return"\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(e){const{backend:t,attrs:n}=e,{shape:a,value:i}=n;let{dtype:o}=n;if(o=o||r.util.inferDtype(i),"string"===o){const e=r.util.getArrayFromDType(o,r.util.sizeFromShape(a));return e.fill(i),t.makeTensorInfo(a,o,e)}{const e=new Xt(a),n=[{type:"float32",data:[i]}];return t.runWebGPUProgram(e,[],o,n)}}const Qt={kernelName:r.Fill,backendName:"webgpu",kernelFunc:Zt};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jt{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const en={kernelName:r.FlipLeftRight,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Jt(n.shape);return r.runWebGPUProgram(a,[n],n.dtype)}},tn=K({opType:O.FLOOR,cpuKernelImpl:re}),nn={kernelName:r.Floor,backendName:"webgpu",kernelFunc:tn},rn=Y({opSnippet:v.INT_DIV,dtype:"int32"}),an={kernelName:r.FloorDiv,backendName:"webgpu",kernelFunc:rn},on=(e,t,n,r,a,i=!1)=>{const o=u(r,{dtype:a.dtype,shape:a.shape},t,i),s=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:s,entryPoint:"main"},label:t.constructor.name})};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(e,t,n,r="",a=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map((e=>e.length)).join(",")+n.join(",")+e.variableNames.join(",")+r+a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(e){const{externalImage:t,backend:n,attrs:a,outShape:i,useImport:o}=e,{numChannels:s}=a,u=r.util.sizeFromShape(i),c=r.util.computeStrides(i),l=n.makeTensorInfo(i,"int32"),d=n.getFromPixelsProgram(o?"import":"copyExternal");d.updateOutputShape(i);const h=[l.shape],p=[l.dtype,o?"import":"copyExternal"],f=sn(d,h,p),m=d.getLayout(n.device),b=n.getAndSavePipeline(f,(()=>on(n.device,d,m.pipelineLayout,[],l,!0)));d.setPipeline(b),o||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:d.makeInputTexture(n.device,i[1],i[0])},[i[1],i[0]]);const g=n.tensorMap.get(l.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);const k=[u,s,...c,...d.dispatch];let y;if(d.setUniform(n.device,k),o){const e={source:t};y=n.device.importExternalTexture(e)}else y=d.inputTexture.createView();return n.runFromPixelsProgram(d,g.bufferInfo.buffer,m,y,l.dataId),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cn={kernelName:r.FromPixels,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:i}=t;const{numChannels:o}=a;if(null==i)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const s="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,u=null!=i.colorSpace,c="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&i instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&i instanceof OffscreenCanvas,d="undefined"!=typeof ImageBitmap&&i instanceof ImageBitmap,[h,p]=u?[i.codedWidth,i.codedHeight]:s?[i.videoWidth,i.videoHeight]:[i.width,i.height],f=[p,h,o];if(Object(r.env)().getBool("WEBGPU_USE_IMPORT")&&(s||u))return un({externalImage:i,backend:n,attrs:a,outShape:f,useImport:!0});(s||c)&&(null==ln&&(ln=document.createElement("canvas").getContext("2d")),ln.canvas.width=h,ln.canvas.height=p,ln.drawImage(i,0,0,h,p),i=ln.canvas);if(d||l||s||c)return un({externalImage:i,backend:n,attrs:a,outShape:f,useImport:!1});const m=i.data;let b=m;if(null!=o&&4!==o){b=new Uint8Array(i.width*i.height*o);const e=m.length;let t=0;for(let n=0;n<e;n++)n%4<o&&(b[t++]=m[n])}const g=n.makeTensorInfo(f,"int32");return n.tensorMap.get(g.dataId).values=new Int32Array(b),n.maybeReleaseBuffer(g.dataId),n.uploadToGPU(g.dataId),g}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let ln;class dn{constructor(e,t,n,a,i){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=i&&(r.backend_util.assertAndGetBroadcastShape(e,i),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";null!=this.scaleShape&&(t="getScaleByOutputIndex(index)");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hn={kernelName:r.FusedBatchNorm,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r,scale:a,offset:i,mean:o,variance:s}=e,{varianceEpsilon:u}=t,c=n,l=[r,o,s];let d=null;null!=i&&(d=i.shape,l.push(i));let h=null;null!=a&&(h=a.shape,l.push(a));const p=new dn(r.shape,o.shape,s.shape,d,h),f=[{type:"float32",data:[u]}];return c.runWebGPUProgram(p,l,r.dtype,f)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:r.FusedConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:o,bias:s,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d);return gt({x:i,filter:o,convInfo:r.backend_util.computeConv2DInfo(i.shape,o.shape,c,h,l,p,!1,b),backend:n,bias:s,preluActivationWeights:u,leakyreluAlpha:m,activation:f})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn={kernelName:r.FusedDepthwiseConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,filter:o,bias:s,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p}=a;let f=d;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${f}'`));const m=r.backend_util.computeConv2DInfo(i.shape,o.shape,c,f,l,h,!0),b=[i,o],g=null!=s,k=null!=u;g&&b.push(s),k&&b.push(u);const y=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return 1===m.batchSize&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&1===m.strideHeight&&1===m.strideWidth&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&3===m.filterHeight&&m.inChannels%4==0?v=new Ct(m,g,p,k):(v=new Et(m,g,p,k),y.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),n.runWebGPUProgram(v,b,"float32",y)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mn{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${o(e)};`}getUserCode(){let e;e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides";return`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn={kernelName:r.GatherNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:i}=t,o=i.shape,s=o[o.length-1],u=r.util.sizeFromShape(a.shape),[c,l,d,h]=r.backend_util.prepareAndValidate(a,i),p=M({inputs:{x:i},backend:n,attrs:{shape:[l,s]}}),f=M({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.readSync(i.dataId),t=n.bufferSync(a),r=ae(e,t,a.dtype,l,s,d,h,a.shape,u);return n.makeTensorInfo(c,a.dtype,r.values)}const m=new mn(s,[l,d]),b=[{type:"int32",data:[s]},{type:"int32",data:h}],g=n.runWebGPUProgram(m,[f,p],f.dtype,b),k=M({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(g.dataId),k}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gn{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${function(e,t="int"){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push(`${t}(getIndices(resRC.x, resRC.z))`):r.push(`${n[a]}`);return r.join()}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.aShape,"i32")}));\n        }\n      }\n    `}}function kn(e){const{inputs:t,backend:n,attrs:a}=e,{x:i,indices:o}=t,{axis:s,batchDims:u}=a,c=r.util.parseAxisParam(s,i.shape)[0],l=r.backend_util.segment_util.collectGatherOpShapeInfo(i,o,c,u),d=r.util.sizeFromShape(o.shape),h=[],p=M({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=M({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([i,o])){const e=n.tensorMap.get(f.dataId).values,t=Object(r.buffer)(f.shape,f.dtype,e),a=n.tensorMap.get(p.dataId).values,i=Object(r.buffer)(p.shape,p.dtype,a),o=ie(i,t,m);return h.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(l.outputShape,o.dtype,o.values)}const b=new gn(p.shape,m),g=n.runWebGPUProgram(b,[p,f],p.dtype);h.push(g);const k=M({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeData(e.dataId))),k}const yn={kernelName:r.GatherV2,backendName:"webgpu",kernelFunc:kn},vn=Y({opSnippet:v.GREATER,cpuKernelImpl:se,dtype:"bool"}),wn={kernelName:r.Greater,backendName:"webgpu",kernelFunc:vn},In=Y({opSnippet:v.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:oe}),xn={kernelName:r.GreaterEqual,backendName:"webgpu",kernelFunc:In};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn={kernelName:r.LeakyRelu,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,o=[{type:"float32",data:[i]}],s=new q(a.shape,O.LEAKYRELU);return s.uniforms="alpha : f32;",n.runWebGPUProgram(s,[a],"float32",o)}},On=Y({opSnippet:v.LESS,dtype:"bool",cpuKernelImpl:ce}),_n={kernelName:r.Less,backendName:"webgpu",kernelFunc:On},Tn=Y({opSnippet:v.LESS_EQUAL,dtype:"bool",cpuKernelImpl:ue}),An={kernelName:r.LessEqual,backendName:"webgpu",kernelFunc:Tn},Nn=K({opType:O.LOG,cpuKernelImpl:le}),Cn={kernelName:r.Log,backendName:"webgpu",kernelFunc:Nn},En=Y({opSnippet:v.LOGICAL_AND,dtype:"bool"}),jn={kernelName:r.LogicalAnd,backendName:"webgpu",kernelFunc:En},$n=K({opType:O.LOGICAL_NOT}),Mn={kernelName:r.LogicalNot,backendName:"webgpu",kernelFunc:$n};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=r;return Rt(a,i,o,"max",n)}const Rn={kernelName:r.Max,backendName:"webgpu",kernelFunc:zn},Fn=Y({opSnippet:v.MAX,cpuKernelImpl:he}),Bn={kernelName:r.Maximum,backendName:"webgpu",kernelFunc:Fn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn={kernelName:r.MaxPool,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{filterSize:o,strides:s,pad:u,dimRoundingMode:c}=a,l=r.backend_util.computePool2DInfo(i.shape,o,s,1,u,c);let d;const h=[];if(1===l.filterHeight&&1===l.filterWidth){if(r.util.arraysEqual(l.inShape,l.outShape))return W({inputs:{x:i},backend:n});d=new We(l),h.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else d=new Le(l,"max"),h.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return n.runWebGPUProgram(d,[i],i.dtype,h)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn={kernelName:r.Mean,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{keepDims:i,axis:o}=r;return Rt(a,o,i,"mean",n)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gn={kernelName:r.Min,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;return Rt(a,i,o,"min",n)}},Ln=Y({opSnippet:v.MIN,cpuKernelImpl:pe}),Wn={kernelName:r.Minimum,backendName:"webgpu",kernelFunc:Ln};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Un{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>;`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",a=1===e?"end":"end[i]",i=1===e?"outC":"outC[i]",s=o(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${s}(${t});\n          let end = ${s}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${i} < ${r}) {\n              ${i} = ${r} * 2 - ${i} - ${this.offset};\n            } else if(${i} >= ${a}) {\n              ${i} = (${a} - 1) * 2 - ${i} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${u}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vn={kernelName:r.MirrorPad,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{paddings:a,mode:i}=t,o=n,s=a.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new Un(r.shape,a,i);return o.runWebGPUProgram(u,[r],r.dtype,s)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hn={kernelName:r.Neg,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.tensorMap.get(r.dataId),[t,a]=me(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}const a=new q(r.shape,O.NEG);return n.runWebGPUProgram(a,[r],r.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qn={kernelName:r.NonMaxSuppressionV3,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:c}=a,l=n.readSync(i.dataId),d=n.readSync(o.dataId),{selectedIndices:h}=r.kernel_impls.nonMaxSuppressionV3Impl(l,d,s,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn={kernelName:r.NonMaxSuppressionV5,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=a,d=n.readSync(i.dataId),h=n.readSync(o.dataId),p=s,f=u,m=c,b=l,{selectedIndices:g,selectedScores:k}=r.kernel_impls.nonMaxSuppressionV5Impl(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([k.length],"float32",new Float32Array(k))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Je({inputs:{input:r},backend:n}),t=Yn({inputs:{x:e},backend:n}),a=ut({inputs:{input:r},backend:n}),i=Yn({inputs:{x:a},backend:n}),o=V({inputs:{real:t,imag:i},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),o}return Zt({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Xn={kernelName:r.ZerosLike,backendName:"webgpu",kernelFunc:Yn};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.OnesLike,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Je({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=ut({inputs:{input:a},backend:r}),o=Yn({inputs:{x:i},backend:r}),s=V({inputs:{real:n,imag:o},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(i.dataId),r.disposeData(o.dataId),s}return Zt({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.Pack,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a;if(1===t.length)return Ht({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=dt({inputs:t.map((e=>{const t=Ht({inputs:{input:e},backend:n,attrs:{dim:i}});return u.push(t),t})),backend:n,attrs:{axis:i}});return u.forEach((e=>n.disposeData(e.dataId))),c}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jn{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>;`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){const e=this.xShape.length,t=o(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(",");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${e>1?`${t}(${n})`:`${n}`};\n          let end = ${e>1?`${t}(${r})`:`${r}`};\n          let outC = getCoordsFromIndex(index);\n\n          if (${e>1?"any(outC < start)":"outC < start"} || ${e>1?"any(outC >= end)":"outC >= end"}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords"}));\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{paddings:o,constantValue:s}=a;if(o.every((e=>r.util.arraysEqual(e,[0,0]))))return W({inputs:{x:i},backend:n});if(0===r.util.sizeFromShape(i.shape)){return Zt({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+i.shape[t]+e[1])),value:s,dtype:i.dtype}})}const u=[{type:"float32",data:[s]}];o.map((e=>u.push({type:"int32",data:[e[0],e[1]]})));const c=new Jn(i.shape,o);return n.runWebGPUProgram(c,[i],i.dtype,u)},tr={kernelName:r.PadV2,backendName:"webgpu",kernelFunc:er},nr=Y({opSnippet:v.POW}),rr={kernelName:r.Pow,backendName:"webgpu",kernelFunc:nr};const ar={kernelName:r.Prelu,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=new G(v.PRELU,r.shape,a.shape);return n.runWebGPUProgram(i,[r,a],"float32")}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir={kernelName:r.Prod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;return Rt(a,i,o,"prod",n)}},or={kernelName:r.Range,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:i,dtype:o}=n,s=ke(r,a,i,o);return t.makeTensorInfo([s.length],o,s)}},sr=Y({opSnippet:v.DIV}),ur={kernelName:r.RealDiv,backendName:"webgpu",kernelFunc:sr},cr=K({opType:O.RELU}),lr={kernelName:r.Relu,backendName:"webgpu",kernelFunc:cr},dr=K({opType:O.RELU6}),hr={kernelName:r.Relu6,backendName:"webgpu",kernelFunc:dr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pr{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr={kernelName:r.ResizeBilinear,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,size:o,halfPixelCenters:s}=r,[u,c]=o,l=[{type:"float32",data:[i&&u>1?1:0,i&&c>1?1:0]},{type:"float32",data:[s?.5:0]}],d=new pr(a.shape,u,c);return n.runWebGPUProgram(d,[a],"float32",l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mr{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC";return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const br={kernelName:r.ResizeNearestNeighbor,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:s}=r,[u,c]=s,l=[{type:"float32",data:[i&&u>1?1:0,i&&c>1?1:0]},{type:"float32",data:[i?.5:0]}],d=new mr(a.shape,u,c,o);return n.runWebGPUProgram(d,[a],a.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gr{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="centerX : f32; centerY : f32; sinRadians : f32;\n          cosRadians : f32;",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr={kernelName:r.RotateWithOffset,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:i,fillValue:o,center:s}=t,u=n,c=new gr(a.shape,o),[l,d]=r.backend_util.getImageCenter(s,a.shape[1],a.shape[2]),h=[{type:"float32",data:[l]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(i)]},{type:"float32",data:[Math.cos(i)]}];"number"==typeof o?h.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):h.push({type:"float32",data:o});return u.runWebGPUProgram(c,[a],a.dtype,h)}},yr=K({opType:O.RSQRT,cpuKernelImpl:ye}),vr={kernelName:r.Rsqrt,backendName:"webgpu",kernelFunc:yr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wr{constructor(e,t,n,r,a,i,s){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=s,this.dispatchLayout=g(e),this.dispatch=f(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${s}`;const u=o(a.length);this.uniforms=`sliceDim : i32; strides: ${u}; size: i32;`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",a="",i="";1===this.updatesRank?(r="coords[0]",a="flattenedIndex",i="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.updatesRank&&(r="coords[0], coords[1]",a="vec2<i32>(flattenedIndex, coords[1])",i="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        let d0 = index / uniforms.updatesShape[1];\n        let d1 = index - d0 * uniforms.updatesShape[1];\n        return vec2<i32>(d0, d1);\n      }\n      ");return`\n    ${i}\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        if (index < uniforms.size) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue = ${`getUpdates(${r})`};\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n         ${"int32"===this.type?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":"\n     var assumed = atomicLoad(&(result.numbers[flatIndex]));\n     var success = 0;\n     for (; success == 0;) {\n       let new = bitcast<f32>(assumed) + updateValue;\n       let newI32 = bitcast<i32>(new);\n       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);\n       assumed = resValue[0];\n       success = resValue[1];\n     }\n     "}\n        }\n      }`}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir={kernelName:r.ScatterNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:i,updates:o}=t,{shape:s}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(o,i,s),p=[h/l,l];if(0===h)return n.makeTensorInfo(s,i.dtype);const f=M({inputs:{x:i},backend:n,attrs:{shape:[c,u]}}),m=M({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),b=m.dtype,g=Zt({backend:n,attrs:{shape:p,value:0,dtype:b}}),k=[{type:"int32",data:[u]},{type:"int32",data:d},{type:"int32",data:[r.util.sizeFromShape(m.shape)]}],y=new wr(m.shape,u,f.shape.length,m.shape.length,d,p,b),v=n.runWebGPUProgram(y,[m,f],b,k,g),w=M({inputs:{x:v},backend:n,attrs:{shape:s}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(v.dataId),w}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xr{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let e=0;e<this.outputShape.length;e++)a.push(`${n[e]}`),e<this.cRank&&r.push(`${n[e]}`);e=r.join(),t=a.join()}return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr={kernelName:r.Select,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:i,e:o}=t,s=new xr(a.shape.length,i.shape,i.shape.length);return n.runWebGPUProgram(s,[a,i,o],Object(r.upcastType)(i.dtype,o.dtype))}},Or=K({opType:O.SIGMOID}),_r={kernelName:r.Sigmoid,backendName:"webgpu",kernelFunc:Or},Tr=K({opType:O.SIN}),Ar={kernelName:r.Sin,backendName:"webgpu",kernelFunc:Tr},Nr=K({opType:O.SINH}),Cr={kernelName:r.Sinh,backendName:"webgpu",kernelFunc:Nr},Er=Y({opSnippet:v.SUB,cpuKernelImpl:Se,supportsComplex:!0}),jr={kernelName:r.Sub,backendName:"webgpu",kernelFunc:Er};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r={kernelName:r.Softmax,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:i}=t,{dim:o}=a,s=r.util.parseAxisParam([o],i.shape),u=zn({inputs:{x:i},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),c=r.backend_util.expandShapeToKeepDim(u.shape,s),l=M({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Er({inputs:{a:i,b:l},backend:n}),h=Ut({inputs:{x:d},backend:n}),p=Ft({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:!1}}),f=M({inputs:{x:p},backend:n,attrs:{shape:c}}),m=sr({inputs:{a:h,b:f},backend:n});return n.disposeData(u.dataId),n.disposeData(l.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}},Mr={kernelName:r.SpaceToBatchND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockShape:o,paddings:s}=a;r.util.assert(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...s);for(let e=1+o.length;e<i.shape.length;++e)c.push([0,0]);const l=[],d=er({inputs:{x:i},backend:n,attrs:{paddings:c,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,o,u,!1),p=r.backend_util.getPermuted(h.length,o.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,o,u,!1),m=M({inputs:{x:d},backend:n,attrs:{shape:h}}),b=Be({inputs:{x:m},backend:n,attrs:{perm:p}}),g=M({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach((e=>n.disposeData(e.dataId))),g}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zr{constructor(e,t,n,r,a,i,s=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=i,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);const u=t>1;this.shaderKey=`scatter_${n}_${r}_${u}`;const c=o(a.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${c};`;let l="";1===n?l="i":2===n&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]"),this.updatesSnippet=`getUpdates(${d})`,this.strideString=u?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        let globalIndex = index * ${this.workPerThread};\n        if (globalIndex < uniforms.size) {\n          var sum = vec4<f32>(0.0);\n          var found = vec4<bool>(false);\n          for (var i = 0; i < uniforms.updateSize; i = i + 1) {\n            var flattenedIndex = 0;\n            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n              let indexInside = i32(round(${this.indicesSnippet}));\n              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};\n            }\n            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n              let curIndex = globalIndex + innerIndex;\n              let coords = getCoordsFromIndex(curIndex);\n              if (flattenedIndex == coords[0]) {\n                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};\n                found[innerIndex] = true;\n              }\n            }\n          }\n          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n            let curIndex = globalIndex + innerIndex;\n            if (curIndex < uniforms.size)\n            {\n              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));\n            }\n          }\n        }\n      }`}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr={kernelName:r.SparseToDense,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:i,sparseValues:o,defaultValue:s}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(o,i,u),p=[{type:"int32",data:[l]},{type:"int32",data:[c]},{type:"int32",data:d}],f=new zr(l,c,i.shape.length,o.shape.length,d,[h,1],!1),m=n.runWebGPUProgram(f,[o,i,s],o.dtype,p),b=M({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeData(m.dataId),b}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr={kernelName:r.SplitV,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{numOrSizeSplits:o,axis:s}=a,u=r.util.parseAxisParam(s,i.shape)[0],c=r.backend_util.prepareSplitSize(i,o,u),l=i.shape.length,d=new Array(l).fill(0),h=i.shape.slice();return c.map((e=>{const t=[...h];t[u]=e;const r=Ke({inputs:{x:i},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},Br=K({opType:O.SQRT}),Pr={kernelName:r.Sqrt,backendName:"webgpu",kernelFunc:Br},Dr={kernelName:r.Square,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t,a=new q(n.shape,O.SQUARE);return r.runWebGPUProgram(a,[n],n.dtype)}},Gr=Y({opSnippet:v.SQUARED_DIFFERENCE}),Lr={kernelName:r.SquaredDifference,backendName:"webgpu",kernelFunc:Gr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Wr{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);const t=o(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur={kernelName:r.StridedSlice,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{begin:o,end:s,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:b,sliceDim0:g,isSimpleSlice:k,begin:y,end:v,strides:w}=r.slice_util.sliceInfo(i.shape,o,s,u,c,l,d,h,p);let I;if(b)I=M({inputs:{x:i},backend:n,attrs:{shape:m}});else if(g||k){r.util.assert(i.shape.length>=1,(()=>`Input must have rank at least 1, got: ${i.shape.length}`));const e=r.slice_util.computeOutShape(y,v,w),t=Ke({inputs:{x:i},backend:n,attrs:{begin:y,size:e}});I=M({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([i])){const e=n.readSync(i.dataId),t=Object(r.buffer)(i.shape,i.dtype,e),a=Ie(f,t,w,y);I=n.makeTensorInfo(m,i.dtype,a.values)}else{const e=new Wr(f),t=[{type:"int32",data:y},{type:"int32",data:w}],r=n.runWebGPUProgram(e,[i],i.dtype,t);I=M({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}}return I}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr={kernelName:r.StringNGrams,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:o,rightPad:s,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),p=n.readSync(d.dataId),[f,m]=xe(h,p,a,i,o,s,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},Hr=K({opType:O.TANH}),qr={kernelName:r.Tanh,backendName:"webgpu",kernelFunc:Hr};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Kr{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e;a++)r.push(`(${n[a]} % ${t}aShape[${a}])`);return r.join()}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank,"uniforms.")}));\n        }\n      }\n    `}}const Yr={kernelName:r.Tile,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{reps:o}=a;if(n.shouldExecuteOnCPU([i])||"string"===i.dtype||i.shape.length>=5){const e=n.readSync(i.dataId),t="string"===i.dtype?e.map((e=>r.util.decodeString(e))):e,a=Object(r.buffer)(i.shape,i.dtype,t),s=Oe(a,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new Kr(i.shape,o);return n.runWebGPUProgram(s,[i],i.dtype)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xr{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; negativeInf : f32;\n        dir : i32; inc : i32;",this.shaderKey="swap"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}}class Zr{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(e,t){null!==t&&e.disposeData(t.dataId)}function Jr(e){let t=1;for(;t<e;)t*=2;return t}const ea={kernelName:r.TopK,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{k:o,sorted:s}=a,u=i.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([i])){const e=n.readSync(i.dataId),[t,r]=_e(e,u,i.dtype,o,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return u[u.length-1]=0,[n.makeTensorInfo(u,i.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[i,Zt({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const l=r.util.sizeFromShape(u)/c,d=M({inputs:{x:i},attrs:{shape:[l,c]},backend:n}),h=Jr(o),p=Jr(c);let f=null;const m=()=>null===f?[d,d]:[d,f],b=(e,t,r)=>{const a=m(),i=new Xr(r),o=[{type:"int32",data:[c]},{type:"int32",data:[null===f?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],s=f;f=n.runWebGPUProgram(i,a,"int32",o),Qr(n,s)};for(let e=1;e<h;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[l,p])}for(let e=p;e>h;e/=2){const t=m(),r=new Zr([l,e/2]),a=[{type:"int32",data:[c]},{type:"int32",data:[null===f?1:0]},{type:"int32",data:[h]}],i=f;f=n.runWebGPUProgram(r,t,"int32",a),Qr(n,i);const o=h/2,s=2*o;for(let e=o;e>=1;e/=2)b(s,e,f.shape)}let g=f;f=Ke({inputs:{x:f},backend:n,attrs:{begin:0,size:[l,o]}}),Qr(n,g);let k=kn({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Qr(n,d);const y=u.slice(0,-1);y.push(o),g=f,f=M({inputs:{x:f},attrs:{shape:y},backend:n}),Qr(n,g);const v=k;return k=M({inputs:{x:k},attrs:{shape:y},backend:n}),Qr(n,v),[k,f]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ta{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        "}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const na=[F,Ce,je,Me,De,Ge,Ue,Ve,Xe,tt,rt,ot,H,ht,kt,wt,xt,Ot,Tt,Nt,jt,Pt,Gt,Wt,Vt,qt,Yt,Qt,en,cn,nn,an,hn,pn,fn,bn,yn,wn,xn,U,ct,Sn,_n,An,Cn,jn,Mn,Rn,Bn,Pn,Dn,Gn,Wn,Vn,Mt,Hn,qn,Kn,Qe,Zn,Qn,tr,rr,ar,ir,or,et,ur,lr,hr,z,fr,br,kr,vr,Ir,Sr,_r,Ar,Cr,Ye,Ur,Vr,$r,Mr,Rr,Fr,Pr,Dr,Lr,jr,Bt,qr,Yr,ea,{kernelName:r.Transform,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:i}=t,{interpolation:o,fillMode:s,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new ta([l,f,m,p]),g="nearest"===o?1:2;let k;switch(s){case"constant":default:k=1;break;case"reflect":k=2;break;case"wrap":k=3;break;case"nearest":k=4}const y=[{type:"int32",data:[g]},{type:"int32",data:[k]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[a,i],"float32",y)}},Pe,{kernelName:r.Unpack,backendName:"webgpu",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const o=a,s=o.shape.length,u=a.shape[i],c=new Array(s-1);let l=0;for(let e=0;e<s;e++)e!==i&&(c[l++]=o.shape[e]);const d=[],h=new Array(s).fill(0),p=o.shape.slice();p[i]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[i]=e;const t=Ke({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),r=M({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeData(e.dataId))),f}},Xn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of na)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ra{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){const r=aa(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;const e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;const a=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(r).push(a),a}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;const r=aa(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;const a=this.usedBuffers.get(r),i=a.indexOf(e);if(i<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");a.splice(i,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function aa(e,t){return`${e}_${t}`}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ia{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){r.util.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=g(this.outputShape),this.dispatch=f(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){const e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let flatIndexBase = index * uniforms.numChannels;\n        for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n          let flatIndex = flatIndexBase + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndexBase);\n            let values = ${e};\n            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){const n=e.createBuffer({size:4*t.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every(((e,t)=>e===this.lastUniformData[t]))||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return this.inputTexture&&this.lastPixelSize.width===t&&this.lastPixelSize.height===n||(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return null===this.layout&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){const t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});const n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oa extends ia{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return null===this.layout&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){const t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});const n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa=Object(r.env)().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),ua=(e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,i=t.dispatch;if(i.every((e=>e<=n)))return i;r.util.assert(i[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let o=Math.ceil(Math.sqrt(i[0]));return o>n?(o=Math.ceil(Math.cbrt(i[0])),r.util.assert(o<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[o,o,o]):[o,o,1]};class ca extends r.KernelBackend{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!y())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new ra(this.device),this.tensorMap=new r.DataStorage(this,Object(r.engine)()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Object(r.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return ca.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach((e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)})),this.uniformDisposalQueue.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage))),this.stagingDisposalQueue.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage))),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);const{complexTensorInfos:r}=this.tensorMap.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){const t=this.tensorMap.get(e);null!=t&&null!=t.bufferInfo.buffer&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()},i=r.util.sizeFromShape(t)*k(n);return this.tensorMap.set(a,{dtype:n,values:e,bufferInfo:{byteSize:i,usage:this.defaultGpuBufferUsage()},refCount:1}),a}move(e,t,n,a,i){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o=r.util.sizeFromShape(n)*k(a);this.tensorMap.set(e,{dtype:a,values:t,bufferInfo:{byteSize:o,usage:this.defaultGpuBufferUsage()},refCount:i})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new ia),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new oa),this.fromPixelImportProgram;default:return void r.util.assert(!1,(()=>"Unsupported fromPixels shape"))}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(null!=e.values)return e.values;const t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);const n=t.getMappedRange().slice(0);return t.unmap(),null!=t&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Object(r.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(r.util.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return this.convertAndCacheOnCPU(e,n);let a;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),n=e[0],i=e[1];a=r.backend_util.mergeRealAndImagArrays(n,i)}else{a=function(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(await this.getBufferData(t),t.dtype)}return this.convertAndCacheOnCPU(e,a),a}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,n)}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const i=r.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=r.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(i);return s.kernelMs=r.util.sum(u),s.getExtraProfileInfo=()=>u.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const i=n.map((e=>r.util.encodeString(e)));a=this.write(i,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){const t=this.tensorMap.get(e);if(null==t.bufferInfo.buffer&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){const e=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),n=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(n).set(t.values):new Float32Array(n).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);const r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0;const n=[];e.forEach((e=>{let a;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:a=4;break;case 2:a=8;break;case 3:case 4:a=16;break;default:r.util.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}t=Math.ceil(t/a)*a,n.push(t),t+=4*e.data.length}));const a=new ArrayBuffer(t);e.forEach(((e,t)=>{const r=n[t];"int32"===e.type?new Int32Array(a,r,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(a,r,e.data.length).set(e.data):new Float32Array(a,r,e.data.length).set(e.data)}));const i=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(i,0,a,0,t),{offset:0,size:t,buffer:i}}createLayout(e){const t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let n=0;n<e;n++)t.push({binding:n+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});const n=this.device.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:this.device.createPipelineLayout({bindGroupLayouts:[n]})}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,a,i){if(!i){if(i=this.makeTensorInfo(e.outputShape,n),0===r.util.sizeFromShape(i.shape)){return this.tensorMap.get(i.dataId).values=r.util.getTypedArrayFromDType(i.dtype,0),i}this.uploadToGPU(i.dataId)}e.dispatch=ua(this.device,e);let o=[{type:"float32",data:[NaN]}];const s=t.concat(i).map((e=>e.shape)),u="int32";s.map((e=>{o.push({type:u,data:e})}));const c=r.util.computeStrides(i.shape);if(o.push({type:u,data:c}),e.size){const t=r.util.sizeFromShape(e.outputShape);o.push({type:u,data:[e.isVec4?t/4:t]})}a&&(o=[...o,...a]);const l=this.makeUniforms(o),d=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),h=d.map((e=>e.dtype)).concat(i.dtype),p=d.map((e=>r.backend_util.getBroadcastDims(e.shape,i.shape))),f=d.map((e=>r.util.arraysEqual(e.shape,i.shape))).join("_"),m=p.map((e=>e.join("_"))).join(";"),b=sn(e,s,h,m,f),{bindGroupLayout:g,pipelineLayout:k}=this.getCachedOrCreateLayout(e.variableNames.length),y=this.getAndSavePipeline(b,(()=>on(this.device,e,k,d,i))),v=null!=this.activeTimers,w=((e,t,n,r,a)=>{const i=[r,...n];return a&&i.push(a),e.createBindGroup({layout:t,entries:i.map(((e,t)=>({binding:t,resource:e})))})})(this.device,g,t.map((e=>this.tensorToBinding(e))),this.tensorToBinding(i),l);this.ensureCommandEncoderReady();const I=this.getComputePass();v&&this.supportTimeQuery&&I.writeTimestamp(this.querySet,0),I.setPipeline(y),I.setBindGroup(0,w),I.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),v&&this.supportTimeQuery&&I.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(i.dataId);const x={byteSize:l.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:l.buffer};return this.uniformDisposalQueue.push(x),Object(r.env)().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),v&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),i}runFromPixelsProgram(e,t,n,r,a){e.dispatch=ua(this.device,e);const i=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();const o=this.getComputePass(),s=null!=this.activeTimers;s&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,i),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),s&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a),this.submitQueue(),s&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){const t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,t=sa){return Object(r.env)().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).bufferInfo.buffer&&r.util.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}}ca.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
y()&&Object(r.registerBackend)("webgpu",(async()=>{Object(r.env)().set("CHECK_COMPUTATION_FOR_ERRORS",!1);const e={powerPreference:Object(r.env)().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,a={},i=t.features.has("timestamp-query");a.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},i?a.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");const o=await t.requestDevice(a);return new ca(o,i)}),3)},function(e,t,n){"use strict";var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=r.kernel_impls.whereImpl;class o extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return o.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const i=n.map((e=>r.util.encodeString(e)));a=this.write(i,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return Object(r.engine)().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(a.a)([e],"where");const t=this.readSync(e.dataId);return i(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}o.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(r.registerBackend)("cpu",(()=>new o),1);var s=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u=Object(s.a)(r.Elu,(e=>e>=0?e:Math.exp(e)-1)),c={kernelName:r.Elu,backendName:"cpu",kernelFunc:u};var l=n(19);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{alpha:s}=i;Object(a.a)([o],"leakyRelu");const u=r.util.sizeFromShape(o.shape),c=n.data.get(o.dataId).values,l=r.util.getTypedArrayFromDType("float32",u);for(let e=0;e<c.length;e++)l[e]=c[e]<0?s*c[e]:c[e];return n.makeTensorInfo(o.shape,"float32",l)}const h={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:d};var p=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f=Object(p.a)(((e,t)=>e<0?t*e:e));function m(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t;Object(a.a)([r,i],"prelu");const o=n.data.get(r.dataId).values,s=n.data.get(i.dataId).values,[u,c]=f(r.shape,i.shape,o,s,"float32");return n.makeTensorInfo(c,"float32",u)}const b={kernelName:r.Prelu,backendName:"cpu",kernelFunc:m},g=Object(s.a)(r.Relu,(e=>Math.max(0,e))),k={kernelName:r.Relu,backendName:"cpu",kernelFunc:g},y=Object(s.a)(r.Relu6,(e=>Math.min(Math.max(0,e),6))),v={kernelName:r.Relu6,backendName:"cpu",kernelFunc:y};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var w=n(42);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(e,t,n,r,a){if("linear"===n)return Object(l.a)({inputs:{x:t},backend:e});if("relu"===n)return g({inputs:{x:t},backend:e});if("elu"===n)return u({inputs:{x:t},backend:e});if("relu6"===n)return y({inputs:{x:t},backend:e});if("prelu"===n)return m({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return d({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Object(w.a)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var x=n(26);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{shape:o}=a,s=r.util.sizeFromShape(i.shape),u=r.util.inferFromImplicitShape(o,s),c=r.util.sizeFromShape(u);r.util.assert(s===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${i.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(i.dataId);const l=n.data.get(i.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:i.dataId,shape:u,dtype:i.dtype}}const O={kernelName:r.Reshape,backendName:"cpu",kernelFunc:S};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _(e){const{inputs:t,backend:n,attrs:i}=e,{a:o,b:s}=t,{transposeA:u,transposeB:c}=i;Object(a.a)([o,s],"matMul");const l=o.shape.length,d=s.shape.length,h=u?o.shape[l-2]:o.shape[l-1],p=c?s.shape[d-1]:s.shape[d-2],f=u?o.shape[l-1]:o.shape[l-2],m=c?s.shape[d-2]:s.shape[d-1],b=o.shape.slice(0,-2),g=s.shape.slice(0,-2),k=r.util.sizeFromShape(b),y=r.util.sizeFromShape(g),v=r.broadcast_util.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([f,m]);r.util.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${u} and transposeB=${c} must match.`));const w=c?[y,m,p]:[y,p,m],I=S({inputs:{x:o},backend:n,attrs:{shape:u?[k,h,f]:[k,f,h]}}),x=S({inputs:{x:s},backend:n,attrs:{shape:w}}),O=u?I.shape[1]:I.shape[2],_=u?I.shape[2]:I.shape[1],T=c?x.shape[1]:x.shape[2],A=Math.max(k,y),N=n.data.get(I.dataId).values,C=n.data.get(x.dataId).values,E=r.util.computeStrides(I.shape),j=r.util.computeStrides(x.shape),[$,M,z]=u?[E[0],1,E[1]]:[E[0],E[1],1],[R,F,B]=c?[1,j[1],j[0]]:[j[1],1,j[0]],P=_*T,D=Object(r.buffer)([A,_,T],I.dtype),G=D.values,L=n.blockSize;for(let e=0;e<A;e++)for(let t=0;t<_;t+=L)for(let n=0;n<T;n+=L)for(let r=0;r<O;r+=L){const a=Math.min(t+L,_),i=Math.min(n+L,T),o=Math.min(r+L,O);for(let s=t;s<a;s++)for(let t=n;t<i;t++){let n=0;for(let a=r;a<o;a++){const r=Math.min(e,k-1)*$,i=Math.min(e,y-1)*B;n+=N[r+s*M+a*z]*C[a*R+t*F+i]}G[e*P+(s*T+t)]+=n}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(x),n.makeTensorInfo(v,D.dtype,D.values)}const T={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:o,preluActivationWeights:s}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=_({inputs:{a:a,b:i},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(p=Object(x.a)({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),l&&(f=I(n,h,l,s,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};var N=n(53);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C=Object(s.a)(r.Acos,(e=>Math.acos(e))),E={kernelName:r.Acos,backendName:"cpu",kernelFunc:C},j=Object(s.a)(r.Acosh,(e=>Math.acosh(e))),$={kernelName:r.Acosh,backendName:"cpu",kernelFunc:j};const M={kernelName:r.AddN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,i=t;Object(a.a)(t,"addN");const o=i.map((e=>n.data.get(e.dataId).values)),s=Object(r.buffer)(i[0].shape,i[0].dtype),u=s.values;for(let e=0;e<i.length;e++){const t=o[e];for(let e=0;e<u.length;e++)u[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var z=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s,keepDims:u}=i;Object(a.a)(o,"all");const c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let h=o;null!=d&&(h=Object(z.a)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n&&r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(h);const k=n.makeTensorInfo(p,h.dtype,b);if(u){const e=S({inputs:{x:k},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(k),e}return k}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s,keepDims:u}=i;Object(a.a)(o,"any");const c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let h=o;null!=d&&(h=Object(z.a)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n||r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(h);const k=n.makeTensorInfo(p,h.dtype,b);if(u){const e=S({inputs:{x:k},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(k),e}return k}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s}=i;Object(a.a)(o,"argMax");let u=r.util.parseAxisParam(s,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let l=o;const d=[];null!=c&&(l=Object(z.a)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",u,l.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a>n&&(n=a,r=e)}m[e]=r}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s}=i;Object(a.a)(o,"argMin");let u=r.util.parseAxisParam(s,o.shape);const c=r.backend_util.getAxesPermutation(u,o.shape.length);let l=o;const d=[];null!=c&&(l=Object(z.a)({inputs:{x:o},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",u,l.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a<n&&(n=a,r=e)}m[e]=r}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",m)}},D=Object(s.a)(r.Asin,(e=>Math.asin(e))),G={kernelName:r.Asin,backendName:"cpu",kernelFunc:D},L=Object(s.a)(r.Asinh,(e=>Math.asinh(e))),W={kernelName:r.Asinh,backendName:"cpu",kernelFunc:L},U=Object(s.a)(r.Atan,(e=>Math.atan(e))),V={kernelName:r.Atan,backendName:"cpu",kernelFunc:U};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var H=n(13);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q=Object(p.a)(((e,t)=>Math.atan2(e,t))),K=Object(H.a)(r.Atan2,q),Y={kernelName:r.Atan2,backendName:"cpu",kernelFunc:K},X=Object(s.a)(r.Atanh,(e=>Math.atanh(e))),Z={kernelName:r.Atanh,backendName:"cpu",kernelFunc:X};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q(e,t,n,a,i,o){const s=i.strideHeight,u=i.strideWidth,c=i.dilationHeight,l=i.dilationWidth,d=i.effectiveFilterHeight,h=i.effectiveFilterWidth,p=i.padInfo.top,f=i.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r.buffer)(i.outShape,n),g=b.values,k=i.outShape[1]*i.outShape[2]*i.outShape[3],y=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let t=0;t<i.batchSize;++t){const n=t*k,r=t*a[0];for(let t=0;t<i.inChannels;++t)for(let b=0;b<i.outHeight;++b){const k=b*s-p,w=Math.max(0,k),I=Math.min(i.inHeight,d+k),x=n+b*y;for(let n=0;n<i.outWidth;++n){const s=n*u-f,d=Math.max(0,s),p=Math.min(i.inWidth,h+s);let b=m,k=0,y=0;for(let n=w;n<I;n+=c){const i=r+n*a[1];for(let n=d;n<p;n+=l){const r=e[i+n*a[2]+t];"max"===o&&r>b?b=r:"avg"===o&&(k+=r,y++)}if(isNaN(b))break}g[x+n*v+t]="avg"===o?k/y:b}}}return b}function J(e,t,n,a,i=!1,o=!1){const s=Object(r.buffer)(a.outShape,"int32"),u=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,b=Object(r.buffer)(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const r=n*u-f;let g=r;for(;g<0;)g+=l;const k=Math.min(a.inHeight,h+r);for(let u=0;u<a.outWidth;++u){const h=u*c-m;let f=h;for(;f<0;)f+=d;const y=Math.min(a.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=g;n<k;n+=l){const s=n-r;for(let r=f;r<y;r+=d){const u=r-h,c=b.get(e,n,r,t);c>v&&(v=c,w=i?o?((e*a.inHeight+n)*a.inWidth+r)*a.inChannels+t:(n*a.inWidth+r)*a.inChannels+t:s*p+u)}}s.set(w,e,n,u,t)}}return s}function ee(e,t,n,a,i,o){const s=i.strideDepth,u=i.strideHeight,c=i.strideWidth,l=i.dilationDepth,d=i.dilationHeight,h=i.dilationWidth,p=i.effectiveFilterDepth,f=i.effectiveFilterHeight,m=i.effectiveFilterWidth,b=i.padInfo.front,g=i.padInfo.top,k=i.padInfo.left,y="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(r.buffer)(i.outShape,n),w=v.values,I=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],x=i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[3]*i.outShape[4],O=i.outShape[4];for(let t=0;t<i.batchSize;++t){const n=t*I,r=t*a[0];for(let t=0;t<i.inChannels;++t)for(let v=0;v<i.outDepth;++v){const I=v*s-b;let _=I;for(;_<0;)_+=l;const T=Math.min(i.inDepth,p+I),A=n+v*x;for(let n=0;n<i.outHeight;++n){const s=n*u-g;let p=s;for(;p<0;)p+=d;const b=Math.min(i.inHeight,f+s),v=A+n*S;for(let n=0;n<i.outWidth;++n){const s=n*c-k;let u=s;for(;u<0;)u+=h;const f=Math.min(i.inWidth,m+s),g=v+n*O;let I=y,x=0,S=0;for(let n=_;n<T;n+=l){const i=r+n*a[1];for(let n=p;n<b;n+=d){const r=i+n*a[2];for(let n=u;n<f;n+=h){const i=e[r+n*a[3]+t];if("max"===o&&i>I?I=i:"avg"===o&&(x+=i,S++),isNaN(I))break}if(isNaN(I))break}if(isNaN(I))break}w[g+t]="avg"===o?x/S:I}}}}return v}const te={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t;Object(a.a)(o,"avgPool");const{filterSize:s,strides:u,pad:c,dimRoundingMode:d}=i;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const h=r.backend_util.computePool2DInfo(o.shape,s,u,1,c,d);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.util.arraysEqual(h.inShape,h.outShape))p=Object(l.a)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=Q(e,o.shape,o.dtype,t,h,"avg");p=n.makeTensorInfo(h.outShape,o.dtype,a.values)}return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{filterSize:s,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=i;Object(a.a)(o,"avgPool3d");const h=r.backend_util.computePool3DInfo(o.shape,s,u,1,c,l,d),p=ee(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const re={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,input:s}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=i;Object(a.a)([o,s],"avgPool3DGrad");const h=r.backend_util.computePool3DInfo(s.shape,u,c,1,l,d),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,k=h.filterWidth,y=h.dilationDepth,v=h.dilationHeight,w=h.dilationWidth,I=h.effectiveFilterDepth,x=h.effectiveFilterHeight,S=h.effectiveFilterWidth,O=I-1-h.padInfo.front,_=S-1-h.padInfo.left,T=x-1-h.padInfo.top,A=Object(r.buffer)(s.shape,"float32"),N=1/(b*g*k),C=n.bufferSync(o);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){const i=n-O,o=r-T,s=a-_;let u=0;for(let n=0;n<I;n+=y){const r=(i+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<x;n+=v){const a=(o+n)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<S;n+=w){const i=(s+n)/m;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;u+=C.get(e,r,a,i,t)}}}A.set(u*N,e,n,r,a,t)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ae={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,input:s}=t,u=s;Object(a.a)([o,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:d}=i,h=r.backend_util.computePool2DInfo(u.shape,c,l,1,d),p=h.strideHeight,f=h.strideWidth,m=h.filterHeight,b=h.filterWidth,g=h.dilationHeight,k=h.dilationWidth,y=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=v-1-h.padInfo.left,I=y-1-h.padInfo.top,x=Object(r.buffer)(u.shape,"float32"),S=1/(m*b),O=n.data.get(o.dataId).values,_=Object(r.buffer)(o.shape,"float32",O);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-I,i=r-w;let o=0;for(let n=0;n<y;n+=g){const r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<v;n+=k){const a=(i+n)/f;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;o+=_.get(e,r,a,t)}}x.set(o*S,e,n,r,t)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ie={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,scale:s,offset:u,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==u||c.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==s||c.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Object(a.a)([o,c,l,s,u],"batchNorm");let{varianceEpsilon:d}=i;null==d&&(d=.001);const h=n.data.get(o.dataId).values,p=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values,m=s?n.data.get(s.dataId).values:new Float32Array([1]),b=u?n.data.get(u.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),k=b.length,y=m.length,v=f.length,w=p.length;let I=0,x=0,S=0,O=0;for(let e=0;e<h.length;++e)g[e]=b[I++]+(h[e]-p[x++])*m[S++]/Math.sqrt(f[O++]+d),I>=k&&(I=0),x>=w&&(x=0),S>=y&&(S=0),O>=v&&(O=0);return n.makeTensorInfo(o.shape,o.dtype,g)}};var oe=n(22);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{blockShape:s,crops:u}=i;Object(a.a)([o],"batchToSpaceND");const c=s.reduce(((e,t)=>e*t)),l=r.backend_util.getReshaped(o.shape,s,c),d=r.backend_util.getPermuted(l.length,s.length),h=r.backend_util.getReshapedPermuted(o.shape,s,c),p=r.backend_util.getSliceBeginCoords(u,s.length),f=r.backend_util.getSliceSize(h,u,s.length),m=S({inputs:{x:o},backend:n,attrs:{shape:l}}),b=Object(z.a)({inputs:{x:m},backend:n,attrs:{perm:d}}),g=S({inputs:{x:b},backend:n,attrs:{shape:h}}),k=Object(oe.a)({inputs:{x:g},backend:n,attrs:{begin:p,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),k}};var ue=n(33);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ce={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:o}=r,s=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,c=Object(ue.a)(s,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const le={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:i}=t,o=n.data.get(a.dataId).values,s=n.data.get(i.dataId).values,u=r.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(s));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var de=n(28),he=n(54);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pe=Object(s.a)(r.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),fe={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:pe};var me=n(18);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const be={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),i=n.data.get(t.dataId),o=i.complexTensorInfos.real,s=i.complexTensorInfos.imag,u=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values;for(let e=0;e<u.length;e++){const t=u[e],n=c[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};var ge=n(55);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const ye={kernelName:r.Imag,backendName:"cpu",kernelFunc:ke};var ve=n(24);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a,o=r.util.parseAxisParam(i,t[0].shape)[0];let s=r.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===r.util.sizeFromShape(s))return n.makeTensorInfo(s,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return Object(l.a)({inputs:{x:u[0]},backend:n});const c=u.map((e=>e.shape));if(r.backend_util.assertParamsConsistent(c,o),"complex64"===u[0].dtype){const e=u.map((e=>Object(ve.a)({inputs:{input:e},backend:n}))),t=u.map((e=>ke({inputs:{input:e},backend:n}))),r=we({inputs:e,backend:n,attrs:{axis:o}}),a=we({inputs:t,backend:n,attrs:{axis:o}}),i=Object(me.a)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const d=u.map((e=>{const t=r.util.sizeFromShape(e.shape.slice(o));return S({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=d.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));s=r.backend_util.computeOutShape(d.map((e=>e.shape)),1);const p=1===d[0].shape[0],f=Object(ge.a)(h,s,t[0].dtype,p),m=r.backend_util.computeOutShape(u.map((e=>e.shape)),o),b=n.makeTensorInfo(m,t[0].dtype,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const Ie={kernelName:r.Concat,backendName:"cpu",kernelFunc:we};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,filter:s}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}=i;Object(a.a)([o,s],"conv2d");const p=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(o.shape,s.shape,u,d,c,h,!1,p),m=f.filterHeight,b=f.filterWidth,g=f.dilationHeight,k=f.dilationWidth,y=f.padInfo.left,v=f.padInfo.top,w="channelsLast"===f.dataFormat,I=new r.TensorBuffer(f.outShape,o.dtype),x=r.util.computeStrides(o.shape),S=r.util.computeStrides(s.shape),O=x[0],_=w?x[1]:x[2],T=w?x[2]:1,A=w?1:x[1],N=I.strides[0],C=w?I.strides[1]:I.strides[2],E=w?I.strides[2]:1,j=w?1:I.strides[1],$=n.data.get(o.dataId).values,M=n.data.get(s.dataId).values,z=I.values;for(let e=0;e<f.batchSize;++e){const t=e*O,n=e*N;for(let e=0;e<f.outHeight;++e){const r=n+e*C,a=e*f.strideHeight-v;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const i=e*S[0],o=t+n*_;for(let e=0;e<f.outWidth;++e){const t=r+e*E,n=e*f.strideWidth-y;for(let e=0;e<b;++e){const r=n+e*k;if(r<0||r>=f.inWidth)continue;const a=o+r*T;let s=i+e*S[1];for(let e=0;e<f.inChannels;++e){const n=$[a+e*A];for(let e=0;e<f.outChannels;++e)z[t+e*j]+=n*M[s+e];s+=f.outChannels}}}}}}return n.makeTensorInfo(I.shape,I.dtype,z)}const Se={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:xe};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,dy:s}=t,{strides:u,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:h}=i;Object(a.a)([o,s],"conv2dBackpropFilter");const p=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(o.shape,h,u,1,c,d,!1,p),{strideHeight:m,strideWidth:b,filterHeight:g,filterWidth:k}=f,y="channelsLast"===f.dataFormat,v=new r.TensorBuffer(f.filterShape,"float32"),w=f.padInfo.left,I=f.padInfo.top,x=n.data.get(o.dataId).values,S=n.data.get(s.dataId).values,O=new r.TensorBuffer(o.shape,o.dtype,x),_=new r.TensorBuffer(s.shape,s.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((I-e)/m)),n=Math.min(f.outHeight,(f.inHeight+I-e)/m);for(let r=0;r<k;++r){const a=Math.max(0,Math.ceil((w-r)/b)),i=Math.min(f.outWidth,(f.inWidth+w-r)/b);for(let o=0;o<f.inChannels;++o)for(let s=0;s<f.outChannels;++s){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*m-I;for(let e=a;e<i;++e){const n=r+e*b-w;u+=y?O.get(c,t,n,o)*_.get(c,l,e,s):O.get(c,o,t,n)*_.get(c,s,l,e)}}v.set(u,e,r,o,s)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _e={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,filter:s}=t,{inputShape:u,strides:c,pad:l,dataFormat:d,dimRoundingMode:h}=i;Object(a.a)([o,s],"conv2dBackpropInput");const p=r.util.computeStrides(s.shape),f=r.util.computeStrides(o.shape);let m=r.backend_util.convertConv2DDataFormat(d);const b=r.backend_util.computeConv2DInfo(u,s.shape,c,1,l,h,!1,m),g=new r.TensorBuffer(b.inShape,"float32"),k=g.values,y=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,[w,I,x]=p,{batchSize:S,filterHeight:O,filterWidth:_,inChannels:T,inHeight:A,inWidth:N,outChannels:C,outHeight:E,outWidth:j,strideHeight:$,strideWidth:M}=b;m=b.dataFormat;const z=O-1-b.padInfo.top,R=_-1-b.padInfo.left,F="channelsLast"===m,B=g.strides[0],P=F?g.strides[1]:g.strides[2],D=F?g.strides[2]:1,G=F?1:g.strides[1],L=f[0],W=F?f[1]:f[2],U=F?f[2]:1,V=F?1:f[1];for(let e=0;e<S;++e)for(let t=0;t<T;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/$)),i=Math.min(E,(O+r)/$);for(let o=0;o<N;++o){const s=o-R,u=Math.max(0,Math.ceil(s/M)),c=Math.min(j,(_+s)/M);let l=0;for(let n=a;n<i;++n){const a=n*$-r;for(let r=u;r<c;++r){const i=L*e+W*n+U*r,o=w*(O-1-a)+I*(_-1-(r*M-s))+x*t;for(let e=0;e<C;++e){l+=y[i+V*e]*v[o+e]}}}k[B*e+P*n+D*o+G*t]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,filter:s}=t,{strides:u,pad:c,dilations:l}=i;Object(a.a)([o,s],"conv3d");const d=r.backend_util.computeConv3DInfo(o.shape,s.shape,u,l,c),{filterDepth:h,filterHeight:p,filterWidth:f,dilationDepth:m,dilationHeight:b,dilationWidth:g,padInfo:k}=d,y=k.front,v=k.left,w=k.top,I=new r.TensorBuffer(d.outShape,o.dtype),x=n.data.get(o.dataId).values,S=n.data.get(s.dataId).values,O=I.values,_=r.util.computeStrides(o.shape),T=r.util.computeStrides(s.shape);for(let e=0;e<d.batchSize;++e){const t=e*_[0],n=e*I.strides[0];for(let e=0;e<d.outDepth;++e){const r=n+e*I.strides[1],a=e*d.strideDepth-y;for(let e=0;e<h;++e){const n=a+e*m;if(n<0||n>=d.inDepth)continue;const i=e*T[0],o=t+n*_[1];for(let e=0;e<d.outHeight;++e){const t=r+e*I.strides[2],n=e*d.strideHeight-w;for(let e=0;e<p;++e){const r=n+e*b;if(r<0||r>=d.inHeight)continue;const a=i+e*T[1],s=o+r*_[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-v;for(let e=0;e<f;++e){const t=r+e*g;if(t<0||t>=d.inWidth)continue;const i=a+e*T[2],o=s+t*d.inChannels;let u=i;for(let e=0;e<d.inChannels;++e){const t=x[o+e];for(let e=0;e<d.outChannels;++e)O[n+e]+=t*S[u+e];u+=d.outChannels}}}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ae={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,dy:s}=t,{strides:u,pad:c,filterShape:l}=i;Object(a.a)([o,s],"conv3dBackpropFilterV2");const d=r.util.computeStrides(o.shape),h=r.util.computeStrides(s.shape),p=r.backend_util.computeConv3DInfo(o.shape,l,u,1,c),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.filterDepth,k=p.filterHeight,y=p.filterWidth,v=new r.TensorBuffer(p.filterShape,"float32"),w=v.values,[I,x,S,O]=v.strides,_=n.data.get(s.dataId).values,[T,A,N,C]=h,E=n.data.get(o.dataId).values,[j,$,M,z]=d,R=p.padInfo.front,F=p.padInfo.left,B=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((R-e)/f)),n=Math.min(p.outDepth,(p.inDepth+R-e)/f),r=e*I;for(let a=0;a<k;++a){const i=Math.max(0,Math.ceil((B-a)/m)),o=Math.min(p.outHeight,(p.inHeight+B-a)/m),s=a*x+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((F-r)/b)),c=Math.min(p.outWidth,(p.inWidth+F-r)/b),l=r*S+s;for(let s=0;s<p.inChannels;++s){const d=s*O+l;for(let l=0;l<p.outChannels;++l){let h=0;for(let d=0;d<p.batchSize;++d){const p=d*j,g=d*T;for(let d=t;d<n;++d){const t=(e+d*f-R)*$+p,n=d*A+g;for(let e=i;e<o;++e){const i=(a+e*m-B)*M+t,o=e*N+n;for(let e=u;e<c;++e){const t=e*C+o;h+=E[(r+e*b-F)*z+i+s]*_[t+l]}}}}w[d+l]=h}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ne={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,filter:s}=t,{pad:u,strides:c,inputShape:l}=i;Object(a.a)([o],"conv3dBackpropInputV2");const d=r.util.computeStrides(o.shape),h=r.util.computeStrides(s.shape),p=r.backend_util.computeConv3DInfo(l,s.shape,c,1,u),f=new r.TensorBuffer(p.inShape,"float32"),m=f.values,[b,g,k,y]=f.strides,v=n.data.get(o.dataId).values,[w,I,x,S]=d,O=n.data.get(s.dataId).values,[_,T,A,N]=h,{batchSize:C,filterDepth:E,filterHeight:j,filterWidth:$,inChannels:M,inDepth:z,inHeight:R,inWidth:F,outChannels:B,outDepth:P,outHeight:D,outWidth:G,strideDepth:L,strideHeight:W,strideWidth:U}=p,V=E-1-p.padInfo.front,H=j-1-p.padInfo.top,q=$-1-p.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<M;++t)for(let n=0;n<z;++n){const r=n-V,a=Math.max(0,Math.ceil(r/L)),i=Math.min(P,(E+r)/L);for(let o=0;o<R;++o){const s=o-H,u=Math.max(0,Math.ceil(s/W)),c=Math.min(D,(j+s)/W);for(let l=0;l<F;++l){const d=l-q,h=Math.max(0,Math.ceil(d/U)),p=Math.min(G,($+d)/U);let f=0;for(let n=a;n<i;++n){const a=n*L-r;for(let r=u;r<c;++r){const i=r*W-s;for(let o=h;o<p;++o){const s=w*e+I*n+x*r+S*o,u=_*(E-1-a)+T*(j-1-i)+A*($-1-(o*U-d))+N*t;for(let e=0;e<B;++e){f+=v[s+e]*O[u+e]}}}}m[b*e+g*n+k*o+y*l+t]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ce=Object(s.a)(r.Cos,(e=>Math.cos(e))),Ee={kernelName:r.Cos,backendName:"cpu",kernelFunc:Ce},je=Object(s.a)(r.Cosh,(e=>Math.cosh(e))),$e={kernelName:r.Cosh,backendName:"cpu",kernelFunc:je};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Me={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{image:i,boxes:o,boxInd:s}=t,{cropSize:u,method:c,extrapolationValue:l}=a,[d,h,p,f]=i.shape,m=o.shape[0],[b,g]=u,k=Object(r.buffer)([m,b,g,f],"float32"),y=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,w=n.data.get(i.dataId).values,I=r.util.computeStrides(i.shape),x=r.util.computeStrides(k.shape);for(let e=0;e<m;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],i=y[t+3],o=v[e];if(o>=d)continue;const s=b>1?(a-n)*(h-1)/(b-1):0,u=g>1?(i-r)*(p-1)/(g-1):0;for(let t=0;t<b;t++){const d=b>1?n*(h-1)+t*s:.5*(n+a)*(h-1);if(d<0||d>h-1)for(let n=0;n<g;n++)for(let r=0;r<f;r++){const a=r+n*x[2]+t*x[1]+e*x[0];k.values[a]=l}else if("bilinear"===c){const n=Math.floor(d),a=Math.ceil(d),s=d-n;for(let c=0;c<g;c++){const d=g>1?r*(p-1)+c*u:.5*(r+i)*(p-1);if(d<0||d>p-1){for(let n=0;n<f;n++){const r=n+c*x[2]+t*x[1]+e*x[0];k.values[r]=l}continue}const h=Math.floor(d),m=Math.ceil(d),b=d-h;for(let r=0;r<f;r++){let i=r+h*I[2]+n*I[1]+o*I[0];const u=w[i];i=r+m*I[2]+n*I[1]+o*I[0];const l=w[i];i=r+h*I[2]+a*I[1]+o*I[0];const d=w[i];i=r+m*I[2]+a*I[1]+o*I[0];const p=u+(l-u)*b,f=d+(w[i]-d)*b;i=r+c*x[2]+t*x[1]+e*x[0],k.values[i]=p+(f-p)*s}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*u:.5*(r+i)*(p-1);if(a<0||a>p-1){for(let r=0;r<f;r++){const a=r+n*x[2]+t*x[1]+e*x[0];k.values[a]=l}continue}const s=Math.round(a),c=Math.round(d);for(let r=0;r<f;r++){const a=r+s*I[2]+c*I[1]+o*I[0],i=r+n*x[2]+t*x[1]+e*x[0];k.values[i]=w[a]}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ze={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s,exclusive:u,reverse:c}=i;Object(a.a)(o,"cumsum");const l=r.backend_util.getAxesPermutation([s],o.shape.length);let d=o;null!=l&&(d=Object(z.a)({inputs:{x:o},backend:n,attrs:{perm:l}}));const h=r.backend_util.getInnerMostAxes(1,o.shape.length)[0];if(h!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${h}`);const p=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),p),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=b)for(let t=0;t<b;t++){const n=g(e,t);if(0===t)f[n]=u?0:m[n];else{const r=g(e,t-1);f[n]=u?m[r]+f[r]:m[n]+f[r]}}const k=n.makeTensorInfo(d.shape,p,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(z.a)({inputs:{x:k},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(d),t}return k}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Re={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:o,binaryOutput:s}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(i.dataId).values,r=Object(ue.a)(e,t,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=Object(ue.b)(e,t,o,s);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{blockSize:o,dataFormat:s}=a;r.util.assert("NHWC"===s,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`));const u=i.shape[0],c=i.shape[1],l=i.shape[2],d=i.shape[3],h=c*o,p=l*o,f=d/(o*o),m=n.data.get(i.dataId).values,b=new Float32Array(u*h*p*f);let g=0;for(let e=0;e<u;++e)for(let t=0;t<h;++t){const n=Math.floor(t/o),r=t%o;for(let t=0;t<p;++t){const a=Math.floor(t/o),i=(r*o+t%o)*f;for(let t=0;t<f;++t){const r=t+i+d*(a+l*(n+c*e));b[g++]=m[r]}}}return n.makeTensorInfo([u,h,p,f],i.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,filter:s}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d}=i;Object(a.a)([o,s],"depthwiseConv2DNative");const h=r.util.computeStrides(o.shape),p=r.util.computeStrides(s.shape);let f=l;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`));const m=r.backend_util.computeConv2DInfo(o.shape,s.shape,u,f,c,d,!0),{filterHeight:b,filterWidth:g,dilationHeight:k,dilationWidth:y,padInfo:v}=m,w=v.left,I=v.top,x=m.outChannels/m.inChannels,S=new r.TensorBuffer(m.outShape,o.dtype),O=n.data.get(o.dataId).values,_=n.data.get(s.dataId).values,T=S.values;for(let e=0;e<m.batchSize;++e){const t=e*h[0],n=e*S.strides[0];for(let e=0;e<m.outHeight;++e){const r=n+e*S.strides[1],a=e*m.strideHeight-I;for(let e=0;e<b;++e){const n=a+e*k;if(n<0||n>=m.inHeight)continue;const i=e*p[0],o=t+n*h[1];for(let e=0;e<m.outWidth;++e){const t=r+e*S.strides[2],n=e*m.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=m.inWidth)continue;const a=i+e*p[1],s=o+r*m.inChannels;let u=t,c=a;for(let e=0;e<m.inChannels;++e){const t=O[s+e];for(let e=0;e<x;++e)T[u+e]+=t*_[c+e];u+=x,c+=x}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Pe={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Be};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const De={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,dy:s}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,filterShape:h}=i;Object(a.a)([o,s],"depthwiseConv2dNativeBackpropFilter");const p=r.backend_util.computeConv2DInfo(o.shape,h,u,c,l,d,!0),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,k=new r.TensorBuffer(p.filterShape,"float32"),y=p.padInfo.left,v=p.padInfo.top,w=p.outChannels/p.inChannels,I=n.data.get(o.dataId).values,x=new r.TensorBuffer(o.shape,o.dtype,I),S=n.data.get(s.dataId).values,O=new r.TensorBuffer(s.shape,s.dtype,S);for(let e=0;e<b;++e){const t=Math.max(0,Math.ceil((v-e)/f)),n=Math.min(p.outHeight,(p.inHeight+v-e)/f);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((y-r)/m)),i=Math.min(p.outWidth,(p.inWidth+y-r)/m);for(let o=0;o<p.outChannels;++o){const s=Math.trunc(o/w),u=o%w;let c=0;for(let u=0;u<p.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*f-v;for(let e=a;e<i;++e){const n=r+e*m-y;c+=x.get(u,t,n,s)*O.get(u,l,e,o)}}k.set(c,e,r,s,u)}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ge={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,filter:s}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,inputShape:h}=i;Object(a.a)([o,s],"depthwiseConv2DNativeBackpropInput");const p=r.util.computeStrides(o.shape),f=r.util.computeStrides(s.shape),m=r.backend_util.computeConv2DInfo(h,s.shape,u,c,l,d,!0),b=new r.TensorBuffer(m.inShape,"float32"),g=b.values,[k,y,v]=b.strides,w=n.data.get(o.dataId).values,[I,x,S]=p,O=n.data.get(s.dataId).values,[_,T,A]=f,{batchSize:N,filterHeight:C,filterWidth:E,inChannels:j,inHeight:$,inWidth:M,outChannels:z,outHeight:R,outWidth:F,strideHeight:B,strideWidth:P}=m,D=C-1-m.padInfo.top,G=E-1-m.padInfo.left,L=z/j;for(let e=0;e<N;++e)for(let t=0;t<j;++t)for(let n=0;n<$;++n){const r=n-D,a=Math.max(0,Math.ceil(r/B)),i=Math.min(R,(C+r)/B);for(let o=0;o<M;++o){const s=o-G,u=Math.max(0,Math.ceil(s/P)),c=Math.min(F,(E+s)/P);let l=0;for(let n=a;n<i;++n){const a=n*B-r;for(let r=u;r<c;++r){const i=I*e+x*n+S*r,o=_*(C-1-a)+T*(E-1-(r*P-s))+A*t;for(let e=0;e<L;++e){l+=w[i+(t*L+e)]*O[o+e]}}}g[k*e+y*n+v*o+t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Le={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,i=r.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,s=Object(r.buffer)([i,i],a.dtype),u=s.values;for(let e=0;e<o.length;e++)u[e*i+e]=o[e];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,s.dtype,s.values)}},We={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:i}=e,{strides:o,pad:s,dilations:u}=n,c=t,l=c.data.get(a.dataId).values,d=a.shape.length,h=c.data.get(i.dataId).values,p=i.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:k,outWidth:y,padInfo:v,strideHeight:w,strideWidth:I,filterHeight:x,filterWidth:S,dilationHeight:O,dilationWidth:_,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,i.shape,o,s,"NHWC",u),A=r.util.sizeFromShape(T),N=T.length,C=r.util.getArrayFromDType(a.dtype,A);for(let e=0;e<f;++e)for(let t=0;t<k;++t){const n=t*w-v.top;for(let o=0;o<y;++o){const s=o*I-v.left;for(let u=0;u<g;++u){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<x;++t){const o=n+t*O;if(o>=0&&o<m)for(let n=0;n<S;++n){const f=s+n*_;if(f>=0&&f<b){const s=r.util.locToIndex([e,o,f,u],d,r.util.computeStrides(a.shape)),m=r.util.locToIndex([t,n,u],p,r.util.computeStrides(i.shape)),b=l[s]+h[m];b>c&&(c=b)}}}C[r.util.locToIndex([e,t,o,u],N,r.util.computeStrides(T))]=c}}}return{dataId:c.write(r.util.toTypedArray(C,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Ue={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:i,dy:o}=e,{strides:s,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),h=r.util.toNestedArray(i.shape,l.data.get(i.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:k,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:x,dilationHeight:S,dilationWidth:O,outShape:_}=r.backend_util.computeDilation2DInfo(a.shape,i.shape,s,u,"NHWC",c);r.util.assert(o.rank===_.length,(()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${_.length}, but got ${o.rank}`));const T=r.util.toNestedArray(_,l.data.get(o.dataId).values),A=r.util.makeZerosNestedTypedArray(i.shape,i.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*v-y.top;for(let r=0;r<k;++r){const a=r*w-y.left;for(let i=0;i<b;++i){let o=Number.MIN_SAFE_INTEGER,s=0,u=0;for(let t=0;t<I;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<x;++n){const c=a+n*O;if(c>=0&&c<m){const a=d[e][r][c][i]+h[t][n][i];a>o&&(o=a,s=t,u=n)}}}A[s][u][i]+=T[e][t][r][i]}}}return{dataId:l.write(r.util.toTypedArray(A,a.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},Ve={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:i,dy:o}=e,{strides:s,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),h=r.util.toNestedArray(i.shape,l.data.get(i.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:k,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:x,dilationHeight:S,dilationWidth:O,outShape:_}=r.backend_util.computeDilation2DInfo(a.shape,i.shape,s,u,"NHWC",c);r.util.assert(o.rank===_.length,(()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${_.length}, but got ${o.rank}`));const T=r.util.toNestedArray(_,l.data.get(o.dataId).values),A=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*v-y.top;for(let r=0;r<k;++r){const a=r*w-y.left;for(let i=0;i<b;++i){let o=Number.MIN_SAFE_INTEGER,s=n<0?0:n,u=a<0?0:a;for(let t=0;t<I;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<x;++n){const c=a+n*O;if(c>=0&&c<m){const a=d[e][r][c][i]+h[t][n][i];a>o&&(o=a,s=r,u=c)}}}A[e][s][u][i]+=T[e][t][r][i]}}}return{dataId:l.write(r.util.toTypedArray(A,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var He=n(27),qe=n(85);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ke(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s,keepDims:u}=i;let c;Object(a.a)(o,"sum"),c="bool"===o.dtype?Object(de.a)({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):Object(l.a)({inputs:{x:o},backend:n});const d=c.shape.length,h=r.util.parseAxisParam(s,c.shape),p=r.backend_util.getAxesPermutation(h,d);let f=h,m=c;null!=p&&(m=Object(z.a)({inputs:{x:c},backend:n,attrs:{perm:p}}),f=r.backend_util.getInnerMostAxes(f.length,d)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,f),k=r.backend_util.upcastType(m.dtype,"int32");let y=Object(qe.a)(n,b,k);const v=r.util.sizeFromShape(g),w=n.data.get(y.dataId).values,I=n.data.get(m.dataId).values;for(let e=0;e<w.length;++e){const t=e*v;let n=0;for(let e=0;e<v;++e)n+=I[t+e];w[e]=n}if(u){const e=y;y=S({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(y.shape,h)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=p&&n.disposeIntermediateTensorInfo(m),y}const Ye={kernelName:r.Sum,backendName:"cpu",kernelFunc:Ke};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xe={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:i}=a,o=t,{allDims:s,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(i,o.length);r.backend_util.checkEinsumDimSizes(s.length,c,o);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),h=d.length;let p=null,f=s.length;const m=[];for(let e=0;e<h;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[t]);let i;r.backend_util.isIdentityPermutation(e)?i=o[t]:(i=Object(z.a)({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(i));const s=i.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);r.util.arraysEqual(i.shape,s)||(i=S({inputs:{x:i},backend:n,attrs:{shape:s}}),m.push(i)),null===p?p=i:(p=Object(He.a)({inputs:{a:i,b:p},backend:n}),m.push(p))}e<h-1&&(l[e]>=0&&(p=Ke({inputs:{x:p},backend:n,attrs:{axis:l[e]-(s.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeIntermediateTensorInfo(e);return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:i,y:o}=t;Object(a.a)([i,o],"eluGrad");const s=new Float32Array(r.util.sizeFromShape(o.shape)),u=n.data.get(o.dataId).values,c=n.data.get(i.dataId).values;for(let e=0;e<u.length;++e){const t=u[e];s[e]=t>=1?c[e]:c[e]*(t+1)}return n.makeTensorInfo(o.shape,"float32",s)}};var Qe=n(39);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Je=r.backend_util.ERF_P,et=r.backend_util.ERF_A1,tt=r.backend_util.ERF_A2,nt=r.backend_util.ERF_A3,rt=r.backend_util.ERF_A4,at=r.backend_util.ERF_A5,it=Object(s.a)(r.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Je*n);return t*(1-((((at*r+rt)*r+nt)*r+tt)*r+et)*r*Math.exp(-n*n))})),ot={kernelName:r.Erf,backendName:"cpu",kernelFunc:it};var st=n(40);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ut(e){const{inputs:t,backend:n,attrs:a}=e,{input:i}=t,{dim:o}=a,s=i.shape.length,u=i.shape.slice();let c=o;return o<0&&(r.util.assert(-(s+1)<=o,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),c=s+o+1),u.splice(c,0,1),S({inputs:{x:i},backend:n,attrs:{shape:u}})}const ct={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:ut};var lt=n(56);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt=Object(p.a)(((e,t)=>e/t)),ht=Object(H.a)(r.RealDiv,dt),pt={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:ht};var ft=n(34);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(e,t,n){const a=e.shape,i=a[0],o=a[1],s=n.data.get(e.dataId),u=s.complexTensorInfos.real,c=s.complexTensorInfos.imag,l=[i,o],d=r.util.sizeFromShape(l),h=r.util.getTypedArrayFromDType("float32",d),p=r.util.getTypedArrayFromDType("float32",d);for(let e=0;e<i;e++){const a=Object(oe.a)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,o]}}),i=Object(oe.a)({inputs:{x:c},backend:n,attrs:{begin:[e,0],size:[1,o]}}),s=Object(me.a)({inputs:{real:a,imag:i},backend:n}),{real:l,imag:d}=bt(s,t,n),f=r.backend_util.mergeRealAndImagArrays(l,d);for(let t=0;t<o;t++){const n=r.backend_util.getComplexWithIndex(f,t);h[e*o+t]=n.real,p[e*o+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),b=Object(me.a)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function bt(e,t,n){const a=r.util.sizeFromShape(e.shape),i=n.data.get(e.dataId),o=n.data.get(i.complexTensorInfos.real.dataId).values,s=n.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const i=gt(o,s,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",i.real),t=n.makeTensorInfo(u,"float32",i.imag),o=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),s=Object(l.a)({inputs:{x:o},backend:n}),c=pt.kernelFunc({inputs:{a:e,b:o},backend:n}),d=pt.kernelFunc({inputs:{a:t,b:s},backend:n}),h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),{real:h,imag:p}}return i}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let i=0;i<t;i++){let o=0,s=0;for(let a=0;a<t;a++){const u=r.backend_util.exponent(i*a,t,n),c=r.backend_util.getComplexWithIndex(e,a);o+=c.real*u.real-c.imag*u.imag,s+=c.real*u.imag+c.imag*u.real}n&&(o/=t,s/=t),r.backend_util.assignToTypedArray(a,o,s,i)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(r.backend_util.mergeRealAndImagArrays(o,s),a,t);return r.backend_util.splitRealAndImagArrays(e)}var u}function gt(e,t,n,a,i){if(1===n)return{real:e,imag:t};const o=r.backend_util.mergeRealAndImagArrays(e,t),s=n/2,u=r.backend_util.complexWithEvenIndex(o),c=u.real,l=u.imag,d=[c.length],h=i.makeTensorInfo(d,"float32",c),p=i.makeTensorInfo(d,"float32",l),f=Object(me.a)({inputs:{real:h,imag:p},backend:i}),m=r.backend_util.complexWithOddIndex(o),b=m.real,g=m.imag,k=[b.length],y=i.makeTensorInfo(k,"float32",b),v=i.makeTensorInfo(k,"float32",g),w=Object(me.a)({inputs:{real:y,imag:v},backend:i}),I=gt(c,l,s,a,i),S=I.real,O=I.imag,_=[S.length],T=i.makeTensorInfo(_,"float32",S),A=i.makeTensorInfo(_,"float32",O),N=Object(me.a)({inputs:{real:T,imag:A},backend:i}),C=gt(b,g,s,a,i),E=C.real,j=C.imag,$=[E.length],M=i.makeTensorInfo($,"float32",E),z=i.makeTensorInfo($,"float32",j),R=Object(me.a)({inputs:{real:M,imag:z},backend:i}),F=r.backend_util.exponents(n,a),B=[F.real.length],P=i.makeTensorInfo(B,"float32",F.real),D=i.makeTensorInfo(B,"float32",F.imag),G=Object(me.a)({inputs:{real:P,imag:D},backend:i}),L=Object(He.a)({inputs:{a:G,b:R},backend:i}),W=Object(x.a)({inputs:{a:N,b:L},backend:i}),U=Object(ft.a)({inputs:{a:N,b:L},backend:i}),V=Object(ve.a)({inputs:{input:W},backend:i}),H=Object(ve.a)({inputs:{input:U},backend:i}),q=ke({inputs:{input:W},backend:i}),K=ke({inputs:{input:U},backend:i}),Y=we({inputs:[V,H],backend:i,attrs:{axis:0}}),X=we({inputs:[q,K],backend:i,attrs:{axis:0}}),Z=i.data.get(Y.dataId).values,Q=i.data.get(X.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(M),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(K),i.disposeIntermediateTensorInfo(Y),i.disposeIntermediateTensorInfo(X),{real:Z,imag:Q}}const kt={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,i=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],s=S({inputs:{x:a},backend:n,attrs:{shape:[i/o,o]}}),u=mt(s,!1,n),c=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(e){const{backend:t,attrs:n}=e,{shape:a,value:i,dtype:o}=n,s=o||r.util.inferDtype(i),u=r.util.getArrayFromDType(s,r.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(u,i),t.makeTensorInfo(a,s,u)}const vt={kernelName:r.Fill,backendName:"cpu",kernelFunc:yt};const wt={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,i=n,o=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[s,u,c,l]=a.shape,d=i.data.get(a.dataId).values;for(let e=0;e<s;e++){const t=e*c*u*l;for(let e=0;e<u;e++){const n=e*(c*l);for(let e=0;e<c;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(c-e-1),s=t+n+r+a;let u=d[s];if(i>=0&&i<c){u=d[t+n+i*l+a]}o[s]=u}}}}return{dataId:i.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var It=n(57);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xt=Object(p.a)(((e,t)=>Math.floor(e/t))),St=Object(H.a)(r.FloorDiv,xt,null,"int32"),Ot={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:St};const _t={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:s}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=xe({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=Object(x.a)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=I(n,m,p,s,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tt={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:s}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Be({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=Object(x.a)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=I(n,m,p,s,f),n.disposeIntermediateTensorInfo(e)}return m}};var At=n(58);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:i}=t,o=r.util.sizeFromShape(a.shape),s=i.shape,u=s[s.length-1],[c,l,d,h]=r.backend_util.prepareAndValidate(a,i);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const p=n.data.get(i.dataId).values,f=n.bufferSync(a),m=Object(At.a)(p,f,a.dtype,l,u,d,h,a.shape,o);return n.makeTensorInfo(c,a.dtype,m.values)}};var Ct=n(59);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Et={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,indices:s}=t,{axis:u,batchDims:c}=i;Object(a.a)([o,s],"gatherV2");const l=r.util.parseAxisParam(u,o.shape)[0],d=n.data.get(s.dataId).values,h=o.shape[l];for(let e=0;e<d.length;++e){const t=d[e];r.util.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=c;null==c&&(p=0);const f=r.util.sizeFromShape(s.shape),m=r.backend_util.segment_util.collectGatherOpShapeInfo(o,s,l,p),b=S({inputs:{x:o},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),g=S({inputs:{x:s},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),k=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],y=n.bufferSync(g),v=n.bufferSync(b),w=Object(Ct.a)(v,y,k);return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(m.outputShape,w.dtype,w.values)}};var jt=n(60),$t=n(61);const Mt={kernelName:r.IFFT,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:a}=t,i=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],s=S({inputs:{x:a},backend:n,attrs:{shape:[i/o,o]}}),u=mt(s,!0,n),c=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),c}},zt=Object(s.a)(r.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Rt={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:zt},Ft=Object(s.a)(r.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Bt={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Ft},Pt=Object(s.a)(r.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Dt={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Pt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gt=n(62),Lt=n(63),Wt=n(64);const Ut={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,o=Object(Wt.a)(r,a,i);return t.makeTensorInfo([o.length],"float32",o)}};var Vt=n(65);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ht=Object(s.a)(r.Log1p,(e=>Math.log1p(e))),qt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:Ht},Kt=Object(p.a)(((e,t)=>e&&t)),Yt=Object(H.a)(r.LogicalAnd,Kt,null,"bool"),Xt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Yt},Zt=Object(s.a)(r.LogicalNot,(e=>e?0:1),"bool"),Qt={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:Zt},Jt=Object(p.a)(((e,t)=>e||t)),en=Object(H.a)(r.LogicalOr,Jt,null,"bool"),tn={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:en};const nn={kernelName:r.LRN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{depthRadius:s,bias:u,alpha:c,beta:l}=i;Object(a.a)(o,"LRN");const d=o.shape[3],h=d-1,p=n.data.get(o.dataId).values,f=r.util.sizeFromShape(o.shape),m=new Float32Array(f);function b(e){const t=e%d;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,h);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<f;e++){const t=b(e),n=p[e]*Math.pow(u+c*t,-l);m[e]=n}return n.makeTensorInfo(o.shape,o.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,y:s,dy:u}=t,{depthRadius:c,bias:l,alpha:d,beta:h}=i;Object(a.a)(u,"LRNGrad");const p=r.util.sizeFromShape(u.shape),f=u.shape[3],m=n.data.get(u.dataId).values,b=n.data.get(o.dataId).values,g=n.data.get(s.dataId).values,k=new Float32Array(p),y=p;for(let e=0;e<y;e++){const t=e%f,n=e-t+Math.max(0,t-c),r=e-t+Math.min(f,t+c+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(b[e],2);a=d*a+l;for(let t=n;t<r;t++){let n=-2*d*h*b[t]*g[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=m[e],k[t]+=n}}return n.makeTensorInfo(u.shape,o.dtype,k)}};var an=n(66),on=n(41);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sn(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{reductionIndices:s,keepDims:u}=i,c=n;let l=o.shape;const d=l.length,h=r.util.parseAxisParam(s,l);let p=h;const f=r.backend_util.getAxesPermutation(p,d);let m=c.data.get(o.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[f[t]];m=Object(on.a)(m,l,o.dtype,f,e),p=r.backend_util.getInnerMostAxes(p.length,d),l=e}Object(a.a)(o,"max"),r.backend_util.assertAxesAreInnerMostDims("max",p,d);const[b,g]=r.backend_util.computeOutAndReduceShapes(l,p),k=r.util.sizeFromShape(g),y=Object(an.a)(m,k,b,o.dtype),v=c.write(y,b,o.dtype);let w=b;if(u){w=r.backend_util.expandShapeToKeepDim(b,h)}return{dataId:v,shape:w,dtype:o.dtype}}const un={kernelName:r.Max,backendName:"cpu",kernelFunc:sn};var cn=n(67);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ln={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t;Object(a.a)(o,"maxPool");const{filterSize:s,strides:u,pad:c,dimRoundingMode:d}=i;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const h=r.backend_util.computePool2DInfo(o.shape,s,u,1,c,d);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.util.arraysEqual(h.inShape,h.outShape))p=Object(l.a)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=Q(e,o.shape,o.dtype,t,h,"max");p=n.makeTensorInfo(h.outShape,o.dtype,a.values)}return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{filterSize:s,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=i;Object(a.a)(o,"maxPool3d");const h=r.backend_util.computePool3DInfo(o.shape,s,u,1,c,l,d),p=ee(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hn={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,input:s}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=i;Object(a.a)([o,s],"maxPool3DGrad");const h=r.backend_util.computePool3DInfo(s.shape,u,c,1,l,d),p=function(e,t){const n=Object(r.buffer)(t.outShape,"int32"),a=t.strideDepth,i=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const k=g*a-p;let y=k;for(;y<0;)y+=s;const v=Math.min(t.inDepth,l+k);for(let a=0;a<t.outHeight;++a){const l=a*i-f;let p=l;for(;p<0;)p+=u;const w=Math.min(t.inHeight,d+l);for(let i=0;i<t.outWidth;++i){const f=i*o-m;let I=f;for(;I<0;)I+=c;const x=Math.min(t.inWidth,h+f);let S=Number.NEGATIVE_INFINITY,O=-1;for(let t=y;t<v;t+=s){const n=t-k;for(let a=p;a<w;a+=u){const i=a-l;for(let o=I;o<x;o+=c){const s=o-f,u=e.get(r,t,a,o,b);u>=S&&(S=u,O=n*d*h+i*d+s)}}}n.set(O,r,g,a,i,b)}}}return n}(n.bufferSync(s),h),f=h.strideDepth,m=h.strideHeight,b=h.strideWidth,g=h.dilationDepth,k=h.dilationHeight,y=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,I=h.effectiveFilterWidth,x=v-1-h.padInfo.front,S=I-1-h.padInfo.left,O=w-1-h.padInfo.top,_=Object(r.buffer)(s.shape,"float32"),T=n.bufferSync(o);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){const i=n-x,o=r-O,s=a-S;let u=0;for(let n=0;n<v;n+=g){const r=(i+n)/f;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<w;a+=k){const i=(o+a)/m;if(!(i<0||i>=h.outHeight||Math.floor(i)!==i))for(let o=0;o<I;o+=y){const c=(s+o)/b;if(c<0||c>=h.outWidth||Math.floor(c)!==c)continue;const l=v*w*I-1-p.get(e,r,i,c,t)===n*w*I+a*I+o?1:0;if(0===l)continue;u+=T.get(e,r,i,c,t)*l}}}_.set(u,e,n,r,a,t)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{dy:o,input:s,output:u}=t,c=s;Object(a.a)([s,u],"maxPoolGrad");const{filterSize:l,strides:d,pad:h,dimRoundingMode:p}=i,f=r.backend_util.computePool2DInfo(c.shape,l,d,1,h,p),m=n.data.get(c.dataId).values,b=Object(r.buffer)(f.outShape,c.dtype,J(m,c.shape,c.dtype,f).values),g=f.strideHeight,k=f.strideWidth,y=f.dilationHeight,v=f.dilationWidth,w=f.effectiveFilterHeight,I=f.effectiveFilterWidth,x=I-1-f.padInfo.left,S=w-1-f.padInfo.top,O=Object(r.buffer)(c.shape,"float32"),_=n.data.get(o.dataId).values,T=Object(r.buffer)(o.shape,"float32",_);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const a=n-S,i=r-x;let o=0;for(let n=0;n<w;n+=y){const r=(a+n)/g;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let a=0;a<I;a+=v){const s=(i+a)/k;if(s<0||s>=f.outWidth||Math.floor(s)!==s)continue;const u=w*I-1-b.get(e,r,s,t)===n*I+a?1:0;if(0===u)continue;o+=T.get(e,r,s,t)*u}}O.set(o,e,n,r,t)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const fn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:i}=e,{filterSize:o,strides:s,pad:u,includeBatchInIndex:c}=t,l=n;Object(a.a)(i,"MaxPoolWithArgmax");const d=l.data.get(i.dataId).values,h=r.backend_util.computePool2DInfo(i.shape,o,s,[1,1],u),[p,f]=function(e,t,n,a,i){const o=Q(e,0,n,r.util.computeStrides(t),i,"max"),s=J(e,t,n,i,!0,a);return[o.values,s.values]}(d,i.shape,i.dtype,c,h),m=l.write(p,h.outShape,i.dtype),b=l.write(f,h.outShape,i.dtype);return[{dataId:m,shape:h.outShape,dtype:i.dtype},{dataId:b,shape:h.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,keepDims:s}=a,u=r.util.parseAxisParam(o,i.shape),c=r.backend_util.computeOutAndReduceShapes(i.shape,u)[1],l=r.util.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Object(de.a)({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=ht({inputs:{a:p,b:h},backend:n});d.push(f);const m=Ke({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:s}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{axis:s,keepDims:u}=i;Object(a.a)(o,"min");const c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,o.shape.length);let h=o;null!=d&&(h=Object(z.a)({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(h);const k=n.makeTensorInfo(p,h.dtype,b);if(u){const e=S({inputs:{x:k},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(k),e}return k}};var gn=n(68);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{paddings:s,mode:u}=i;Object(a.a)(o,"mirrorPad");const c=s.map(((e,t)=>e[0]+o.shape[t]+e[1])),l=s.map((e=>e[0])),d=s.map(((e,t)=>e[0]+o.shape[t])),h="reflect"===u?0:1,p=n.data.get(o.dataId).values,f=o.shape.length,m=r.util.computeStrides(o.shape),b=r.util.sizeFromShape(c),g=c.length,k=r.util.computeStrides(c),y=r.util.getTypedArrayFromDType(o.dtype,b);for(let e=0;e<b;e++){let t=r.util.indexToLoc(e,g,k);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=d[e]&&(t[e]=2*(d[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));const n=r.util.locToIndex(t,f,m);y[e]=p[n]}return{dataId:n.write(y,c,o.dtype),shape:c,dtype:o.dtype}}},yn=Object(p.a)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),vn=Object(H.a)(r.Mod,yn),wn={kernelName:r.Mod,backendName:"cpu",kernelFunc:vn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var In=n(45);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(e){const{inputs:t,backend:n,attrs:a}=e,{logits:i}=t,{dim:o}=a,s=i.shape.length;let u=o;if(-1===u&&(u=s-1),u!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${u}`);const c=r.util.parseAxisParam([u],i.shape),l=sn({inputs:{x:i},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,c),h=S({inputs:{x:l},backend:n,attrs:{shape:d}}),p=Object(ft.a)({inputs:{a:i,b:h},backend:n}),f=Object(st.a)({inputs:{x:p},backend:n}),m=Ke({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=S({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ht({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Sn={kernelName:r.Softmax,backendName:"cpu",kernelFunc:xn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{logits:o}=t,{numSamples:s,seed:u,normalized:c}=i;Object(a.a)(o,"multinomial");const l=c?o:xn({inputs:{logits:o},backend:n,attrs:{dim:-1}}),d=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,f=[d,s],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let e=0;e<d;++e){const t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=In.alea(u.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();m[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){m[a+e]=r;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(f,"int32",m)}};var _n=n(69);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn=r.kernel_impls.nonMaxSuppressionV3Impl;const An={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:c}=r;Object(a.a)(i,"NonMaxSuppression");const l=n.data.get(i.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:h}=Tn(l,d,s,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Nn=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r;Object(a.a)(i,"NonMaxSuppressionPadded");const d=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:p,validOutputs:f}=Nn(d,h,s,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},En=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jn={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r;Object(a.a)(i,"NonMaxSuppressionWithScore");const d=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,p=s,f=u,m=c,b=l,{selectedIndices:g,selectedScores:k}=En(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([k.length],"float32",new Float32Array(k))]}};var $n=n(70);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{indices:o}=t,{depth:s,onValue:u,offValue:c}=i;Object(a.a)(o,"oneHot");const l=r.util.sizeFromShape(o.shape),d=new Float32Array(l*s);d.fill(c);const h=n.data.get(o.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(d[e*s+h[e]]=u);return n.makeTensorInfo([...o.shape,s],"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(ve.a)({inputs:{input:r},backend:n}),t=zn({inputs:{x:e},backend:n}),a=ke({inputs:{input:r},backend:n}),i=zn({inputs:{x:a},backend:n}),o=Object(me.a)({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}return yt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Rn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:zn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Object(ve.a)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=ke({inputs:{input:a},backend:r}),o=zn({inputs:{x:i},backend:r}),s=Object(me.a)({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),s}return yt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:i}=a;if(1===t.length)return ut({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],c=we({inputs:t.map((e=>{const t=ut({inputs:{input:e},backend:n,attrs:{dim:i}});return u.push(t),t})),backend:n,attrs:{axis:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const Pn={kernelName:r.Pack,backendName:"cpu",kernelFunc:Bn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{paddings:s,constantValue:u}=i;Object(a.a)(o,"pad");const c=s.map(((e,t)=>e[0]+o.shape[t]+e[1])),l=s.map((e=>e[0])),d=n.data.get(o.dataId).values,h=r.util.sizeFromShape(o.shape),p=o.shape.length,f=r.util.computeStrides(o.shape),m=r.util.sizeFromShape(c),b=c.length,g=r.util.computeStrides(c),k=r.util.getTypedArrayFromDType(o.dtype,m);0!==u&&k.fill(u);for(let e=0;e<h;e++){const t=r.util.indexToLoc(e,p,f).map(((e,t)=>e+l[t]));k[r.util.locToIndex(t,b,g)]=d[e]}return{dataId:n.write(k,c,o.dtype),shape:c,dtype:o.dtype}}},Gn=Object(p.a)(((e,t)=>Math.pow(e,t))),Ln=Object(H.a)(r.Pow,Gn),Wn={kernelName:r.Pow,backendName:"cpu",kernelFunc:Ln};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Un=n(71),Vn=n(72);const Hn={kernelName:r.Range,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:i,step:o}=n,s=Object(Vn.a)(r,a,o,i);return t.makeTensorInfo([s.length],i,s)}},qn=Object(s.a)(r.Reciprocal,(e=>1/e)),Kn={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:qn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:i}=e,{images:o}=t,{alignCorners:s,halfPixelCenters:u,size:c}=i;Object(a.a)(o,"resizeBilinear");const l=r.util.computeStrides(o.shape),[d,h]=c,[p,f,m,b]=o.shape,g=n.data.get(o.dataId).values,k=new Float32Array(r.util.sizeFromShape([p,d,h,b])),y=[s&&d>1?f-1:f,s&&h>1?m-1:m],v=[s&&d>1?d-1:d,s&&h>1?h-1:h];let w=0;const I=y[0]/v[0],x=y[1]/v[1];for(let e=0;e<p;e++)for(let t=0;t<d;t++){let n;n=u?I*(t+.5)-.5:I*t;const r=Math.max(0,Math.floor(n)),a=n-r,i=Math.min(f-1,Math.ceil(n)),o=e*l[0]+r*l[1],s=e*l[0]+i*l[1];for(let e=0;e<h;e++){let t;t=u?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(m-1,Math.ceil(t)),c=o+n*l[2],d=s+n*l[2],h=o+i*l[2],p=s+i*l[2];for(let e=0;e<b;e++){const t=g[c+e],n=g[d+e],i=t+(g[h+e]-t)*r,o=i+(n+(g[p+e]-n)*r-i)*a;k[w++]=o}}}return n.makeTensorInfo([p,d,h,b],"float32",k)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:o,dy:s}=t,{alignCorners:u}=i;Object(a.a)([s,o],"resizeBilinearGrad");const c=r.util.computeStrides(o.shape),[l,d,h,p]=o.shape,[,f,m]=s.shape,b=new Float32Array(l*d*h*p),g=[u&&f>1?d-1:d,u&&m>1?h-1:h],k=[u&&f>1?f-1:f,u&&m>1?m-1:m],y=g[0]/k[0],v=g[1]/k[1],w=n.data.get(s.dataId).values;let I=0;for(let e=0;e<l;e++){const t=e*c[0];for(let e=0;e<f;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),i=t+r*c[1],o=t+a*c[1],s=n-r,u=1-s;for(let e=0;e<m;e++){const t=e*v,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,l=1-a,d=i+n*c[2],f=i+r*c[2],m=o+n*c[2],g=o+r*c[2],k=u*l,y=u*a,x=s*l,S=s*a;for(let e=0;e<p;e++){const t=w[I++];b[d+e]+=t*k,b[f+e]+=t*y,b[m+e]+=t*x,b[g+e]+=t*S}}}}return n.makeTensorInfo([l,h,d,p],"float32",b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:o}=t,{alignCorners:s,halfPixelCenters:u,size:c}=i;Object(a.a)(o,"resizeNearestNeighbor");const l=r.util.computeStrides(o.shape),[d,h]=c,[p,f,m,b]=o.shape,g=n.data.get(o.dataId).values,k=new Float32Array(p*d*h*b),y=[s&&d>1?f-1:f,s&&h>1?m-1:m],v=[s&&d>1?d-1:d,s&&h>1?h-1:h],w=y[0]/v[0],I=y[1]/v[1];let x=0;for(let e=0;e<p;e++){const t=e*l[0];for(let e=0;e<d;e++){const n=u?w*(e+.5):w*e;let r=Math.min(f-1,s?Math.round(n):Math.floor(n));u&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<h;e++){const t=u?I*(e+.5):I*e;let n=Math.min(m-1,s?Math.round(t):Math.floor(t));u&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<b;e++){const t=g[r+e];k[x++]=t}}}}return n.makeTensorInfo([p,d,h,b],o.dtype,k)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{images:o,dy:s}=t,{alignCorners:u}=i;Object(a.a)([s,o],"resizeNearestNeighborGrad");const c=r.util.computeStrides(o.shape),l=r.util.computeStrides(s.shape),[d,h,p,f]=o.shape,[,m,b]=s.shape,g=new Float32Array(d*h*p*f),k=n.data.get(s.dataId).values,y=[u&&m>1?h-1:h,u&&b>1?p-1:p],v=[u&&m>1?m-1:m,u&&b>1?b-1:b],w=y[0]/v[0],I=y[1]/v[1],x=1/w,S=1/I,O=2*Math.ceil(x)+2,_=2*Math.ceil(S)+2;for(let e=0;e<d;e++){const t=e*c[0];for(let e=0;e<h;e++){const n=t+e*c[1],r=Math.floor(e*x),a=Math.floor(r-O/2);for(let r=0;r<p;r++){const i=n+r*c[2],o=Math.floor(r*S),s=Math.floor(o-_/2);for(let n=0;n<f;n++){let o=0;for(let i=0;i<O;i++){const c=i+a;if(c<0||c>=m)continue;const d=t+c*l[1],f=c*w;if(e===Math.min(h-1,u?Math.round(f):Math.floor(f)))for(let e=0;e<_;e++){const t=e+s;if(t<0||t>=b)continue;const a=d+t*l[2],i=t*I;r===Math.min(p-1,u?Math.round(i):Math.floor(i))&&(o+=k[a+n])}}g[i+n]=o}}}}return n.makeTensorInfo(o.shape,o.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{dims:s}=i;Object(a.a)(o,"reverse");const u=o.shape.length,c=r.util.parseAxisParam(s,o.shape);if(0===u)return Object(l.a)({inputs:{x:o},backend:n});const d=new r.TensorBuffer(o.shape,o.dtype),h=n.bufferSync(o);for(let e=0;e<d.size;e++){const t=d.indexToLoc(e),n=t.slice();c.forEach((e=>n[e]=o.shape[e]-1-n[e])),d.set(h.get(...n),...t)}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},er={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:i,fillValue:o,center:s}=t,u=n,c=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,h,p]=a.shape,[f,m]=r.backend_util.getImageCenter(s,d,h),b=Math.sin(i),g=Math.cos(i),k=u.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=e*h*d*p;for(let e=0;e<d;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const s=[l,e,r,i],u=s[2],y=s[1];let v=(u-f)*g-(y-m)*b,w=(u-f)*b+(y-m)*g;v=Math.round(v+f),w=Math.round(w+m);let I=o;if("number"!=typeof o&&(I=3===i?255:o[i]),v>=0&&v<h&&w>=0&&w<d){I=k[t+w*(h*p)+v*p+i]}c[t+n+a+i]=I}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},tr=Object(s.a)(r.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),nr={kernelName:r.Round,backendName:"cpu",kernelFunc:tr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rr=n(73);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(e,t,n,a,i,o,s,u,c,l){const d=[a/i,i],h=e.values,p=t.values;if(0===a)return Object(r.buffer)(n,t.dtype);const f=Object(r.buffer)(d,t.dtype);f.values.fill(c);for(let e=0;e<o;e++){const r=[];let o=0;for(let t=0;t<s;t++){const n=h[e*s+t];r.push(n),o+=n*u[t]}if(o<0||o>=a/i)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<i;n++)l?f.values[o*i+n]+=p[e*i+n]:f.values[o*i+n]=0===t.rank?p[0]:p[e*i+n]}return f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:i,updates:o}=t,{shape:s}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(o,i,s),p=ar(n.bufferSync(i),n.bufferSync(o),s,h,l,c,u,d,0,!0);return n.makeTensorInfo(s,p.dtype,p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:i,t:o,e:s}=t;Object(a.a)([i,o,s],"select");const u=i.shape.length,c=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values,d=n.data.get(s.dataId).values,h=Object(r.upcastType)(o.dtype,s.dtype),p=r.util.makeZerosTypedArray(r.util.sizeFromShape(o.shape),h);let f=0;const m=0===u||u>1||1===o.shape.length?1:r.util.sizeFromShape(o.shape.slice(1));for(let e=0;e<c.length;e++)for(let t=0;t<m;t++)1===c[e]?p[f++]=l[e]:p[f++]=d[e];return n.makeTensorInfo(o.shape,h,p)}},sr=r.backend_util.SELU_SCALEALPHA,ur=r.backend_util.SELU_SCALE,cr=Object(s.a)(r.Selu,(e=>e>=0?ur*e:sr*(Math.exp(e)-1))),lr={kernelName:r.Selu,backendName:"cpu",kernelFunc:cr},dr=Object(s.a)(r.Sign,(e=>e<0?-1:e>0?1:0)),hr={kernelName:r.Sign,backendName:"cpu",kernelFunc:dr},pr=Object(s.a)(r.Sin,(e=>Math.sin(e))),fr={kernelName:r.Sin,backendName:"cpu",kernelFunc:pr},mr=Object(s.a)(r.Sinh,(e=>Math.sinh(e))),br={kernelName:r.Sinh,backendName:"cpu",kernelFunc:mr},gr=Math.log(1.1920928955078125e-7)+2,kr=Object(s.a)(r.Softplus,(e=>{const t=e>-gr,n=e<gr,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),yr={kernelName:r.Softplus,backendName:"cpu",kernelFunc:kr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{blockShape:s,paddings:u}=i;Object(a.a)([o],"spaceToBatchND");const c=r.util.sizeFromShape(s),l=[[0,0]];l.push(...u);for(let e=1+s.length;e<o.shape.length;++e)l.push([0,0]);const d=Dn.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:l,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,s,c,!1),p=r.backend_util.getPermuted(h.length,s.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,s,c,!1),m=S({inputs:{x:d},backend:n,attrs:{shape:h}}),b={x:m},g={perm:p},k=Object(z.a)({inputs:b,backend:n,attrs:g}),y=S({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(k),y}};var wr=n(74);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:o}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const s=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,l=n.data.get(o.dataId).values[0],[d,h,p,f,m]=Object(wr.a)(s,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var xr=n(75);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.data.get(a.dataId).values),s=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[c,l,d]=Object(xr.a)(s,r.shape,r.dtype,o,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}};var Or=n(43);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[c,l]=Object(Or.a)(o,r.shape,r.dtype,s,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[c,l]=Object(Or.a)(o,r.shape,r.dtype,s,u);return n.makeTensorInfo(l,r.dtype,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:i,sparseValues:o,defaultValue:s}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=r.backend_util.calculateShapes(o,i,u),f=ar(n.bufferSync(i),n.bufferSync(o),u,p,d,l,c,h,n.data.get(s.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{numOrSizeSplits:o,axis:s}=a,u=r.util.parseAxisParam(s,i.shape)[0],c=r.backend_util.prepareSplitSize(i,o,u),l=new Array(i.shape.length).fill(0),d=i.shape.slice();return c.map((e=>{const t=[...d];t[u]=e;const r=Object(oe.a)({inputs:{x:i},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r}))}};var Cr=n(76);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(a.a)(n,"square");const i=r.data.get(n.dataId).values,o=new Float32Array(i.length);for(let e=0;e<i.length;++e){const t=i[e];o[e]=t*t}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var jr=n(77);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r=Object(s.a)(r.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Mr={kernelName:r.Step,backendName:"cpu",kernelFunc:$r};var zr=n(78);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:s,end:u,strides:c,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f}=i;Object(a.a)(o,"stridedSlice");const{finalShapeSparse:m,finalShape:b,isIdentity:g,sliceDim0:k,isSimpleSlice:y,begin:v,end:w,strides:I}=r.slice_util.sliceInfo(o.shape,s,u,c,l,d,h,p,f);let x;if(g)x=S({inputs:{x:o},backend:n,attrs:{shape:b}});else if(k||y){r.util.assert(o.shape.length>=1,(()=>`Input must have rank at least 1, got: ${o.shape.length}`));const e=r.slice_util.computeOutShape(v,w,I),t=Object(oe.a)({inputs:{x:o},backend:n,attrs:{begin:v,size:e}});x=S({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(o),t=Object(zr.a)(m,e,I,v);x=n.makeTensorInfo(b,t.dtype,t.values)}return x}};var Fr=n(79);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:o,rightPad:s,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Object(Fr.a)(h,p,a,i,o,s,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var Pr=n(80);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:o}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const s=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,d]=Object(Pr.a)(s,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var Gr=n(81);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(i.dataId).values,s=Object(Gr.a)(o,a);return n.makeTensorInfo(i.shape,"int32",s)}},Wr=Object(s.a)(r.Tan,(e=>Math.tan(e))),Ur={kernelName:r.Tan,backendName:"cpu",kernelFunc:Wr},Vr=Object(s.a)(r.Tanh,(e=>Math.tanh(e))),Hr={kernelName:r.Tanh,backendName:"cpu",kernelFunc:Vr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qr=n(82);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reps:o}=r;Object(a.a)(i,"tile");const s=Object(qr.a)(n.bufferSync(i),o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var Yr=n(83);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{k:o,sorted:s}=r;Object(a.a)(i,"topk");const u=n.data.get(i.dataId).values,[c,l]=Object(Yr.a)(u,i.shape,i.dtype,o,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:i,transforms:o}=t,{interpolation:s,fillMode:u,fillValue:c,outputShape:l}=n,[d,h,p,f]=i.shape,[m,b]=null!=l?l:[h,p],g=[d,m,b,f],k=r.util.computeStrides(i.shape),y=k[0],v=k[1],w=k[2],I=r.util.getTypedArrayFromDType(i.dtype,r.util.sizeFromShape(g));I.fill(c);const x=a.data.get(i.dataId).values,S=a.data.get(o.dataId).values;for(let e=0;e<d;++e){const t=1===o.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<b;++r)for(let a=0;a<f;++a){let i;const o=t[6]*r+t[7]*n+1;if(0===o)continue;const l=(t[0]*r+t[1]*n+t[2])/o,d=(t[3]*r+t[4]*n+t[5])/o,f=Qr(l,p,u),m=Qr(d,h,u);switch(s){case"nearest":i=ea(x,h,p,y,v,w,e,m,f,a,c);break;case"bilinear":i=ta(x,h,p,y,v,w,e,m,f,a,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}I[e*y+n*v+r*w+a]=i}return a.makeTensorInfo(g,i.dtype,I)}return{dataId:a.write(I,g,i.dtype),shape:i.shape,dtype:i.dtype}}};function Qr(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Jr(e,t,n,r,a,i,o,s,u,c,l){return 0<=s&&s<t&&0<=u&&u<n?e[o*r+s*a+u*i+c]:l}function ea(e,t,n,r,a,i,o,s,u,c,l){return Jr(e,t,n,r,a,i,o,Math.round(s),Math.round(u),c,l)}function ta(e,t,n,r,a,i,o,s,u,c,l){const d=Math.floor(s),h=Math.floor(u),p=d+1,f=h+1;return(p-s)*((f-u)*Jr(e,t,n,r,a,i,o,d,h,c,l)+(u-h)*Jr(e,t,n,r,a,i,o,d,f,c,l))+(s-d)*((f-u)*Jr(e,t,n,r,a,i,o,p,h,c,l)+(u-h)*Jr(e,t,n,r,a,i,o,p,f,c,l))}var na=n(84);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:i}=n,{x:o}=t;Object(a.a)(o,"unique");const s=r.data.get(o.dataId).values,{outputValues:u,outputShape:c,indices:l}=Object(na.a)(s,i,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,u),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const o=a.shape.length,s=a.shape[i],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(u[c++]=a.shape[e]);const l=new Array(o).fill(0),d=a.shape.slice();d[i]=1;const h=new Array(s);for(let e=0;e<h.length;e++){l[i]=e;const t=Object(oe.a)({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[e]=S({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:o,segmentIds:s}=t,{numSegments:u}=i;Object(a.a)(o,"unsortedSegmentSum");const c=[],l=[],d=o.shape.length-s.shape.length;let h=s;for(let e=0;e<d;++e){const t=ut({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<u;++e){const t=r.util.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),i=Object(Qe.a)({inputs:{a:a,b:h},backend:n}),s=Object(de.a)({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=Object(He.a)({inputs:{a:s,b:o},backend:n}),d=Ke({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});c.push(d),l.push(a),l.push(i),l.push(s),l.push(u),l.push(d)}const p=Bn({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},oa=[A,N.a,E,$,x.b,M,R,F,B,P,G,W,V,Y,Z,te,ne,re,ae,T,ie,se,ce,le,de.b,he.a,fe,me.b,be,Ie,Se,Oe,_e,Te,Ae,Ne,Ee,$e,Me,ze,Re,Fe,Pe,De,Ge,Le,We,Ue,Ve,Xe,c,Ze,Qe.b,ot,st.b,ct,lt.a,kt,vt,wt,It.a,Ot,_t,Tt,Nt,Et,jt.a,$t.a,l.b,Mt,ye,Rt,Bt,Dt,h,Gt.a,Lt.a,Ut,Vt.a,qt,Xt,Qt,tn,nn,rn,un,cn.a,ln,dn,hn,pn,fn,mn,bn,gn.a,kn,wn,On,He.b,_n.a,An,Cn,jn,$n.a,Mn,Fn,Pn,Dn,Wn,b,Un.a,Hn,ve.b,pt,Kn,k,v,O,Yn,Xn,Zn,Qn,Jn,er,nr,rr.a,ir,or,lr,w.b,hr,fr,br,oe.b,Sn,yr,vr,Ir,Sr,_r,Tr,Ar,Nr,Cr.a,Er,jr.a,Mr,Rr,Br,Dr,Lr,ft.b,Ye,Ur,Hr,Kr,Xr,Zr,z.b,ra,aa,ia,Rn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of oa)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},,function(e,t,n){e.exports=n(94)},function(e,t,n){"use strict";n.r(t),function(e){var t=n(87),r=n(44),a=n(86),i=n(36),o=n(11);null==navigator.ml_polyfill&&(navigator.ml_polyfill=new t.a),null==e.ML&&(e.ML=t.a),null==e.MLContext&&(e.MLContext=r.a),null==e.MLGraphBuilderPolyfill&&(e.MLGraphBuilderPolyfill=i.d),null==e.MLGraph&&(e.MLGraph=a.a),null==e.MLOperand&&(e.MLOperand=o.c)}.call(this,n(46))},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(96),a=n(97),i=n(98);function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(o()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=h(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n),a=(e=s(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|p(t.length);return 0===(e=s(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?s(e,0):h(e,t);if("Buffer"===t.type&&i(t.data))return h(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(l(t),e=s(e,t<0?0:0|p(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function h(e,t){var n=t.length<0?0:0|p(t.length);e=s(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e){if(e>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|e}function f(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return G(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return L(e).length;default:if(r)return G(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return C(this,t,n);case"utf8":case"utf-8":return _(this,t,n);case"ascii":return A(this,t,n);case"latin1":case"binary":return N(this,t,n);case"base64":return O(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function g(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:k(e,t,n,r,a);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):k(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function k(e,t,n,r,a){var i,o=1,s=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,s/=2,u/=2,n/=2}function c(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(a){var l=-1;for(i=n;i<s;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===u)return l*o}else-1!==l&&(i-=i-l),l=-1}else for(n+u>s&&(n=s-u),i=n;i>=0;i--){for(var d=!0,h=0;h<u;h++)if(c(e,i+h)!==c(t,h)){d=!1;break}if(d)return i}return-1}function y(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var o=0;o<r;++o){var s=parseInt(t.substr(2*o,2),16);if(isNaN(s))return o;e[n+o]=s}return o}function v(e,t,n,r){return W(G(t,e.length-n),e,n,r)}function w(e,t,n,r){return W(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function I(e,t,n,r){return w(e,t,n,r)}function x(e,t,n,r){return W(L(t),e,n,r)}function S(e,t,n,r){return W(function(e,t){for(var n,r,a,i=[],o=0;o<e.length&&!((t-=2)<0);++o)r=(n=e.charCodeAt(o))>>8,a=n%256,i.push(a),i.push(r);return i}(t,e.length-n),e,n,r)}function O(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function _(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var i,o,s,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[a+1]))&&(u=(31&c)<<6|63&i)>127&&(l=u);break;case 3:i=e[a+1],o=e[a+2],128==(192&i)&&128==(192&o)&&(u=(15&c)<<12|(63&i)<<6|63&o)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[a+1],o=e[a+2],s=e[a+3],128==(192&i)&&128==(192&o)&&128==(192&s)&&(u=(15&c)<<18|(63&i)<<12|(63&o)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=T));return n}(r)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=o(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?s(e,t):void 0!==n?"string"==typeof r?s(e,t).fill(n,r):s(e,t).fill(n):s(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return d(null,e)},u.allocUnsafeSlow=function(e){return d(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,i=Math.min(n,r);a<i;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!i(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(!u.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,a),a+=o.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?_(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var i=(a>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),s=Math.min(i,o),c=this.slice(r,a),l=e.slice(t,n),d=0;d<s;++d)if(c[d]!==l[d]){i=c[d],o=l[d];break}return i<o?-1:o<i?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return y(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return I(this,e,t,n);case"base64":return x(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var T=4096;function A(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function N(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function C(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",i=t;i<n;++i)a+=D(e[i]);return a}function E(e,t,n){for(var r=e.slice(t,n),a="",i=0;i<r.length;i+=2)a+=String.fromCharCode(r[i]+256*r[i+1]);return a}function j(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function $(e,t,n,r,a,i){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<i)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function M(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,i=Math.min(e.length-n,2);a<i;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function z(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,i=Math.min(e.length-n,4);a<i;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function R(e,t,n,r,a,i){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function F(e,t,n,r,i){return i||R(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function B(e,t,n,r,i){return i||R(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var i=0;i<a;++i)n[i]=this[i+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||j(e,t,this.length);for(var r=this[e],a=1,i=0;++i<t&&(a*=256);)r+=this[e+i]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||j(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||j(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||j(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||j(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||j(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||j(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||j(e,t,this.length);for(var r=this[e],a=1,i=0;++i<t&&(a*=256);)r+=this[e+i]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||j(e,t,this.length);for(var r=t,a=1,i=this[e+--r];r>0&&(a*=256);)i+=this[e+--r]*a;return i>=(a*=128)&&(i-=Math.pow(2,8*t)),i},u.prototype.readInt8=function(e,t){return t||j(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||j(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||j(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||j(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||j(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||j(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||j(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||j(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||j(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||$(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,i=0;for(this[t]=255&e;++i<n&&(a*=256);)this[t+i]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||$(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,i=1;for(this[t+a]=255&e;--a>=0&&(i*=256);)this[t+a]=e/i&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):M(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):M(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):z(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):z(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);$(this,e,t,n,a-1,-a)}var i=0,o=1,s=0;for(this[t]=255&e;++i<n&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);$(this,e,t,n,a-1,-a)}var i=n-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):M(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):M(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):z(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||$(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):z(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return F(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return F(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,i=r-n;if(this===e&&n<t&&t<r)for(a=i-1;a>=0;--a)e[a+t]=this[a+n];else if(i<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<i;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},u.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var o=u.isBuffer(e)?e:G(new u(e,r).toString()),s=o.length;for(i=0;i<n-t;++i)this[i+t]=o[i%s]}return this};var P=/[^+\/0-9A-Za-z-_]/g;function D(e){return e<16?"0"+e.toString(16):e.toString(16)}function G(e,t){var n;t=t||1/0;for(var r=e.length,a=null,i=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&i.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&i.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;i.push(n)}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function L(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(P,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(46))},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=c(e),o=r[0],s=r[1],u=new i(function(e,t,n){return 3*(t+n)/4-n}(0,o,s)),l=0,d=s>0?o-4:o;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===s&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===s&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,i=[],o=16383,s=0,u=n-a;s<u;s+=o)i.push(l(e,s,s+o>u?u:s+o));1===a?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return i.join("")};for(var r=[],a=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=o.length;s<u;++s)r[s]=o[s],a[o.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,i,o=[],s=t;s<n;s+=3)a=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),o.push(r[(i=a)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return o.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var i,o,s=8*a-r-1,u=(1<<s)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=e[t+d];for(d+=h,i=p&(1<<-l)-1,p>>=-l,l+=s;l>0;i=256*i+e[t+d],d+=h,l-=8);for(o=i&(1<<-l)-1,i>>=-l,l+=r;l>0;o=256*o+e[t+d],d+=h,l-=8);if(0===i)i=1-c;else{if(i===u)return o?NaN:1/0*(p?-1:1);o+=Math.pow(2,r),i-=c}return(p?-1:1)*o*Math.pow(2,i-r)},t.write=function(e,t,n,r,a,i){var o,s,u,c=8*i-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:i-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(o++,u/=2),o+d>=l?(s=0,o=l):o+d>=1?(s=(t*u-1)*Math.pow(2,a),o+=d):(s=t*Math.pow(2,d-1)*Math.pow(2,a),o=0));a>=8;e[n+p]=255&s,p+=f,s/=256,a-=8);for(o=o<<a|s,c+=a;c>0;e[n+p]=255&o,p+=f,o/=256,c-=8);e[n+p-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=()=>n(100);let a;class i{constructor(){this.util=n(101),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&!Object(t.c)().get("IS_BROWSER")&&Object(t.c)().setPlatform("node",new i)}).call(this,n(50))},function(e,t){},function(e,t){},function(e,t,n){(function(e){var r;!function(e,a,i){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&s(r,n),a.state=function(){return s(n,{})}),a}a&&a.exports?a.exports=u:n(25)&&n(38)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n(25))}).call(this,n(37)(e))},function(e,t,n){(function(e){var r;!function(e,a,i){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&s(r,n),a.state=function(){return s(n,{})}),a}a&&a.exports?a.exports=u:n(25)&&n(38)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n(25))}).call(this,n(37)(e))},function(e,t,n){(function(e){var r;!function(e,a,i){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&s(r,n),a.state=function(){return s(n,{})}),a}a&&a.exports?a.exports=u:n(25)&&n(38)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n(25))}).call(this,n(37)(e))},function(e,t,n){(function(e){var r;!function(e,a,i){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&s(r,n),a.state=function(){return s(n,{})}),a}a&&a.exports?a.exports=u:n(25)&&n(38)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n(25))}).call(this,n(37)(e))},function(e,t,n){(function(e){var r;!function(e,a,i){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,o,s=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(o=o+1640531527|0,a=0==(n=s[127&i]^=r+o)?a+1:0);for(a>=128&&(s[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=s[a+34&127],n=s[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,s[a]=r^n;e.w=o,e.X=s,e.i=a}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&s(r,n),a.state=function(){return s(n,{})}),a}a&&a.exports?a.exports=u:n(25)&&n(38)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n(25))}).call(this,n(37)(e))},function(e,t,n){(function(e){var r;!function(e,a,i){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&s(r,n),a.state=function(){return s(n,{})}),a}a&&a.exports?a.exports=u:n(25)&&n(38)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n(25))}).call(this,n(37)(e))},function(e,t,n){var r;!function(a,i){var o,s=this,u=256,c=i.pow(u,6),l=i.pow(2,52),d=2*l,h=255;function p(e,t,n){var r=[],h=g(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,k(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),k(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,k(a)]}}():e,3),r),p=new f(r),y=function(){for(var e=p.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,g(k(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(y,h,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[i=h&i+e[a%n]+(t=o[a])],o[i]=t;(r.g=function(e){for(var t,n=0,a=r.i,i=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*u+o[h&(o[a]=o[i=h&i+t])+(o[i]=t)];return r.i=a,r.j=i,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(b(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return k(t)}function k(e){return String.fromCharCode.apply(0,e)}if(i.seedrandom=p,g(i.random(),a),e.exports){e.exports=p;try{o=n(109)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},function(e,t){},function(e,t,n){(function(e){var r="undefined"!=typeof e&&e||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function i(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new i(a.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new i(a.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(111),t.setImmediate="undefined"!=typeof self&&self.setImmediate||"undefined"!=typeof e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||"undefined"!=typeof e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(46))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var r,a,i,o,s,u=1,c={},l=!1,d=e.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(e);h=h&&h.setTimeout?h:e,"[object process]"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){f(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){i.port2.postMessage(e)}):d&&"onreadystatechange"in d.createElement("script")?(a=d.documentElement,r=function(e){var t=d.createElement("script");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(o="setImmediate$"+Math.random()+"$",s=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&f(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",s,!1):e.attachEvent("onmessage",s),r=function(t){e.postMessage(o+t,"*")}),h.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return c[u]=a,r(u),u++},h.clearImmediate=p}function p(e){delete c[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=c[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{p(e),l=!1}}}}}("undefined"==typeof self?"undefined"==typeof e?this:e:self)}).call(this,n(46),n(50))}]);
//# sourceMappingURL=webnn-polyfill.js.map